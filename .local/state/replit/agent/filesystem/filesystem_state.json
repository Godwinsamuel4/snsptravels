{"file_contents":{"replit.md":{"content":"# Overview\n\nSN.SP Limited is a modern travel agency website built with a React frontend and Express.js backend. The application provides comprehensive travel services including flight bookings, hotel reservations, visa applications, study abroad assistance, and holiday packages. The platform features a professional design with sections for services, tours, blog content, and customer testimonials.\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\n\nThe frontend is built using React 18 with TypeScript and follows a component-based architecture:\n\n- **Framework**: React 18.3.1 with TypeScript for type safety\n- **Routing**: Wouter for client-side routing with pages for Home, Services, Tours, Blog, About, Contact, and Admin sections\n- **Styling**: Tailwind CSS with custom design system using CSS variables for theming\n- **UI Components**: Radix UI primitives with custom styled components following a consistent design pattern\n- **State Management**: React Query (TanStack Query) for server state management\n- **Form Handling**: React Hook Form with Zod validation for type-safe form schemas\n- **Build Tool**: Vite for fast development and optimized production builds\n\nThe component structure separates reusable UI components from page-specific components, with examples provided for development. The design system uses a comprehensive color palette with support for light/dark themes.\n\n## Backend Architecture\n\nThe backend follows a lightweight Express.js architecture:\n\n- **Runtime**: Node.js with TypeScript using ESM modules\n- **Framework**: Express.js for HTTP server and API endpoints\n- **Email Service**: Nodemailer integration for sending confirmation emails\n- **Validation**: Zod for runtime type validation and error handling\n- **CORS**: Manual CORS configuration for frontend-backend communication\n- **Development**: TSX for TypeScript execution in development\n\nThe backend includes health check endpoints, flight booking submission handling, and WhatsApp integration for customer communication. Storage is currently implemented with an in-memory solution but designed to be easily replaceable with database integration.\n\n## Data Storage Solutions\n\nCurrently uses an in-memory storage implementation (`MemStorage`) with interfaces designed for easy migration to persistent storage:\n\n- **User Management**: Interface-based storage with CRUD operations\n- **Database Ready**: Drizzle ORM configuration present for PostgreSQL integration\n- **Schema Definition**: Shared TypeScript schemas between frontend and backend\n\nThe architecture anticipates PostgreSQL as the target database with Drizzle ORM for type-safe database operations.\n\n## Frontend-Backend Communication\n\n- **API Design**: RESTful endpoints with JSON communication\n- **Type Safety**: Shared TypeScript schemas between frontend and backend\n- **Error Handling**: Centralized error handling with proper HTTP status codes\n- **Request Logging**: Middleware for API request logging and monitoring\n\n## Development Workflow\n\n- **Monorepo Structure**: Separate frontend and backend directories with shared types\n- **Path Aliases**: TypeScript path mapping for clean imports\n- **Hot Reload**: Vite HMR for frontend and TSX for backend development\n- **Build Process**: Separate build processes optimized for each environment\n\n# External Dependencies\n\n## Core Frontend Dependencies\n\n- **React Ecosystem**: React, React DOM, React Hook Form for form management\n- **UI Framework**: Comprehensive Radix UI component library for accessibility\n- **Styling**: Tailwind CSS with PostCSS for utility-first styling\n- **Routing**: Wouter for lightweight client-side routing\n- **State Management**: TanStack React Query for server state\n- **Validation**: Zod for schema validation and type safety\n- **Animations**: Framer Motion for smooth UI transitions\n- **Icons**: Lucide React for consistent iconography\n\n## Core Backend Dependencies\n\n- **Server Framework**: Express.js with CORS support\n- **Email Service**: Nodemailer for transactional emails\n- **Validation**: Zod with zod-validation-error for enhanced error messages\n- **Development Tools**: TSX for TypeScript execution, ESBuild for production builds\n\n## Development and Build Tools\n\n- **Build Tools**: Vite for frontend, ESBuild for backend bundling\n- **TypeScript**: Full TypeScript support across the entire stack\n- **Code Quality**: ESLint configuration for code standards\n- **Development Server**: Replit integration with development banners and runtime error overlays\n\n## Deployment and Hosting\n\n- **Vercel Integration**: Configuration files for Vercel deployment\n- **Static Assets**: Public asset serving with attached_assets directory\n- **Environment Configuration**: Separate development and production configurations\n\n## Third-Party Integrations\n\n- **WhatsApp Business**: Direct integration for customer communication\n- **Email Service**: SMTP configuration for customer notifications\n- **Font Loading**: Google Fonts (Inter) integration\n- **Asset Management**: Local asset storage with public serving capabilities\n\nThe architecture is designed for scalability with clear separation of concerns, type safety throughout the stack, and easy deployment to modern hosting platforms.","size_bytes":5278},"frontend/postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"frontend/tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \".5625rem\", /* 9px */\n        md: \".375rem\", /* 6px */\n        sm: \".1875rem\", /* 3px */\n      },\n      colors: {\n        // Flat / base colors (regular buttons)\n        background: \"hsl(var(--background) / <alpha-value>)\",\n        foreground: \"hsl(var(--foreground) / <alpha-value>)\",\n        border: \"hsl(var(--border) / <alpha-value>)\",\n        input: \"hsl(var(--input) / <alpha-value>)\",\n        card: {\n          DEFAULT: \"hsl(var(--card) / <alpha-value>)\",\n          foreground: \"hsl(var(--card-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--card-border) / <alpha-value>)\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover) / <alpha-value>)\",\n          foreground: \"hsl(var(--popover-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--popover-border) / <alpha-value>)\",\n        },\n        primary: {\n          DEFAULT: \"hsl(var(--primary) / <alpha-value>)\",\n          foreground: \"hsl(var(--primary-foreground) / <alpha-value>)\",\n          border: \"var(--primary-border)\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary) / <alpha-value>)\",\n          foreground: \"hsl(var(--secondary-foreground) / <alpha-value>)\",\n          border: \"var(--secondary-border)\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted) / <alpha-value>)\",\n          foreground: \"hsl(var(--muted-foreground) / <alpha-value>)\",\n          border: \"var(--muted-border)\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent) / <alpha-value>)\",\n          foreground: \"hsl(var(--accent-foreground) / <alpha-value>)\",\n          border: \"var(--accent-border)\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive) / <alpha-value>)\",\n          foreground: \"hsl(var(--destructive-foreground) / <alpha-value>)\",\n          border: \"var(--destructive-border)\",\n        },\n        ring: \"hsl(var(--ring) / <alpha-value>)\",\n        chart: {\n          \"1\": \"hsl(var(--chart-1) / <alpha-value>)\",\n          \"2\": \"hsl(var(--chart-2) / <alpha-value>)\",\n          \"3\": \"hsl(var(--chart-3) / <alpha-value>)\",\n          \"4\": \"hsl(var(--chart-4) / <alpha-value>)\",\n          \"5\": \"hsl(var(--chart-5) / <alpha-value>)\",\n        },\n        sidebar: {\n          ring: \"hsl(var(--sidebar-ring) / <alpha-value>)\",\n          DEFAULT: \"hsl(var(--sidebar) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--sidebar-border) / <alpha-value>)\",\n        },\n        \"sidebar-primary\": {\n          DEFAULT: \"hsl(var(--sidebar-primary) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-primary-foreground) / <alpha-value>)\",\n          border: \"var(--sidebar-primary-border)\",\n        },\n        \"sidebar-accent\": {\n          DEFAULT: \"hsl(var(--sidebar-accent) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-accent-foreground) / <alpha-value>)\",\n          border: \"var(--sidebar-accent-border)\"\n        },\n        status: {\n          online: \"rgb(34 197 94)\",\n          away: \"rgb(245 158 11)\",\n          busy: \"rgb(239 68 68)\",\n          offline: \"rgb(156 163 175)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":4050},"frontend/vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"./src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"../shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"./public/attached_assets\"),\n    },\n  },\n  server: {\n    host: \"0.0.0.0\",\n    port: 5173,\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n  build: {\n    outDir: \"dist\",\n    emptyOutDir: true,\n    sourcemap: true,\n  },\n});","size_bytes":937},"backend/src/drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"backend/src/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { fileURLToPath } from \"url\";\nimport { registerRoutes } from \"./routes.js\";\n\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\n\n// Load JSON configuration files\nlet appConfig: any = {};\nlet destinations: any = {};\nlet services: any = {};\n\ntry {\n  appConfig = JSON.parse(fs.readFileSync(path.join(__dirname, \"../config/app.json\"), \"utf8\"));\n  destinations = JSON.parse(fs.readFileSync(path.join(__dirname, \"../data/destinations.json\"), \"utf8\"));\n  services = JSON.parse(fs.readFileSync(path.join(__dirname, \"../data/services.json\"), \"utf8\"));\n  console.log(\"✅ Loaded JSON configuration files successfully\");\n} catch (error) {\n  console.warn(\"⚠️ Could not load some JSON config files:\", error);\n}\n\nconst app = express();\n\n// Configure CORS manually (temporarily until we add cors package)\napp.use((req, res, next) => {\n  res.header('Access-Control-Allow-Origin', process.env.FRONTEND_URL || 'http://localhost:5173');\n  res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');\n  res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept, Authorization');\n  res.header('Access-Control-Allow-Credentials', 'true');\n  \n  if (req.method === 'OPTIONS') {\n    res.sendStatus(200);\n  } else {\n    next();\n  }\n});\n\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\n// Logging middleware for API requests\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      console.log(logLine);\n    }\n  });\n\n  next();\n});\n\n// Health check endpoint\napp.get(\"/health\", (_req, res) => {\n  res.json({ status: \"ok\", timestamp: new Date().toISOString() });\n});\n\n// API endpoints to serve JSON data\napp.get(\"/api/destinations\", (_req, res) => {\n  res.json(destinations);\n});\n\napp.get(\"/api/services\", (_req, res) => {\n  res.json(services);\n});\n\napp.get(\"/api/config\", (_req, res) => {\n  res.json(appConfig);\n});\n\n// Serve API specification\napp.get(\"/api/openapi.json\", (_req, res) => {\n  try {\n    const apiSpec = JSON.parse(fs.readFileSync(path.join(__dirname, \"../api-spec.json\"), \"utf8\"));\n    res.json(apiSpec);\n  } catch (error) {\n    res.status(404).json({ message: \"API specification not found\" });\n  }\n});\n\n// Register other API routes\nregisterRoutes(app);\n\n// Error handling middleware\napp.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n  const status = err.status || err.statusCode || 500;\n  const message = err.message || \"Internal Server Error\";\n  \n  console.error(`Error ${status}: ${message}`, err);\n  res.status(status).json({ message });\n});\n\n// Handle 404 for unknown routes\napp.use(\"*\", (_req, res) => {\n  res.status(404).json({ message: \"Route not found\" });\n});\n\n// Start the server\nconst port = parseInt(process.env.PORT || '8080', 10);\napp.listen(port, \"0.0.0.0\", () => {\n  console.log(`Backend API server running on port ${port}`);\n});","size_bytes":3650},"backend/src/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport nodemailer from \"nodemailer\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Health check endpoint\n  app.get(\"/health\", (req, res) => {\n    res.status(200).json({ \n      status: \"healthy\", \n      timestamp: new Date().toISOString(),\n      uptime: process.uptime() \n    });\n  });\n\n  // Flight booking submission endpoint\n  app.post(\"/api/flight-booking\", async (req, res) => {\n    try {\n      const bookingData = req.body;\n      \n      // Format the booking data for WhatsApp message\n      const message = formatBookingMessage(bookingData);\n      \n      // Send WhatsApp message\n      const whatsappUrl = `https://wa.me/2347032615370?text=${encodeURIComponent(message)}`;\n      \n      // Send confirmation email to customer\n      await sendConfirmationEmail(bookingData);\n      \n      // Save booking data (you can implement database storage here)\n      console.log(\"Booking received:\", bookingData);\n      console.log(\"WhatsApp message would be sent:\", message);\n      console.log(\"WhatsApp URL:\", whatsappUrl);\n      \n      res.json({ \n        success: true, \n        message: \"Booking request received successfully\",\n        whatsappUrl \n      });\n      \n    } catch (error) {\n      console.error(\"Error processing booking:\", error);\n      res.status(500).json({ \n        success: false, \n        message: \"Failed to process booking request\" \n      });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n\nfunction formatBookingMessage(data: any): string {\n  const fromCountry = data.from ? `(${data.from.toUpperCase()})` : '';\n  const toCountry = data.to ? `(${data.to.toUpperCase()})` : '';\n  \n  return `🛫 NEW FLIGHT BOOKING REQUEST\n\n👤 Name: ${data.fullName}\n📧 Email: ${data.email}\n📱 Phone: ${data.phone}\n\n✈️ FLIGHT DETAILS:\n📍 From: ${fromCountry}\n📍 To: ${toCountry}\n📅 Departure: ${data.departureDate}\n📅 Return: ${data.returnDate || 'One way'}\n👥 Passengers: ${data.passengers}\n🎫 Class: ${data.class}\n\n💬 Special Requests: ${data.specialRequests || 'None'}\n\nPlease contact the customer within 24 hours.`;\n}\n\nasync function sendConfirmationEmail(bookingData: any) {\n  // Create a test account for development (you should use real SMTP credentials in production)\n  const testAccount = await nodemailer.createTestAccount();\n  \n  const transporter = nodemailer.createTransporter({\n    host: \"smtp.ethereal.email\", // Use your actual SMTP server in production\n    port: 587,\n    secure: false,\n    auth: {\n      user: testAccount.user,\n      pass: testAccount.pass,\n    },\n  });\n\n  const mailOptions = {\n    from: '\"SN-SP Travel\" <noreply@snsp.com>',\n    to: bookingData.email,\n    subject: \"Flight Booking Request Confirmation - SN-SP Travel\",\n    html: `\n      <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n        <h2 style=\"color: #2563eb;\">Thank you for your flight booking request!</h2>\n        \n        <p>Dear ${bookingData.fullName},</p>\n        \n        <p>We have successfully received your flight booking request. Our team will review your requirements and contact you within 24 hours with personalized flight options.</p>\n        \n        <div style=\"background-color: #f3f4f6; padding: 20px; border-radius: 8px; margin: 20px 0;\">\n          <h3 style=\"margin-top: 0; color: #374151;\">Your Booking Details:</h3>\n          <p><strong>From:</strong> ${bookingData.from ? bookingData.from.toUpperCase() : 'Not specified'}</p>\n          <p><strong>To:</strong> ${bookingData.to ? bookingData.to.toUpperCase() : 'Not specified'}</p>\n          <p><strong>Departure Date:</strong> ${bookingData.departureDate}</p>\n          <p><strong>Return Date:</strong> ${bookingData.returnDate || 'One way'}</p>\n          <p><strong>Passengers:</strong> ${bookingData.passengers}</p>\n          <p><strong>Class:</strong> ${bookingData.class}</p>\n          ${bookingData.specialRequests ? `<p><strong>Special Requests:</strong> ${bookingData.specialRequests}</p>` : ''}\n        </div>\n        \n        <p>If you have any immediate questions, please don't hesitate to contact us:</p>\n        <ul>\n          <li>WhatsApp: +234 703 261 5370</li>\n          <li>Email: info@snsp.com</li>\n        </ul>\n        \n        <p>Thank you for choosing SN-SP Travel!</p>\n        \n        <hr style=\"border: none; border-top: 1px solid #e5e7eb; margin: 30px 0;\">\n        <p style=\"color: #6b7280; font-size: 14px;\">\n          This is an automated confirmation email. Please do not reply to this email.\n        </p>\n      </div>\n    `,\n  };\n\n  try {\n    const info = await transporter.sendMail(mailOptions);\n    console.log(\"Confirmation email sent:\", info.messageId);\n    console.log(\"Preview URL:\", nodemailer.getTestMessageUrl(info));\n  } catch (error) {\n    console.error(\"Error sending confirmation email:\", error);\n  }\n}\n","size_bytes":4959},"backend/src/storage.ts":{"content":"import { type User, type InsertUser } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n\n  constructor() {\n    this.users = new Map();\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":993},"backend/src/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"..\", \"dist\", \"public\");\n  const attachedAssetsPath = path.resolve(import.meta.dirname, \"..\", \"attached_assets\");\n\n  // Serve attached assets\n  app.use('/attached_assets', express.static(attachedAssetsPath));\n\n  if (fs.existsSync(distPath)) {\n    app.use(express.static(distPath));\n\n    app.get(\"*\", (req, res) => {\n      if (!req.path.startsWith(\"/api\")) {\n        res.sendFile(path.join(distPath, \"index.html\"));\n      }\n    });\n  } else {\n    log(\"Build directory not found. Please run 'npm run build' first.\");\n  }\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}","size_bytes":2881},"backend/src/vite_middleware.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}","size_bytes":1799},"frontend/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport Home from \"@/pages/Home\";\nimport Blog from \"@/pages/Blog\";\nimport Tours from \"@/pages/Tours\";\nimport EnhancedAbout from \"@/pages/EnhancedAbout\";\nimport EnhancedContact from \"@/pages/EnhancedContact\";\nimport FlightServices from \"@/pages/services/FlightServices\";\nimport HotelServices from \"@/pages/services/HotelServices\";\nimport VisaServices from \"@/pages/services/VisaServices\";\nimport StudyAbroad from \"@/pages/services/StudyAbroad\";\nimport HolidayPackages from \"@/pages/services/HolidayPackages\";\nimport TravelAdvisory from \"@/pages/services/TravelAdvisory\";\nimport AdminLogin from \"@/pages/admin/AdminLogin\";\nimport AdminDashboard from \"@/pages/admin/AdminDashboard\";\nimport BookingManagement from \"@/pages/admin/BookingManagement\";\nimport BlogManagement from \"@/pages/admin/BlogManagement\";\nimport InquiryManagement from \"@/pages/admin/InquiryManagement\";\nimport TourManagement from \"@/pages/admin/TourManagement\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router() {\n  return (\n    <Switch>\n      {/* Main Pages */}\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/blog\" component={Blog} />\n      <Route path=\"/tours\" component={Tours} />\n      <Route path=\"/about\" component={EnhancedAbout} />\n      <Route path=\"/contact\" component={EnhancedContact} />\n\n      {/* Service Pages */}\n      <Route path=\"/services/flights\" component={FlightServices} />\n      <Route path=\"/services/hotels\" component={HotelServices} />\n      <Route path=\"/services/visa\" component={VisaServices} />\n      <Route path=\"/services/study-abroad\" component={StudyAbroad} />\n      <Route path=\"/services/holidays\" component={HolidayPackages} />\n      <Route path=\"/services/advisory\" component={TravelAdvisory} />\n\n      {/* Admin Routes */}\n      <Route path=\"/admin\" component={AdminLogin} />\n      <Route path=\"/admin/login\" component={AdminLogin} />\n      <Route path=\"/admin/dashboard\" component={AdminDashboard} />\n      <Route path=\"/admin/bookings\" component={BookingManagement} />\n      <Route path=\"/admin/blog\" component={BlogManagement} />\n      <Route path=\"/admin/inquiries\" component={InquiryManagement} />\n      <Route path=\"/admin/tours\" component={TourManagement} />\n\n      {/* Fallback to 404 */}\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;","size_bytes":2764},"frontend/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* LIGHT MODE */\n:root {\n  --button-outline: rgba(0,0,0, .10);\n  --badge-outline: rgba(0,0,0, .05);\n\n  /* Automatic computation of border around primary / danger buttons */\n  --opaque-button-border-intensity: -8; /* In terms of percentages */\n\n  /* Backgrounds applied on top of other backgrounds when hovered/active */\n  --elevate-1: rgba(0,0,0, .03);\n  --elevate-2: rgba(0,0,0, .08);\n\n  --background: 45 20% 97%;\n\n  --foreground: 220 15% 15%;\n\n  --border: 220 10% 85%;\n\n  --card: 45 15% 95%;\n\n  --card-foreground: 220 15% 15%;\n\n  --card-border: 220 10% 88%;\n\n  --sidebar: 45 10% 92%;\n\n  --sidebar-foreground: 220 15% 15%;\n\n  --sidebar-border: 220 10% 85%;\n\n  --sidebar-primary: 220 85% 25%;\n\n  --sidebar-primary-foreground: 45 20% 97%;\n\n  --sidebar-accent: 220 20% 88%;\n\n  --sidebar-accent-foreground: 220 85% 25%;\n\n  --sidebar-ring: 220 85% 25%;\n\n  --popover: 45 12% 93%;\n\n  --popover-foreground: 220 15% 15%;\n\n  --popover-border: 220 10% 82%;\n\n  --primary: 220 85% 25%;\n\n  --primary-foreground: 45 20% 97%;\n\n  --secondary: 220 15% 90%;\n\n  --secondary-foreground: 220 15% 15%;\n\n  --muted: 220 8% 89%;\n\n  --muted-foreground: 220 10% 45%;\n\n  --accent: 200 70% 85%;\n\n  --accent-foreground: 220 85% 25%;\n\n  --destructive: 0 75% 45%;\n\n  --destructive-foreground: 0 0% 98%;\n\n  --input: 220 15% 75%;\n  --ring: 220 85% 25%;\n  --chart-1: 220 85% 25%;\n  --chart-2: 25 90% 60%;\n  --chart-3: 200 70% 50%;\n  --chart-4: 45 85% 45%;\n  --chart-5: 280 60% 50%;\n\n  --font-sans: Inter, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: Menlo, monospace;\n  --radius: .5rem; /* 8px */\n  --shadow-2xs: 0px 1px 2px 0px hsl(220 10% 20% / 0.03);\n  --shadow-xs: 0px 1px 2px 0px hsl(220 10% 20% / 0.05);\n  --shadow-sm: 0px 1px 3px 0px hsl(220 10% 20% / 0.1), 0px 1px 2px -1px hsl(220 10% 20% / 0.1);\n  --shadow: 0px 1px 3px 0px hsl(220 10% 20% / 0.1), 0px 1px 2px -1px hsl(220 10% 20% / 0.1);\n  --shadow-md: 0px 4px 6px -1px hsl(220 10% 20% / 0.1), 0px 2px 4px -2px hsl(220 10% 20% / 0.1);\n  --shadow-lg: 0px 10px 15px -3px hsl(220 10% 20% / 0.1), 0px 4px 6px -4px hsl(220 10% 20% / 0.1);\n  --shadow-xl: 0px 20px 25px -5px hsl(220 10% 20% / 0.1), 0px 8px 10px -6px hsl(220 10% 20% / 0.1);\n  --shadow-2xl: 0px 25px 50px -12px hsl(220 10% 20% / 0.25);\n  --tracking-normal: 0em;\n  --spacing: 0.25rem;\n\n  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */\n\n  /* Fallback for older browsers */\n  --sidebar-primary-border: hsl(var(--sidebar-primary));\n  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --sidebar-accent-border: hsl(var(--sidebar-accent));\n  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --primary-border: hsl(var(--primary));\n  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --secondary-border: hsl(var(--secondary));\n  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --muted-border: hsl(var(--muted));\n  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --accent-border: hsl(var(--accent));\n  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --destructive-border: hsl(var(--destructive));\n  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n}\n\n.dark {\n  --button-outline: rgba(255,255,255, .10);\n  --badge-outline: rgba(255,255,255, .05);\n\n  --opaque-button-border-intensity: 9;  /* In terms of percentages */\n\n  /* Backgrounds applied on top of other backgrounds when hovered/active */\n  --elevate-1: rgba(255,255,255, .04);\n  --elevate-2: rgba(255,255,255, .09);\n\n  --background: 220 15% 8%;\n\n  --foreground: 45 20% 95%;\n\n  --border: 220 10% 18%;\n\n  --card: 220 10% 12%;\n\n  --card-foreground: 45 20% 95%;\n\n  --card-border: 220 10% 22%;\n\n  --sidebar: 220 12% 10%;\n\n  --sidebar-foreground: 45 20% 95%;\n\n  --sidebar-border: 220 10% 20%;\n\n  --sidebar-primary: 220 85% 25%;\n\n  --sidebar-primary-foreground: 45 20% 97%;\n\n  --sidebar-accent: 220 15% 18%;\n\n  --sidebar-accent-foreground: 200 70% 85%;\n\n  --sidebar-ring: 220 85% 25%;\n\n  --popover: 220 8% 15%;\n\n  --popover-foreground: 45 20% 95%;\n\n  --popover-border: 220 10% 25%;\n\n  --primary: 220 85% 25%;\n\n  --primary-foreground: 45 20% 97%;\n\n  --secondary: 220 10% 20%;\n\n  --secondary-foreground: 45 20% 95%;\n\n  --muted: 220 8% 16%;\n\n  --muted-foreground: 220 5% 65%;\n\n  --accent: 220 12% 18%;\n\n  --accent-foreground: 200 70% 85%;\n\n  --destructive: 0 75% 45%;\n\n  --destructive-foreground: 0 0% 98%;\n\n  --input: 220 10% 30%;\n  --ring: 220 85% 25%;\n  --chart-1: 200 70% 85%;\n  --chart-2: 25 90% 70%;\n  --chart-3: 200 80% 75%;\n  --chart-4: 45 85% 75%;\n  --chart-5: 280 60% 70%;\n\n  --shadow-2xs: 0px 1px 2px 0px hsl(220 15% 5% / 0.15);\n  --shadow-xs: 0px 1px 2px 0px hsl(220 15% 5% / 0.20);\n  --shadow-sm: 0px 1px 3px 0px hsl(220 15% 5% / 0.3), 0px 1px 2px -1px hsl(220 15% 5% / 0.3);\n  --shadow: 0px 1px 3px 0px hsl(220 15% 5% / 0.3), 0px 1px 2px -1px hsl(220 15% 5% / 0.3);\n  --shadow-md: 0px 4px 6px -1px hsl(220 15% 5% / 0.3), 0px 2px 4px -2px hsl(220 15% 5% / 0.3);\n  --shadow-lg: 0px 10px 15px -3px hsl(220 15% 5% / 0.3), 0px 4px 6px -4px hsl(220 15% 5% / 0.3);\n  --shadow-xl: 0px 20px 25px -5px hsl(220 15% 5% / 0.3), 0px 8px 10px -6px hsl(220 15% 5% / 0.3);\n  --shadow-2xl: 0px 25px 50px -12px hsl(220 15% 5% / 0.5);\n\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n}\n\n/**\n * Using the elevate system.\n * Automatic contrast adjustment.\n *\n * <element className=\"hover-elevate\" />\n * <element className=\"active-elevate-2\" />\n *\n * // Using the tailwind utility when a data attribute is \"on\"\n * <element className=\"toggle-elevate data-[state=on]:toggle-elevated\" />\n * // Or manually controlling the toggle state\n * <element className=\"toggle-elevate toggle-elevated\" />\n *\n * Elevation systems have to handle many states.\n * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)\n * - toggled or not\n * - focused or not (this is not handled with these utilities)\n *\n * Even without handling focused or not, this is six possible combinations that\n * need to be distinguished from eachother visually.\n */\n@layer utilities {\n\n  /* Hide ugly search cancel button in Chrome until we can style it properly */\n  input[type=\"search\"]::-webkit-search-cancel-button {\n    @apply hidden;\n  }\n\n  /* Placeholder styling for contentEditable div */\n  [contenteditable][data-placeholder]:empty::before {\n    content: attr(data-placeholder);\n    color: hsl(var(--muted-foreground));\n    pointer-events: none;\n  }\n\n  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of\n   * buttons/badges can remove the automatic brightness adjustment on interactions\n   * and program their own. */\n  .no-default-hover-elevate {}\n\n  .no-default-active-elevate {}\n\n\n  /**\n   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.\n   * This way they can stack/compound. Both will overlap the parent's borders!\n   * So borders will be automatically adjusted both on toggle, and hover/active,\n   * and they will be compounded.\n   */\n  .toggle-elevate::before,\n  .toggle-elevate-2::before {\n    content: \"\";\n    pointer-events: none;\n    position: absolute;\n    inset: 0px;\n    /*border-radius: inherit;   match rounded corners */\n    border-radius: inherit;\n    z-index: -1;\n    /* sits behind content but above backdrop */\n  }\n\n  .toggle-elevate.toggle-elevated::before {\n    background-color: var(--elevate-2);\n  }\n\n  /* If there's a 1px border, adjust the inset so that it covers that parent's border */\n  .border.toggle-elevate::before {\n    inset: -1px;\n  }\n\n  /* Does not work on elements with overflow:hidden! */\n  .hover-elevate:not(.no-default-hover-elevate),\n  .active-elevate:not(.no-default-active-elevate),\n  .hover-elevate-2:not(.no-default-hover-elevate),\n  .active-elevate-2:not(.no-default-active-elevate) {\n    position: relative;\n    z-index: 0;\n  }\n\n  .hover-elevate:not(.no-default-hover-elevate)::after,\n  .active-elevate:not(.no-default-active-elevate)::after,\n  .hover-elevate-2:not(.no-default-hover-elevate)::after,\n  .active-elevate-2:not(.no-default-active-elevate)::after {\n    content: \"\";\n    pointer-events: none;\n    position: absolute;\n    inset: 0px;\n    /*border-radius: inherit;   match rounded corners */\n    border-radius: inherit;\n    z-index: 999;\n    /* sits in front of content */\n  }\n\n  .hover-elevate:hover:not(.no-default-hover-elevate)::after,\n  .active-elevate:active:not(.no-default-active-elevate)::after {\n    background-color: var(--elevate-1);\n  }\n\n  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,\n  .active-elevate-2:active:not(.no-default-active-elevate)::after {\n    background-color: var(--elevate-2);\n  }\n\n  /* If there's a 1px border, adjust the inset so that it covers that parent's border */\n  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,\n  .border.active-elevate:not(.no-active-interaction-elevate)::after,\n  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,\n  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,\n  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {\n    inset: -1px;\n  }\n}","size_bytes":9835},"frontend/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"frontend/src/vite-env.d.ts":{"content":"/// <reference types=\"vite/client\" />\n\ninterface ImportMetaEnv {\n  readonly VITE_API_URL: string\n}\n\ninterface ImportMeta {\n  readonly env: ImportMetaEnv\n}","size_bytes":154},"frontend/src/components/About.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { CheckCircle, Users, Target, Award } from \"lucide-react\";\nimport ceoImage from \"@assets/generated_images/Professional_CEO_headshot_portrait_989b0458.png\";\nimport officeImage from \"@assets/generated_images/Modern_office_interior_setting_852e7d49.png\";\n\nconst features = [\n  {\n    icon: Users,\n    title: \"Experienced Team\",\n    description: \"Seasoned travel professionals dedicated to crafting perfect travel experiences.\",\n  },\n  {\n    icon: Target,\n    title: \"Customized Solutions\",\n    description: \"Personalized travel arrangements tailored to your specific needs and preferences.\",\n  },\n  {\n    icon: CheckCircle,\n    title: \"Exceptional Service\",\n    description: \"Customer satisfaction is our top priority with 24/7 support and expert guidance.\",\n  },\n  {\n    icon: Award,\n    title: \"Competitive Pricing\",\n    description: \"Excellent value for money with competitive pricing without compromising quality.\",\n  },\n];\n\nexport default function About() {\n  const scrollToContact = () => {\n    const element = document.querySelector(\"#contact\");\n    if (element) {\n      element.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n\n  return (\n    <section id=\"about\" className=\"py-24 bg-muted/30\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Company Story */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center mb-20\">\n          <div>\n            <h2 className=\"text-3xl md:text-4xl font-bold text-foreground mb-6\">\n              Who We Are\n            </h2>\n            <p className=\"text-lg text-muted-foreground mb-6\">\n              Snowy Spring Global Travels and Tours (SSG Travels) is a privately owned travel management \n              company headquartered in Ibadan, Nigeria. The vision for SSG Travels was conceived in 2017 \n              by our CEO, Oluwaseun Abioye—a seasoned travel professional with years of experience working \n              alongside global leaders in the travel industry.\n            </p>\n            <p className=\"text-lg text-muted-foreground mb-8\">\n              Officially launched in May 2020, SSG Travels was founded with a commitment to delivering \n              quality, reliable, and customer-centered travel solutions. Our mission is to make every \n              journey seamless, memorable, and tailored to meet the unique needs of our clients.\n            </p>\n            <Button onClick={scrollToContact} data-testid=\"button-about-contact\">\n              Get Started Today\n            </Button>\n          </div>\n          \n          <div className=\"relative\">\n            <img\n              src={officeImage}\n              alt=\"SN.SP Office Interior\"\n              className=\"rounded-lg shadow-lg w-full\"\n              data-testid=\"img-office\"\n            />\n          </div>\n        </div>\n\n        {/* CEO Section */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center mb-20\">\n          <div className=\"lg:order-2\">\n            <div className=\"text-center\">\n              <img\n                src={ceoImage}\n                alt=\"Oluwaseun Abioye, CEO of SSG Travels\"\n                className=\"w-48 h-48 rounded-full mx-auto mb-6 object-cover shadow-lg\"\n                data-testid=\"img-ceo\"\n              />\n              <h3 className=\"text-2xl font-bold text-foreground mb-2\">Oluwaseun Abioye</h3>\n              <p className=\"text-lg text-muted-foreground\">CEO, SSG Travels</p>\n            </div>\n          </div>\n          \n          <div className=\"lg:order-1\">\n            <h3 className=\"text-2xl font-bold text-foreground mb-6\">\n              Leadership Excellence\n            </h3>\n            <p className=\"text-lg text-muted-foreground mb-6\">\n              Under the visionary leadership of Oluwaseun Abioye, SSG Travels has grown from a \n              concept to a trusted name in the Nigerian travel industry. With extensive experience \n              in travel management and a deep understanding of customer needs, our CEO ensures \n              that every client receives world-class service.\n            </p>\n            <p className=\"text-lg text-muted-foreground\">\n              Our commitment to excellence and innovation continues to drive us forward, making \n              us the preferred choice for travelers seeking reliable and professional travel services.\n            </p>\n          </div>\n        </div>\n\n        {/* Why Choose Us */}\n        <div className=\"text-center mb-12\">\n          <h3 className=\"text-3xl font-bold text-foreground mb-4\">\n            Why Choose SN.SP Limited\n          </h3>\n          <p className=\"text-lg text-muted-foreground\">\n            We Are The Best Travel Agency in Ibadan\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n          {features.map((feature, index) => {\n            const IconComponent = feature.icon;\n            return (\n              <Card key={index} className=\"text-center h-full\" data-testid={`card-feature-${index}`}>\n                <CardContent className=\"pt-6\">\n                  <div className=\"w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                    <IconComponent className=\"h-6 w-6 text-primary\" />\n                  </div>\n                  <h4 className=\"text-xl font-semibold text-foreground mb-3\">{feature.title}</h4>\n                  <p className=\"text-muted-foreground\">{feature.description}</p>\n                </CardContent>\n              </Card>\n            );\n          })}\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":5679},"frontend/src/components/Contact.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { MapPin, Clock, Phone, Mail, Send, MessageCircle } from \"lucide-react\";\n\ninterface ContactFormData {\n  fullName: string;\n  email: string;\n  phone: string;\n  service: string;\n  message: string;\n}\n\nexport default function Contact() {\n  const [formData, setFormData] = useState<ContactFormData>({\n    fullName: \"\",\n    email: \"\",\n    phone: \"\",\n    service: \"\",\n    message: \"\",\n  });\n\n  const handleInputChange = (field: keyof ContactFormData, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    console.log(`Updated ${field}:`, value);\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    console.log(\"Contact form submitted:\", formData);\n    alert(\"Thank you for your message! We'll get back to you soon.\");\n    // Reset form\n    setFormData({\n      fullName: \"\",\n      email: \"\",\n      phone: \"\",\n      service: \"\",\n      message: \"\",\n    });\n  };\n\n  return (\n    <section id=\"contact\" className=\"py-24 bg-background\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-foreground mb-4\">\n            Contact Us\n          </h2>\n          <p className=\"text-lg text-muted-foreground\">\n            Let's Get in Touch\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12\">\n          {/* Contact Information */}\n          <div className=\"space-y-8\">\n            <div>\n              <h3 className=\"text-2xl font-bold text-foreground mb-8\">\n                Get in Touch\n              </h3>\n              <p className=\"text-lg text-muted-foreground mb-8\">\n                Ready to embark on your next adventure? Contact SN.SP now to start planning\n                your perfect getaway. Our dedicated team is here to provide personalized travel\n                solutions at unbeatable prices.\n              </p>\n            </div>\n\n            {/* Contact Details */}\n            <div className=\"space-y-6\">\n              <div className=\"flex items-start space-x-4\">\n                <div className=\"w-10 h-10 bg-primary/10 rounded-lg flex items-center justify-center flex-shrink-0\">\n                  <MapPin className=\"h-5 w-5 text-primary\" />\n                </div>\n                <div>\n                  <h4 className=\"font-semibold text-foreground mb-1\">Nigeria Office</h4>\n                  <p className=\"text-muted-foreground\">Suite 15, Damin Plaza, Ring Road, Ibadan</p>\n                </div>\n              </div>\n\n              <div className=\"flex items-start space-x-4\">\n                <div className=\"w-10 h-10 bg-primary/10 rounded-lg flex items-center justify-center flex-shrink-0\">\n                  <Clock className=\"h-5 w-5 text-primary\" />\n                </div>\n                <div>\n                  <h4 className=\"font-semibold text-foreground mb-1\">Business Hours</h4>\n                  <p className=\"text-muted-foreground\">Monday – Friday, 9:00 am – 5:00 pm</p>\n                </div>\n              </div>\n\n              <div className=\"flex items-start space-x-4\">\n                <div className=\"w-10 h-10 bg-primary/10 rounded-lg flex items-center justify-center flex-shrink-0\">\n                  <Phone className=\"h-5 w-5 text-primary\" />\n                </div>\n                <div>\n                  <h4 className=\"font-semibold text-foreground mb-1\">Phone Numbers</h4>\n                  <p className=\"text-muted-foreground\">+234 703 261 5370</p>\n                  <p className=\"text-muted-foreground\">+234 901 593 2925</p>\n                </div>\n              </div>\n\n              <div className=\"flex items-start space-x-4\">\n                <div className=\"w-10 h-10 bg-primary/10 rounded-lg flex items-center justify-center flex-shrink-0\">\n                  <Mail className=\"h-5 w-5 text-primary\" />\n                </div>\n                <div>\n                  <h4 className=\"font-semibold text-foreground mb-1\">Email</h4>\n                  <p className=\"text-muted-foreground\">info@snsp.com</p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Contact Form */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Send us a Message</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <form onSubmit={handleSubmit} className=\"space-y-6\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"contactFullName\">Full Name</Label>\n                  <Input\n                    id=\"contactFullName\"\n                    value={formData.fullName}\n                    onChange={(e) => handleInputChange(\"fullName\", e.target.value)}\n                    data-testid=\"input-contact-name\"\n                    required\n                  />\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"contactEmail\">Email Address</Label>\n                  <Input\n                    id=\"contactEmail\"\n                    type=\"email\"\n                    value={formData.email}\n                    onChange={(e) => handleInputChange(\"email\", e.target.value)}\n                    data-testid=\"input-contact-email\"\n                    required\n                  />\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"contactPhone\">Phone Number</Label>\n                  <Input\n                    id=\"contactPhone\"\n                    value={formData.phone}\n                    onChange={(e) => handleInputChange(\"phone\", e.target.value)}\n                    data-testid=\"input-contact-phone\"\n                    required\n                  />\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"contactService\">Select Service</Label>\n                  <Select value={formData.service} onValueChange={(value) => handleInputChange(\"service\", value)}>\n                    <SelectTrigger data-testid=\"select-contact-service\">\n                      <SelectValue placeholder=\"Choose a service\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"flight-booking\">Flight Booking</SelectItem>\n                      <SelectItem value=\"hotel-booking\">Hotel Booking</SelectItem>\n                      <SelectItem value=\"visa-application\">Visa Application</SelectItem>\n                      <SelectItem value=\"holiday-packages\">Holiday Packages</SelectItem>\n                      <SelectItem value=\"study-abroad\">Study Abroad</SelectItem>\n                      <SelectItem value=\"travel-advisories\">Travel Advisories</SelectItem>\n                      <SelectItem value=\"general-inquiry\">General Inquiry</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"contactMessage\">Tell us about your travel needs...</Label>\n                  <Textarea\n                    id=\"contactMessage\"\n                    value={formData.message}\n                    onChange={(e) => handleInputChange(\"message\", e.target.value)}\n                    rows={4}\n                    data-testid=\"textarea-contact-message\"\n                    required\n                  />\n                </div>\n\n                <Button type=\"submit\" size=\"lg\" className=\"w-full\" data-testid=\"button-send-message\">\n                  <Send className=\"mr-2 h-5 w-5\" />\n                  Send Message\n                </Button>\n              </form>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Map Section */}\n        <div className=\"mt-16\">\n          <h3 className=\"text-2xl font-bold text-foreground mb-8 text-center\">Find Us Here</h3>\n          <div className=\"rounded-lg overflow-hidden shadow-lg\">\n            <iframe\n              src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3956.3728652524154!2d3.9145!3d7.4275!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x10398d77eab73817%3A0x9c67b1a52fc47e3e!2sRing%20Rd%2C%20Ibadan%2C%20Oyo%20State%2C%20Nigeria!5e0!3m2!1sen!2s!4v1673000000000!5m2!1sen!2s\"\n              width=\"100%\"\n              height=\"400\"\n              style={{ border: 0 }}\n              allowFullScreen\n              loading=\"lazy\"\n              referrerPolicy=\"no-referrer-when-downgrade\"\n              title=\"SN.SP Office Location - Ring Road, Ibadan\"\n              className=\"w-full\"\n            ></iframe>\n          </div>\n          <div className=\"mt-4 text-center\">\n            <p className=\"text-sm text-muted-foreground\">\n              📍 Suite 15, Damin Plaza, Ring Road, Ibadan, Oyo State, Nigeria\n            </p>\n          </div>\n        </div>\n\n        {/* Call to Action */}\n        <div className=\"mt-16 text-center bg-primary/5 rounded-lg p-8\">\n          <h3 className=\"text-2xl font-bold text-foreground mb-4\">\n            Plan Your Dream Trip Today!\n          </h3>\n          <p className=\"text-lg text-muted-foreground mb-6 max-w-2xl mx-auto\">\n            Ready to embark on your next adventure? Contact SN.SP now to start planning your\n            perfect getaway. Our dedicated team is here to provide personalized travel solutions\n            at unbeatable prices.\n          </p>\n          <Button size=\"lg\" onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })} data-testid=\"button-get-started\">\n            Get Started\n          </Button>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":9933},"frontend/src/components/FlightBookingForm.tsx":{"content":"\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Plane, Calendar, Users, MapPin } from \"lucide-react\";\nimport { useEffect } from \"react\";\n\ninterface FormData {\n  fullName: string;\n  email: string;\n  phone: string;\n  from: string;\n  to: string;\n  departureDate: string;\n  returnDate: string;\n  passengers: string;\n  class: string;\n  specialRequests: string;\n}\n\ninterface Airport {\n  IATA: string;\n  ICAO: string;\n  \"Airport name\": string;\n  Country: string;\n  City: string;\n}\n\n// Parse CSV data into airport objects\nconst parseAirportsCSV = (csvText: string): Airport[] => {\n  const lines = csvText.split('\\n');\n  const headers = lines[0].split(',').map(h => h.replace(/\"/g, ''));\n  \n  return lines.slice(1).map(line => {\n    if (!line.trim()) return null;\n    \n    const values: string[] = [];\n    let inQuotes = false;\n    let currentValue = '';\n    \n    for (let i = 0; i < line.length; i++) {\n      const char = line[i];\n      \n      if (char === '\"') {\n        inQuotes = !inQuotes;\n      } else if (char === ',' && !inQuotes) {\n        values.push(currentValue);\n        currentValue = '';\n      } else {\n        currentValue += char;\n      }\n    }\n    values.push(currentValue);\n    \n    const airport: any = {};\n    headers.forEach((header, index) => {\n      airport[header] = values[index] || '';\n    });\n    \n    return airport as Airport;\n  }).filter(Boolean) as Airport[];\n};\n\n// Default airports will be loaded dynamically\nconst defaultAirports: Airport[] = [];\n\ninterface AirportSearchInputProps {\n  value: string;\n  onChange: (value: string) => void;\n  placeholder: string;\n  label: string;\n  icon: React.ReactNode;\n  testId: string;\n}\n\nfunction AirportSearchInput({ value, onChange, placeholder, label, icon, testId }: AirportSearchInputProps) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [filteredAirports, setFilteredAirports] = useState<Airport[]>([]);\n  const [airports, setAirports] = useState<Airport[]>(defaultAirports);\n\n  // Load airports data on component mount\n  useEffect(() => {\n    const loadAirports = async () => {\n      try {\n        const response = await fetch('/attached_assets/airports_1758095295993.csv');\n        const csvText = await response.text();\n        const parsedAirports = parseAirportsCSV(csvText);\n        setAirports(parsedAirports);\n      } catch (error) {\n        console.error('Failed to load airports data:', error);\n        // Keep using empty array as fallback\n      }\n    };\n    loadAirports();\n  }, []);\n\n  // Sync searchTerm with value prop for proper display\n  useEffect(() => {\n    if (value && airports.length > 0) {\n      const selectedAirport = airports.find(airport => airport.IATA === value);\n      if (selectedAirport) {\n        const displayValue = `${selectedAirport.IATA} - ${selectedAirport[\"Airport name\"]}, ${selectedAirport.City}, ${selectedAirport.Country}`;\n        setSearchTerm(displayValue);\n      }\n    } else if (!value) {\n      setSearchTerm(\"\");\n    }\n  }, [value, airports]);\n\n  const handleInputChange = (inputValue: string) => {\n    setSearchTerm(inputValue);\n    \n    if (inputValue.length === 0) {\n      // Show all airports when input is empty\n      setFilteredAirports(airports.slice(0, 10));\n      setShowSuggestions(true);\n    } else {\n      // Filter airports based on input\n      const filtered = airports.filter(airport => \n        airport.IATA.toLowerCase().includes(inputValue.toLowerCase()) ||\n        airport[\"Airport name\"].toLowerCase().includes(inputValue.toLowerCase()) ||\n        airport.City.toLowerCase().includes(inputValue.toLowerCase()) ||\n        airport.Country.toLowerCase().includes(inputValue.toLowerCase())\n      ).slice(0, 10); // Limit to 10 suggestions\n      \n      setFilteredAirports(filtered);\n      setShowSuggestions(true);\n    }\n  };\n\n  const handleSuggestionSelect = (airport: Airport) => {\n    const displayValue = `${airport.IATA} - ${airport[\"Airport name\"]}, ${airport.City}, ${airport.Country}`;\n    setSearchTerm(displayValue);\n    onChange(airport.IATA);\n    setShowSuggestions(false);\n  };\n\n  const handleInputFocus = () => {\n    // Always show suggestions on focus\n    if (searchTerm.length === 0) {\n      setFilteredAirports(airports.slice(0, 10));\n    } else {\n      const filtered = airports.filter(airport => \n        airport.IATA.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        airport[\"Airport name\"].toLowerCase().includes(searchTerm.toLowerCase()) ||\n        airport.City.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        airport.Country.toLowerCase().includes(searchTerm.toLowerCase())\n      ).slice(0, 10);\n      setFilteredAirports(filtered);\n    }\n    setShowSuggestions(true);\n  };\n\n  const handleInputBlur = (e: React.FocusEvent) => {\n    // Check if the blur is because we're clicking on a suggestion\n    if (e.relatedTarget && e.relatedTarget.closest('.suggestions-dropdown')) {\n      return; // Don't hide suggestions if clicking on dropdown\n    }\n    // Delay hiding suggestions to allow for clicks\n    setTimeout(() => setShowSuggestions(false), 300);\n  };\n\n  return (\n    <div className=\"space-y-2 relative\">\n      <Label htmlFor={testId} className=\"flex items-center gap-2\">\n        {icon}\n        {label}\n      </Label>\n      <Input\n        id={testId}\n        placeholder={placeholder}\n        value={searchTerm}\n        onChange={(e) => handleInputChange(e.target.value)}\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        data-testid={testId}\n        required\n        autoComplete=\"off\"\n      />\n      \n      {showSuggestions && filteredAirports.length > 0 && (\n        <div className=\"absolute top-full left-0 right-0 z-50 bg-white border border-gray-200 rounded-md shadow-lg max-h-60 overflow-y-auto mt-1 suggestions-dropdown\">\n          {filteredAirports.map((airport, index) => (\n            <div\n              key={`${airport.IATA}-${index}`}\n              className=\"px-4 py-3 hover:bg-gray-100 cursor-pointer border-b border-gray-100 last:border-b-0\"\n              onMouseDown={(e) => e.preventDefault()} // Prevent blur from firing\n              onClick={() => handleSuggestionSelect(airport)}\n            >\n              <div className=\"flex items-center gap-2\">\n                <div className=\"flex-shrink-0\">\n                  <div className=\"w-8 h-8 bg-primary/10 rounded-full flex items-center justify-center\">\n                    <MapPin className=\"h-4 w-4 text-primary\" />\n                  </div>\n                </div>\n                <div className=\"flex-1 min-w-0\">\n                  <div className=\"flex items-center gap-2\">\n                    <span className=\"font-semibold text-primary\">{airport.IATA}</span>\n                    <span className=\"text-sm text-gray-500\">({airport.ICAO})</span>\n                  </div>\n                  <div className=\"text-sm font-medium text-gray-900 truncate\">\n                    {airport[\"Airport name\"]}\n                  </div>\n                  <div className=\"text-xs text-gray-500\">\n                    {airport.City}, {airport.Country}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default function FlightBookingForm() {\n  const [formData, setFormData] = useState<FormData>({\n    fullName: \"\",\n    email: \"\",\n    phone: \"\",\n    from: \"\",\n    to: \"\",\n    departureDate: \"\",\n    returnDate: \"\",\n    passengers: \"1\",\n    class: \"Economy\",\n    specialRequests: \"\",\n  });\n\n  const handleInputChange = (field: keyof FormData, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    console.log(`Updated ${field}:`, value);\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    try {\n      const response = await fetch('/api/flight-booking', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n\n      if (response.ok) {\n        alert(\"Thank you for your booking request! We've received your details and will contact you within 24 hours with personalized flight options. You'll also receive a confirmation email shortly.\");\n        \n        // Reset form\n        const resetFormData = {\n          fullName: \"\",\n          email: \"\",\n          phone: \"\",\n          from: \"\",\n          to: \"\",\n          departureDate: \"\",\n          returnDate: \"\",\n          passengers: \"1\",\n          class: \"Economy\",\n          specialRequests: \"\",\n        };\n        setFormData(resetFormData);\n      } else {\n        throw new Error('Failed to submit booking request');\n      }\n    } catch (error) {\n      console.error('Error submitting form:', error);\n      alert(\"Sorry, there was an error submitting your request. Please try again or contact us directly.\");\n    }\n  };\n\n  return (\n    <Card className=\"w-full max-w-3xl mx-auto shadow-lg\">\n      <CardHeader className=\"text-center pb-4\">\n        <CardTitle className=\"flex items-center justify-center gap-2 text-xl\">\n          <Plane className=\"h-5 w-5 text-primary\" />\n          Book Your Flight\n        </CardTitle>\n        <p className=\"text-sm text-muted-foreground\">\n          Fill out your details and we'll get back to you within 24 hours\n        </p>\n      </CardHeader>\n\n      <CardContent className=\"pt-2\">\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          {/* Personal Information */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"fullName\">Full Name</Label>\n              <Input\n                id=\"fullName\"\n                placeholder=\"Enter your full name\"\n                value={formData.fullName}\n                onChange={(e) => handleInputChange(\"fullName\", e.target.value)}\n                data-testid=\"input-full-name\"\n                required\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"email\">Email</Label>\n              <Input\n                id=\"email\"\n                type=\"email\"\n                placeholder=\"your@email.com\"\n                value={formData.email}\n                onChange={(e) => handleInputChange(\"email\", e.target.value)}\n                data-testid=\"input-email\"\n                required\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"phone\">Phone</Label>\n              <Input\n                id=\"phone\"\n                placeholder=\"+234...\"\n                value={formData.phone}\n                onChange={(e) => handleInputChange(\"phone\", e.target.value)}\n                data-testid=\"input-phone\"\n                required\n              />\n            </div>\n          </div>\n\n          {/* Airport Search Inputs */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <AirportSearchInput\n              value={formData.from}\n              onChange={(value) => handleInputChange(\"from\", value)}\n              placeholder=\"Search departure airport...\"\n              label=\"From\"\n              icon={<Plane className=\"h-4 w-4\" />}\n              testId=\"input-from\"\n            />\n\n            <AirportSearchInput\n              value={formData.to}\n              onChange={(value) => handleInputChange(\"to\", value)}\n              placeholder=\"Search destination airport...\"\n              label=\"To\"\n              icon={<Plane className=\"h-4 w-4\" />}\n              testId=\"input-to\"\n            />\n          </div>\n\n          {/* Dates */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"departureDate\" className=\"flex items-center gap-2\">\n                <Calendar className=\"h-4 w-4\" />\n                Departure Date\n              </Label>\n              <Input\n                id=\"departureDate\"\n                type=\"date\"\n                value={formData.departureDate}\n                onChange={(e) => handleInputChange(\"departureDate\", e.target.value)}\n                data-testid=\"input-departure-date\"\n                required\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"returnDate\" className=\"flex items-center gap-2\">\n                <Calendar className=\"h-4 w-4\" />\n                Return Date\n              </Label>\n              <Input\n                id=\"returnDate\"\n                type=\"date\"\n                value={formData.returnDate}\n                onChange={(e) => handleInputChange(\"returnDate\", e.target.value)}\n                data-testid=\"input-return-date\"\n              />\n            </div>\n          </div>\n\n          {/* Passengers and Class */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"passengers\" className=\"flex items-center gap-2\">\n                <Users className=\"h-4 w-4\" />\n                Passengers\n              </Label>\n              <Select value={formData.passengers} onValueChange={(value) => handleInputChange(\"passengers\", value)}>\n                <SelectTrigger data-testid=\"select-passengers\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"1\">1 Passenger</SelectItem>\n                  <SelectItem value=\"2\">2 Passengers</SelectItem>\n                  <SelectItem value=\"3\">3 Passengers</SelectItem>\n                  <SelectItem value=\"4\">4 Passengers</SelectItem>\n                  <SelectItem value=\"5+\">5+ Passengers</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"class\">Class</Label>\n              <Select value={formData.class} onValueChange={(value) => handleInputChange(\"class\", value)}>\n                <SelectTrigger data-testid=\"select-class\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"Economy\">Economy</SelectItem>\n                  <SelectItem value=\"Premium Economy\">Premium Economy</SelectItem>\n                  <SelectItem value=\"Business\">Business</SelectItem>\n                  <SelectItem value=\"First\">First Class</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n\n          {/* Special Requests */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"specialRequests\">Special Requests (Optional)</Label>\n            <Textarea\n              id=\"specialRequests\"\n              placeholder=\"Dietary requirements, accessibility needs, etc.\"\n              value={formData.specialRequests}\n              onChange={(e) => handleInputChange(\"specialRequests\", e.target.value)}\n              data-testid=\"textarea-special-requests\"\n              rows={3}\n            />\n          </div>\n\n          {/* Submit Button */}\n          <Button type=\"submit\" size=\"lg\" className=\"w-full\" data-testid=\"button-search-flights\">\n            Search Flights\n          </Button>\n\n          <p className=\"text-sm text-muted-foreground text-center\">\n            We'll contact you within 24 hours with personalized flight options\n          </p>\n        </form>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":15794},"frontend/src/components/Footer.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport logoImage from \"@assets/Snowy-Spring-logo_1757438803888_1758027378266.png\";\nimport { Facebook, Twitter, Instagram, Linkedin, Phone, Mail, MapPin } from \"lucide-react\";\n\nconst footerLinks = {\n  quickLinks: [\n    { name: \"Home\", href: \"#home\" },\n    { name: \"Services\", href: \"#services\" },\n    { name: \"About\", href: \"#about\" },\n    { name: \"Contact\", href: \"#contact\" },\n  ],\n  services: [\n    { name: \"Flight Booking\", href: \"#services\" },\n    { name: \"Hotel Booking\", href: \"#services\" },\n    { name: \"Visa Application\", href: \"#services\" },\n    { name: \"Study Abroad\", href: \"#services\" },\n  ],\n};\n\nconst socialLinks = [\n  { name: \"Facebook\", icon: Facebook, href: \"#\" },\n  { name: \"Twitter\", icon: Twitter, href: \"#\" },\n  { name: \"Instagram\", icon: Instagram, href: \"#\" },\n  { name: \"LinkedIn\", icon: Linkedin, href: \"#\" },\n];\n\nexport default function Footer() {\n  const scrollToSection = (href: string) => {\n    const element = document.querySelector(href);\n    if (element) {\n      element.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n\n  const handleSocialClick = (platform: string) => {\n    console.log(`${platform} social link clicked`);\n    // Todo: remove mock functionality - add real social media links\n  };\n\n  return (\n    <footer className=\"bg-muted/50 border-t\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n          {/* Company Info */}\n          <div className=\"lg:col-span-1\">\n            <div className=\"flex items-center space-x-2 mb-4\">\n              <img src={logoImage} alt=\"SN.SP Limited\" className=\"h-10 w-10\" />\n              <span className=\"text-xl font-bold text-foreground\">SN.SP Limited</span>\n            </div>\n            <p className=\"text-muted-foreground mb-6\">\n              Your trusted travel agency for visa, flight and hotel services with a highly \n              trained and experienced team fully committed to your travel needs.\n            </p>\n            \n            {/* Social Links */}\n            <div className=\"flex space-x-4\">\n              <span className=\"text-sm font-medium text-foreground\">Follow Us</span>\n            </div>\n            <div className=\"flex space-x-3 mt-2\">\n              {socialLinks.map((social) => {\n                const IconComponent = social.icon;\n                const getIconColor = (name: string) => {\n                  switch(name.toLowerCase()) {\n                    case 'facebook': return 'text-blue-600 hover:text-blue-700';\n                    case 'twitter': return 'text-sky-500 hover:text-sky-600';\n                    case 'instagram': return 'text-pink-600 hover:text-pink-700';\n                    case 'linkedin': return 'text-blue-700 hover:text-blue-800';\n                    default: return 'text-muted-foreground hover:text-primary';\n                  }\n                };\n                return (\n                  <Button\n                    key={social.name}\n                    variant=\"ghost\"\n                    size=\"icon\"\n                    onClick={() => handleSocialClick(social.name)}\n                    data-testid={`button-social-${social.name.toLowerCase()}`}\n                    className={`hover:bg-muted/50 transition-all duration-200 ${getIconColor(social.name)}`}\n                  >\n                    <IconComponent className=\"h-5 w-5\" />\n                  </Button>\n                );\n              })}\n            </div>\n          </div>\n\n          {/* Quick Links */}\n          <div>\n            <h4 className=\"font-semibold text-foreground mb-4\">Quick Links</h4>\n            <nav className=\"space-y-3\">\n              {footerLinks.quickLinks.map((link) => (\n                <button\n                  key={link.name}\n                  onClick={() => scrollToSection(link.href)}\n                  className=\"block text-muted-foreground hover:text-primary transition-colors text-left\"\n                  data-testid={`link-footer-${link.name.toLowerCase().replace(\" \", \"-\")}`}\n                >\n                  {link.name}\n                </button>\n              ))}\n            </nav>\n          </div>\n\n          {/* Services */}\n          <div>\n            <h4 className=\"font-semibold text-foreground mb-4\">Services</h4>\n            <nav className=\"space-y-3\">\n              {footerLinks.services.map((service) => (\n                <button\n                  key={service.name}\n                  onClick={() => scrollToSection(service.href)}\n                  className=\"block text-muted-foreground hover:text-primary transition-colors text-left\"\n                  data-testid={`link-service-${service.name.toLowerCase().replace(\" \", \"-\")}`}\n                >\n                  {service.name}\n                </button>\n              ))}\n            </nav>\n          </div>\n\n          {/* Contact Info */}\n          <div>\n            <h4 className=\"font-semibold text-foreground mb-4\">Contact Info</h4>\n            <div className=\"space-y-3\">\n              <div className=\"flex items-start space-x-3\">\n                <MapPin className=\"h-5 w-5 text-primary mt-0.5 flex-shrink-0\" />\n                <span className=\"text-muted-foreground text-sm\">\n                  Suite 15, Damin Plaza, Ring Road, Ibadan\n                </span>\n              </div>\n              \n              <div className=\"flex items-center space-x-3\">\n                <Phone className=\"h-5 w-5 text-primary flex-shrink-0\" />\n                <div className=\"text-muted-foreground text-sm\">\n                  <div>+234 703 261 5370</div>\n                  <div>+234 901 593 2925</div>\n                </div>\n              </div>\n              \n              <div className=\"flex items-center space-x-3\">\n                <Mail className=\"h-5 w-5 text-primary flex-shrink-0\" />\n                <span className=\"text-muted-foreground text-sm\">info@snsp.com</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Bottom Bar */}\n        <div className=\"border-t border-border pt-8 mt-8\">\n          <div className=\"flex flex-col md:flex-row justify-between items-center space-y-4 md:space-y-0\">\n            <p className=\"text-muted-foreground text-sm\">\n              © 2025 SN.SP (Snow Spring) Limited. All rights reserved.\n            </p>\n            <div className=\"flex space-x-6 text-sm\">\n              <button \n                className=\"text-muted-foreground hover:text-primary transition-colors\"\n                onClick={() => console.log(\"Privacy Policy clicked\")}\n                data-testid=\"link-privacy-policy\"\n              >\n                Privacy Policy\n              </button>\n              <button \n                className=\"text-muted-foreground hover:text-primary transition-colors\"\n                onClick={() => console.log(\"Terms of Service clicked\")}\n                data-testid=\"link-terms\"\n              >\n                Terms of Service\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}","size_bytes":7074},"frontend/src/components/Header.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from \"@/components/ui/dropdown-menu\";\nimport { Menu, X, ChevronDown } from \"lucide-react\";\nimport { Link, useLocation } from \"wouter\";\nimport logoImage from \"@assets/Snowy-Spring-logo_1757438803888_1758027378266.png\";\n\nexport default function Header() {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [location] = useLocation();\n\n  const menuItems = [\n    { name: \"Home\", href: \"/\" },\n    {\n      name: \"Services\", \n      href: \"/services\",\n      submenu: [\n        { name: \"Flight Services\", href: \"/services/flights\" },\n        { name: \"Hotel Bookings\", href: \"/services/hotels\" },\n        { name: \"Visa Applications\", href: \"/services/visa\" },\n        { name: \"Study Abroad\", href: \"/services/study-abroad\" },\n        { name: \"Holiday Packages\", href: \"/services/holidays\" },\n        { name: \"Travel Advisory\", href: \"/services/advisory\" }\n      ]\n    },\n    { name: \"Tours\", href: \"/tours\" },\n    { name: \"Blog\", href: \"/blog\" },\n    { name: \"About\", href: \"/about\" },\n    { name: \"Contact\", href: \"/contact\" },\n  ];\n\n  const isActive = (href: string) => {\n    if (href === \"/\") return location === \"/\";\n    return location.startsWith(href);\n  };\n\n  return (\n    <header className=\"fixed top-0 left-0 right-0 z-50 bg-background/95 backdrop-blur-sm border-b\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex items-center justify-between h-16\">\n          {/* Logo */}\n          <Link href=\"/\" className=\"flex items-center space-x-2 hover:opacity-80 transition-opacity\" data-testid=\"logo-link\">\n            <img src={logoImage} alt=\"SN.SP Limited\" className=\"h-10 w-10\" />\n            <span className=\"text-xl font-bold text-foreground\">SN.SP Limited</span>\n          </Link>\n\n          {/* Desktop Navigation */}\n          <nav className=\"hidden md:flex items-center space-x-8\">\n            {menuItems.map((item) => (\n              item.submenu ? (\n                <DropdownMenu key={item.name}>\n                  <DropdownMenuTrigger asChild>\n                    <button \n                      className={`flex items-center gap-1 transition-colors ${\n                        isActive(item.href) ? 'text-primary' : 'text-foreground hover:text-primary'\n                      }`}\n                      data-testid={`nav-${item.name.toLowerCase()}`}\n                    >\n                      {item.name}\n                      <ChevronDown className=\"h-4 w-4\" />\n                    </button>\n                  </DropdownMenuTrigger>\n                  <DropdownMenuContent>\n                    {item.submenu.map((subItem) => (\n                      <DropdownMenuItem key={subItem.name} asChild>\n                        <Link href={subItem.href} className=\"cursor-pointer\" data-testid={`nav-${subItem.name.toLowerCase().replace(\" \", \"-\")}`}>\n                          {subItem.name}\n                        </Link>\n                      </DropdownMenuItem>\n                    ))}\n                  </DropdownMenuContent>\n                </DropdownMenu>\n              ) : (\n                <Link\n                  key={item.name}\n                  href={item.href}\n                  className={`transition-colors ${\n                    isActive(item.href) ? 'text-primary' : 'text-foreground hover:text-primary'\n                  }`}\n                  data-testid={`nav-${item.name.toLowerCase()}`}\n                >\n                  {item.name}\n                </Link>\n              )\n            ))}\n          </nav>\n\n          {/* CTA Button */}\n          <div className=\"hidden md:block\">\n            <Button asChild data-testid=\"button-get-quote\">\n              <Link href=\"/contact\">Get a Quote</Link>\n            </Button>\n          </div>\n\n          {/* Mobile Menu Button */}\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            className=\"md:hidden\"\n            onClick={() => setIsMenuOpen(!isMenuOpen)}\n            data-testid=\"button-mobile-menu\"\n          >\n            {isMenuOpen ? <X className=\"h-6 w-6\" /> : <Menu className=\"h-6 w-6\" />}\n          </Button>\n        </div>\n\n        {/* Mobile Navigation */}\n        {isMenuOpen && (\n          <div className=\"md:hidden py-4 border-t\">\n            <nav className=\"flex flex-col space-y-4\">\n              {menuItems.map((item) => (\n                item.submenu ? (\n                  <div key={item.name} className=\"space-y-2\">\n                    <div className=\"font-medium text-foreground px-2\">{item.name}</div>\n                    {item.submenu.map((subItem) => (\n                      <Link\n                        key={subItem.name}\n                        href={subItem.href}\n                        onClick={() => setIsMenuOpen(false)}\n                        className={`block px-3 py-2 rounded-md text-base font-medium text-foreground hover:text-primary hover:bg-accent ${\n                          isActive(subItem.href) ? 'text-primary' : ''\n                        }`}\n                        data-testid={`mobile-nav-${subItem.name.toLowerCase().replace(\" \", \"-\")}`}\n                      >\n                        {subItem.name}\n                      </Link>\n                    ))}\n                  </div>\n                ) : (\n                  <Link\n                    key={item.name}\n                    href={item.href}\n                    onClick={() => setIsMenuOpen(false)}\n                    className={`block px-3 py-2 rounded-md text-base font-medium text-foreground hover:text-primary hover:bg-accent ${\n                      isActive(item.href) ? 'text-primary' : ''\n                    }`}\n                    data-testid={`mobile-nav-${item.name.toLowerCase()}`}\n                  >\n                    {item.name}\n                  </Link>\n                )\n              ))}\n              <Button asChild className=\"self-start\" data-testid=\"button-mobile-quote\">\n                <Link href=\"/contact\" onClick={() => setIsMenuOpen(false)}>Get a Quote</Link>\n              </Button>\n            </nav>\n          </div>\n        )}\n      </div>\n    </header>\n  );\n}","size_bytes":6218},"frontend/src/components/Hero.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Plane, Quote } from \"lucide-react\";\nimport { useLocation } from \"wouter\";\nimport heroImage from \"@assets/generated_images/Tropical_beach_hero_background_6df6d6fc.png\";\n\nexport default function Hero() {\n  const [, setLocation] = useLocation();\n  \n  const scrollToSection = (href: string) => {\n    const element = document.querySelector(href);\n    if (element) {\n      element.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n\n  const handleExploreServices = () => {\n    // Navigate to services section or scroll to it\n    const servicesElement = document.querySelector(\"#services\");\n    if (servicesElement) {\n      servicesElement.scrollIntoView({ behavior: \"smooth\" });\n    } else {\n      // If not on home page, navigate to home then scroll\n      setLocation(\"/#services\");\n    }\n  };\n\n  const handleGetQuote = () => {\n    // Navigate to contact page\n    setLocation(\"/contact\");\n  };\n\n  return (\n    <section id=\"home\" className=\"relative min-h-screen flex items-center justify-center\">\n      {/* Background Image */}\n      <div\n        className=\"absolute inset-0 bg-cover bg-center bg-no-repeat\"\n        style={{ backgroundImage: `url(${heroImage})` }}\n      />\n      \n      {/* Dark Overlay for text readability */}\n      <div className=\"absolute inset-0 bg-gradient-to-r from-black/60 via-black/40 to-black/30\" />\n      \n      {/* Content */}\n      <div className=\"relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n        <div className=\"max-w-4xl mx-auto\">\n          <h1 className=\"text-4xl md:text-6xl font-bold text-white mb-6\">\n            Discover Your Next Adventure\n          </h1>\n          <p className=\"text-xl md:text-2xl text-white/90 mb-8 font-medium\">\n            Your Trusted Travel Partner for Unforgettable Journeys\n          </p>\n          <p className=\"text-lg text-white/80 mb-12 max-w-2xl mx-auto\">\n            Experience seamless travel planning with our expert team, tailored to your dream destinations.\n          </p>\n          \n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button\n              size=\"lg\"\n              onClick={handleExploreServices}\n              className=\"bg-primary/90 backdrop-blur-sm hover:bg-primary text-white border border-primary-border\"\n              data-testid=\"button-explore-services\"\n            >\n              <Plane className=\"mr-2 h-5 w-5\" />\n              Explore Services\n            </Button>\n            \n            <Button\n              size=\"lg\"\n              variant=\"outline\"\n              onClick={handleGetQuote}\n              className=\"bg-white/10 backdrop-blur-sm border-white/30 text-white hover:bg-white/20\"\n              data-testid=\"button-hero-quote\"\n            >\n              <Quote className=\"mr-2 h-5 w-5\" />\n              Get a Quote\n            </Button>\n          </div>\n        </div>\n      </div>\n      \n      {/* Scroll indicator */}\n      <div className=\"absolute bottom-8 left-1/2 transform -translate-x-1/2 animate-bounce\">\n        <div className=\"w-6 h-10 border-2 border-white/50 rounded-full flex justify-center\">\n          <div className=\"w-1 h-3 bg-white/50 rounded-full mt-2\"></div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":3260},"frontend/src/components/Partners.tsx":{"content":"import { useState, useEffect } from \"react\";\n\ninterface Partner {\n  id: string;\n  name: string;\n  category: string;\n  logo: string;\n}\n\n// Real partner logos with professional branding\nconst partners: Partner[] = [\n  { id: \"1\", name: \"Emirates Airlines\", category: \"Premium Airline Partner\", logo: \"https://logos-world.net/wp-content/uploads/2023/01/Emirates-Logo.png\" },\n  { id: \"2\", name: \"Marriott Hotels\", category: \"Luxury Hotel Chain\", logo: \"https://logos-world.net/wp-content/uploads/2020/06/Marriott-Logo.png\" },\n  { id: \"3\", name: \"Turkish Airlines\", category: \"International Airline\", logo: \"https://logos-world.net/wp-content/uploads/2023/01/Turkish-Airlines-Logo.png\" },\n  { id: \"4\", name: \"Allianz Travel\", category: \"Insurance Partner\", logo: \"https://logos-world.net/wp-content/uploads/2020/11/Allianz-Logo.png\" },\n  { id: \"5\", name: \"Booking.com\", category: \"Hotel Booking Platform\", logo: \"https://logos-world.net/wp-content/uploads/2021/08/Booking-Logo.png\" },\n  { id: \"6\", name: \"VFS Global\", category: \"Visa Application Center\", logo: \"https://www.vfsglobal.com/content/dam/new-vfs-website/common/vfs-global-logo.png\" },\n];\n\nexport default function Partners() {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isAutoPlaying, setIsAutoPlaying] = useState(true);\n\n  // Auto-scroll functionality with smooth transitions\n  useEffect(() => {\n    if (!isAutoPlaying) return;\n\n    const interval = setInterval(() => {\n      setCurrentIndex((prev) => (prev + 1) % Math.ceil(partners.length / 2));\n    }, 2500);\n\n    return () => clearInterval(interval);\n  }, [isAutoPlaying]);\n\n  const handleMouseEnter = () => {\n    setIsAutoPlaying(false);\n    console.log(\"Partners carousel paused\");\n  };\n\n  const handleMouseLeave = () => {\n    setIsAutoPlaying(true);\n    console.log(\"Partners carousel resumed\");\n  };\n\n  return (\n    <section className=\"py-24 bg-muted/30\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-foreground mb-4\">\n            Our Trusted Partners\n          </h2>\n          <p className=\"text-lg text-muted-foreground\">\n            Working with leading airlines, hotels, and travel organizations worldwide\n          </p>\n        </div>\n\n        <div \n          className=\"overflow-hidden relative\"\n          onMouseEnter={handleMouseEnter}\n          onMouseLeave={handleMouseLeave}\n        >\n          {/* Floating animation background */}\n          <div className=\"absolute inset-0 opacity-5\">\n            <div className=\"absolute top-10 left-10 w-20 h-20 bg-primary rounded-full animate-bounce\" style={{animationDelay: '0s', animationDuration: '3s'}}></div>\n            <div className=\"absolute top-32 right-20 w-12 h-12 bg-accent rounded-full animate-bounce\" style={{animationDelay: '1s', animationDuration: '4s'}}></div>\n            <div className=\"absolute bottom-20 left-1/3 w-16 h-16 bg-primary/50 rounded-full animate-bounce\" style={{animationDelay: '2s', animationDuration: '5s'}}></div>\n          </div>\n          <div \n            className=\"flex transition-transform duration-500 ease-in-out\"\n            style={{ transform: `translateX(-${currentIndex * 100}%)` }}\n          >\n            {/* Create multiple sets for infinite scroll effect */}\n            {[...Array(3)].map((_, setIndex) => (\n              <div key={setIndex} className=\"flex min-w-full\">\n                <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-8 w-full\">\n                  {partners.map((partner) => (\n                    <div\n                      key={`${setIndex}-${partner.id}`}\n                      className=\"flex flex-col items-center justify-center p-4 bg-background rounded-lg hover-elevate min-h-[120px] shadow-sm border transform transition-all duration-300 hover:scale-105 hover:shadow-lg hover:border-primary/30 group\"\n                      data-testid={`partner-${partner.id}`}\n                    >\n                      <div className=\"w-16 h-12 mb-3 flex items-center justify-center transform transition-transform duration-300 group-hover:scale-110\">\n                        <img \n                          src={partner.logo} \n                          alt={partner.name}\n                          className=\"max-w-full max-h-full object-contain filter transition-all duration-300 group-hover:brightness-110\"\n                          onError={(e) => {\n                            const target = e.target as HTMLImageElement;\n                            target.style.display = 'none';\n                            const fallback = document.createElement('div');\n                            fallback.className = 'w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center';\n                            fallback.innerHTML = `<span class=\"text-primary font-bold text-xs\">${partner.name.substring(0, 2)}</span>`;\n                            target.parentNode?.appendChild(fallback);\n                          }}\n                        />\n                      </div>\n                      <h4 className=\"font-semibold text-foreground text-center mb-1 text-xs\">\n                        {partner.name}\n                      </h4>\n                      <p className=\"text-xs text-muted-foreground text-center leading-tight\">\n                        {partner.category}\n                      </p>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Dots Indicator */}\n        <div className=\"flex justify-center mt-8 space-x-2\">\n          {[...Array(Math.ceil(partners.length / 3))].map((_, index) => (\n            <button\n              key={index}\n              onClick={() => {\n                setCurrentIndex(index);\n                console.log(`Partner carousel dot ${index} clicked`);\n              }}\n              className={`w-2 h-2 rounded-full transition-colors ${\n                index === currentIndex ? \"bg-primary\" : \"bg-muted\"\n              }`}\n              data-testid={`button-partner-dot-${index}`}\n            />\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":6188},"frontend/src/components/RecentTours.tsx":{"content":"\nimport { useLocation } from \"wouter\";\nimport { useState, useEffect } from \"react\";\n\nconst recentTours = [\n  {\n    id: 1,\n    title: \"Canada\",\n    image: \"/attached_assets/IMG-20250916-WA0022_1758093892791.jpg\",\n    caption: \"Explore the stunning landscapes and vibrant cities of Canada\"\n  },\n  {\n    id: 2,\n    title: \"Jordan & Israel\", \n    image: \"/attached_assets/IMG-20250916-WA0023_1758093892792.jpg\",\n    caption: \"Discover ancient history and religious sites in the Holy Land\"\n  },\n  {\n    id: 3,\n    title: \"Mauritius\",\n    image: \"/attached_assets/IMG-20250916-WA0027_1758093892795.jpg\",\n    caption: \"Relax on pristine beaches and enjoy tropical paradise\"\n  },\n  {\n    id: 4,\n    title: \"Egypt\",\n    image: \"/attached_assets/IMG-20250916-WA0024_1758093892793.jpg\",\n    caption: \"Experience the wonders of ancient pyramids and pharaohs\"\n  },\n  {\n    id: 5,\n    title: \"Italy\",\n    image: \"/attached_assets/IMG-20250916-WA0025_1758093892793.jpg\",\n    caption: \"Immerse yourself in art, culture, and culinary delights\"\n  },\n  {\n    id: 6,\n    title: \"Nigeria\",\n    image: \"/attached_assets/IMG-20250916-WA0026_1758093892794.jpg\",\n    caption: \"Discover the rich culture and natural beauty of Nigeria\"\n  }\n];\n\nexport default function RecentTours() {\n  const [, setLocation] = useLocation();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isAutoPlaying, setIsAutoPlaying] = useState(true);\n\n  // Auto-scroll functionality\n  useEffect(() => {\n    if (!isAutoPlaying) return;\n\n    const interval = setInterval(() => {\n      setCurrentIndex((prevIndex) => (prevIndex + 1) % Math.ceil(recentTours.length / 3));\n    }, 4000); // Change slide every 4 seconds\n\n    return () => clearInterval(interval);\n  }, [isAutoPlaying]);\n\n  const handleMouseEnter = () => {\n    setIsAutoPlaying(false);\n  };\n\n  const handleMouseLeave = () => {\n    setIsAutoPlaying(true);\n  };\n\n  const getVisibleTours = () => {\n    const toursPerSlide = 3;\n    const startIndex = currentIndex * toursPerSlide;\n    return recentTours.slice(startIndex, startIndex + toursPerSlide);\n  };\n\n  return (\n    <section className=\"py-24 bg-background\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-foreground mb-4\">\n            Recent Tours\n          </h2>\n        </div>\n\n        <div \n          className=\"relative overflow-hidden\"\n          onMouseEnter={handleMouseEnter}\n          onMouseLeave={handleMouseLeave}\n        >\n          <div \n            className=\"flex transition-transform duration-500 ease-in-out\"\n            style={{ transform: `translateX(-${currentIndex * 100}%)` }}\n          >\n            {Array.from({ length: Math.ceil(recentTours.length / 3) }).map((_, slideIndex) => (\n              <div key={slideIndex} className=\"w-full flex-shrink-0\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n                  {recentTours\n                    .slice(slideIndex * 3, slideIndex * 3 + 3)\n                    .map((tour) => (\n                      <div key={tour.id} className=\"group cursor-pointer\" data-testid={`tour-${tour.id}`}>\n                        <div className=\"relative overflow-hidden rounded-lg aspect-square\">\n                          <img \n                            src={tour.image} \n                            alt={tour.title}\n                            className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-300\"\n                            onError={(e) => {\n                              const target = e.target as HTMLImageElement;\n                              target.style.display = 'none';\n                              const fallback = document.createElement('div');\n                              fallback.className = 'w-full h-full bg-gradient-to-br from-primary/20 to-accent/20 flex items-center justify-center';\n                              fallback.innerHTML = `<div class=\"text-center\"><svg viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"h-12 w-12 text-primary mx-auto mb-2\"><path d=\"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"/></svg><p class=\"text-primary font-medium\">${tour.title}</p></div>`;\n                              target.parentNode?.appendChild(fallback);\n                            }}\n                          />\n                          {/* Caption Overlay */}\n                          <div className=\"absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/80 to-transparent p-4\">\n                            <h3 className=\"text-white font-semibold text-lg mb-1\">{tour.title}</h3>\n                            <p className=\"text-white/90 text-sm\">{tour.caption}</p>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Dots Indicator */}\n        <div className=\"flex justify-center mt-8 space-x-2\">\n          {Array.from({ length: Math.ceil(recentTours.length / 3) }).map((_, index) => (\n            <button\n              key={index}\n              onClick={() => setCurrentIndex(index)}\n              className={`w-3 h-3 rounded-full transition-colors ${\n                index === currentIndex ? \"bg-primary\" : \"bg-muted\"\n              }`}\n              data-testid={`button-tour-dot-${index}`}\n            />\n          ))}\n        </div>\n\n        <div className=\"text-center mt-12\">\n          <button \n            className=\"px-6 py-3 bg-primary text-primary-foreground rounded-lg hover:bg-primary/90 transition-colors\"\n            onClick={() => setLocation(\"/tours\")}\n            data-testid=\"button-view-all-tours\"\n          >\n            View All Tours\n          </button>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":5966},"frontend/src/components/Services.tsx":{"content":"import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Plane, Hotel, FileText, MapPin, GraduationCap, Shield } from \"lucide-react\";\n\ninterface Service {\n  id: string;\n  title: string;\n  description: string;\n  icon: React.ElementType;\n}\n\nconst services: Service[] = [\n  {\n    id: \"flight-booking\",\n    title: \"Flight Booking\",\n    description: \"Seamless flight booking for your global travel needs with competitive pricing and flexible options.\",\n    icon: Plane,\n  },\n  {\n    id: \"hotel-booking\",\n    title: \"Hotel Booking\",\n    description: \"Book top-rated hotels worldwide with our extensive network of trusted accommodation partners.\",\n    icon: Hotel,\n  },\n  {\n    id: \"visa-application\",\n    title: \"Visa Application\",\n    description: \"Expert visa application assistance for stress-free travel with high success rates.\",\n    icon: FileText,\n  },\n  {\n    id: \"holiday-packages\",\n    title: \"Holiday Packages\",\n    description: \"Customized holiday packages for unforgettable travel experiences tailored to your preferences.\",\n    icon: MapPin,\n  },\n  {\n    id: \"study-abroad\",\n    title: \"Study Abroad\",\n    description: \"Transform your future with global educational experiences and comprehensive support.\",\n    icon: GraduationCap,\n  },\n  {\n    id: \"travel-advisories\",\n    title: \"Travel Advisories\",\n    description: \"Get the latest updates on travel advisories and safety information for informed decisions.\",\n    icon: Shield,\n  },\n];\n\nexport default function Services() {\n  const scrollToContact = () => {\n    const element = document.querySelector(\"#contact\");\n    if (element) {\n      element.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n\n  return (\n    <section id=\"services\" className=\"py-24 bg-background\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-foreground mb-4\">\n            Our Services\n          </h2>\n          <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n            Comprehensive travel solutions tailored to your unique needs\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {services.map((service) => {\n            const IconComponent = service.icon;\n            return (\n              <Card key={service.id} className=\"hover-elevate h-full\" data-testid={`card-service-${service.id}`}>\n                <CardHeader className=\"text-center\">\n                  <div className=\"mx-auto w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center mb-4\">\n                    <IconComponent className=\"h-6 w-6 text-primary\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">{service.title}</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-muted-foreground text-center mb-6\">\n                    {service.description}\n                  </p>\n                  <Button \n                    variant=\"outline\" \n                    className=\"w-full\"\n                    onClick={scrollToContact}\n                    data-testid={`button-learn-more-${service.id}`}\n                  >\n                    Learn More\n                  </Button>\n                </CardContent>\n              </Card>\n            );\n          })}\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":3489},"frontend/src/components/Testimonials.tsx":{"content":"import { useState } from \"react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Avatar, AvatarImage, AvatarFallback } from \"@/components/ui/avatar\";\nimport { ChevronLeft, ChevronRight, Star, Quote } from \"lucide-react\";\n\ninterface Testimonial {\n  id: string;\n  name: string;\n  company: string;\n  testimonial: string;\n  rating: number;\n  avatar: string;\n  image: string;\n}\n\n// Todo: remove mock functionality - replace with real testimonials\nconst testimonials: Testimonial[] = [\n  {\n    id: \"1\",\n    name: \"Temitayo Awosanys\",\n    company: \"GleadsMedia\",\n    testimonial: \"SN.SP exceeded my expectations! Their team was incredibly professional and took care of every detail. My family vacation was unforgettable, and I couldn't be happier with their service.\",\n    rating: 5,\n    avatar: \"TA\",\n    image: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face\",\n  },\n  {\n    id: \"2\",\n    name: \"Mr Seun\",\n    company: \"Business Traveler\",\n    testimonial: \"I had a fantastic experience with SN.SP. They provided excellent customer service and found me the best deals for my business trip. Their attention to detail made all the difference.\",\n    rating: 5,\n    avatar: \"MS\",\n    image: \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face\",\n  },\n  {\n    id: \"3\",\n    name: \"Mr Alonge\",\n    company: \"Satisfied Client\",\n    testimonial: \"I referred a friend to SN.SP, they handled his documentation perfectly and my friend got his UK visitors visa. A genuine brand that knows visa requirements so well.\",\n    rating: 5,\n    avatar: \"MA\",\n    image: \"https://images.unsplash.com/photo-1500648767791-00dcc994a43e?w=150&h=150&fit=crop&crop=face\",\n  },\n];\n\nexport default function Testimonials() {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  const nextTestimonial = () => {\n    setCurrentIndex((prev) => (prev + 1) % testimonials.length);\n    console.log(\"Next testimonial clicked\");\n  };\n\n  const prevTestimonial = () => {\n    setCurrentIndex((prev) => (prev - 1 + testimonials.length) % testimonials.length);\n    console.log(\"Previous testimonial clicked\");\n  };\n\n  const currentTestimonial = testimonials[currentIndex];\n\n  return (\n    <section className=\"py-24 bg-background\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-foreground mb-4\">\n            What Our Clients Say\n          </h2>\n          <p className=\"text-lg text-muted-foreground\">\n            Trusted by hundreds of satisfied travelers\n          </p>\n        </div>\n\n        <div className=\"max-w-3xl mx-auto\">\n          <Card className=\"relative overflow-hidden shadow-lg\">\n            <CardContent className=\"p-6 md:p-8\">\n              {/* Quote Icon */}\n              <div className=\"flex justify-center mb-4\">\n                <div className=\"w-10 h-10 bg-primary/10 rounded-full flex items-center justify-center\">\n                  <Quote className=\"h-5 w-5 text-primary\" />\n                </div>\n              </div>\n\n              {/* Author Image */}\n              <div className=\"flex justify-center mb-6\">\n                <Avatar className=\"w-20 h-20 border-4 border-primary/20\">\n                  <AvatarImage \n                    src={currentTestimonial.image} \n                    alt={currentTestimonial.name}\n                    className=\"object-cover\"\n                  />\n                  <AvatarFallback className=\"bg-primary text-white text-lg font-semibold\">\n                    {currentTestimonial.avatar}\n                  </AvatarFallback>\n                </Avatar>\n              </div>\n\n              {/* Testimonial Text */}\n              <blockquote className=\"text-base md:text-lg text-center text-foreground mb-6 leading-relaxed max-w-2xl mx-auto\">\n                \"{currentTestimonial.testimonial}\"\n              </blockquote>\n\n              {/* Rating */}\n              <div className=\"flex justify-center mb-4\">\n                {[...Array(currentTestimonial.rating)].map((_, i) => (\n                  <Star key={i} className=\"h-4 w-4 text-yellow-400 fill-current\" />\n                ))}\n              </div>\n\n              {/* Author Info */}\n              <div className=\"text-center\">\n                <h4 className=\"text-lg font-semibold text-foreground\" data-testid={`text-testimonial-name-${currentTestimonial.id}`}>\n                  {currentTestimonial.name}\n                </h4>\n                <p className=\"text-sm text-muted-foreground\">{currentTestimonial.company}</p>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Navigation */}\n          <div className=\"flex justify-center items-center mt-8 space-x-4\">\n            <Button\n              variant=\"outline\"\n              size=\"icon\"\n              onClick={prevTestimonial}\n              disabled={testimonials.length <= 1}\n              data-testid=\"button-testimonial-prev\"\n            >\n              <ChevronLeft className=\"h-4 w-4\" />\n            </Button>\n\n            {/* Dots Indicator */}\n            <div className=\"flex space-x-2\">\n              {testimonials.map((_, index) => (\n                <button\n                  key={index}\n                  onClick={() => {\n                    setCurrentIndex(index);\n                    console.log(`Testimonial dot ${index} clicked`);\n                  }}\n                  className={`w-2 h-2 rounded-full transition-colors ${\n                    index === currentIndex ? \"bg-primary\" : \"bg-muted\"\n                  }`}\n                  data-testid={`button-testimonial-dot-${index}`}\n                />\n              ))}\n            </div>\n\n            <Button\n              variant=\"outline\"\n              size=\"icon\"\n              onClick={nextTestimonial}\n              disabled={testimonials.length <= 1}\n              data-testid=\"button-testimonial-next\"\n            >\n              <ChevronRight className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":6153},"frontend/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"frontend/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"frontend/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\n// API base URL from environment variable\nconst API_BASE_URL = (import.meta.env as any).VITE_API_URL || \"http://localhost:8080\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const fullUrl = url.startsWith('http') ? url : `${API_BASE_URL}${url}`;\n  \n  const res = await fetch(fullUrl, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const url = queryKey.join(\"/\") as string;\n    const fullUrl = url.startsWith('http') ? url : `${API_BASE_URL}${url}`;\n    \n    const res = await fetch(fullUrl, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1700},"frontend/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"frontend/src/pages/Blog.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport { \n  Search, \n  Calendar, \n  User, \n  ArrowRight, \n  Mail,\n  Plane,\n  Hotel,\n  FileText,\n  GraduationCap,\n  MapPin,\n  Shield\n} from \"lucide-react\";\n\ninterface BlogPost {\n  id: string;\n  title: string;\n  excerpt: string;\n  category: string;\n  date: string;\n  author: string;\n  readTime: string;\n  featured: boolean;\n  categoryIcon: React.ElementType;\n  categoryColor: string;\n  image: string;\n  imageAlt: string;\n}\n\n// Todo: remove mock functionality - replace with real blog posts\nconst blogPosts: BlogPost[] = [\n  {\n    id: \"1\",\n    title: \"Top 10 Must-Visit Destinations in 2025\",\n    excerpt: \"Discover the most breathtaking destinations that should be on every traveler's bucket list this year. From pristine beaches to bustling cities, these locations offer unforgettable experiences.\",\n    category: \"Travel Tips\",\n    date: \"January 15, 2025\",\n    author: \"Travel Team\",\n    readTime: \"5 min read\",\n    featured: true,\n    categoryIcon: MapPin,\n    categoryColor: \"bg-blue-100 text-blue-700\",\n    image: \"https://images.unsplash.com/photo-1488646953014-85cb44e25828?w=600&h=400&fit=crop&crop=entropy&cs=tinysrgb\",\n    imageAlt: \"Beautiful tropical destination with crystal clear waters\"\n  },\n  {\n    id: \"2\",\n    title: \"How to Find the Best Flight Deals\",\n    excerpt: \"Learn insider tips and tricks to save money on your next flight booking. Our experts share proven strategies used by savvy travelers.\",\n    category: \"Flight Tips\",\n    date: \"January 10, 2025\",\n    author: \"SN.SP Team\",\n    readTime: \"4 min read\",\n    featured: false,\n    categoryIcon: Plane,\n    categoryColor: \"bg-green-100 text-green-700\",\n    image: \"https://images.unsplash.com/photo-1436491865332-7a61a109cc05?w=600&h=400&fit=crop&crop=entropy&cs=tinysrgb\",\n    imageAlt: \"Airplane flying above clouds\"\n  },\n  {\n    id: \"3\",\n    title: \"Ultimate Guide to Hotel Bookings\",\n    excerpt: \"Discover how to book the perfect hotel for your stay. From luxury resorts to budget-friendly options, find your ideal accommodation.\",\n    category: \"Hotels\",\n    date: \"January 8, 2025\",\n    author: \"Hotel Expert\",\n    readTime: \"6 min read\",\n    featured: false,\n    categoryIcon: Hotel,\n    categoryColor: \"bg-purple-100 text-purple-700\",\n    image: \"https://images.unsplash.com/photo-1566073771259-6a8506099945?w=600&h=400&fit=crop&crop=entropy&cs=tinysrgb\",\n    imageAlt: \"Luxury hotel lobby interior\"\n  },\n  {\n    id: \"4\",\n    title: \"Complete Study Abroad Guide\",\n    excerpt: \"Everything you need to know about studying abroad. From visa applications to choosing the right university and country.\",\n    category: \"Education\",\n    date: \"January 5, 2025\",\n    author: \"Education Team\",\n    readTime: \"8 min read\",\n    featured: false,\n    categoryIcon: GraduationCap,\n    categoryColor: \"bg-yellow-100 text-yellow-700\",\n    image: \"https://images.unsplash.com/photo-1523050854058-8df90110c9f1?w=600&h=400&fit=crop&crop=entropy&cs=tinysrgb\",\n    imageAlt: \"University campus with students\"\n  },\n  {\n    id: \"5\",\n    title: \"Visa Application Made Simple\",\n    excerpt: \"Navigate the visa application process with confidence. Our step-by-step guide ensures a smooth and successful application.\",\n    category: \"Visa Guide\",\n    date: \"January 3, 2025\",\n    author: \"Visa Expert\",\n    readTime: \"7 min read\",\n    featured: false,\n    categoryIcon: FileText,\n    categoryColor: \"bg-red-100 text-red-700\",\n    image: \"https://images.unsplash.com/photo-1521791136064-7986c2920216?w=600&h=400&fit=crop&crop=entropy&cs=tinysrgb\",\n    imageAlt: \"Passport and visa documents\"\n  },\n  {\n    id: \"6\",\n    title: \"Why Travel Insurance is Essential\",\n    excerpt: \"Protect your investment and travel with peace of mind. Learn about different types of travel insurance and what coverage you need.\",\n    category: \"Travel Safety\",\n    date: \"December 30, 2024\",\n    author: \"Safety Team\",\n    readTime: \"5 min read\",\n    featured: false,\n    categoryIcon: Shield,\n    categoryColor: \"bg-orange-100 text-orange-700\",\n    image: \"https://images.unsplash.com/photo-1554224155-6726b3ff858f?w=600&h=400&fit=crop&crop=entropy&cs=tinysrgb\",\n    imageAlt: \"Travel insurance and safety concept\"\n  }\n];\n\nconst categories = [\n  { name: \"All\", count: blogPosts.length },\n  { name: \"Flight Tips\", count: blogPosts.filter(post => post.category === \"Flight Tips\").length },\n  { name: \"Hotels\", count: blogPosts.filter(post => post.category === \"Hotels\").length },\n  { name: \"Visa Guide\", count: blogPosts.filter(post => post.category === \"Visa Guide\").length },\n  { name: \"Study Abroad\", count: blogPosts.filter(post => post.category === \"Education\").length },\n  { name: \"Destinations\", count: blogPosts.filter(post => post.category === \"Travel Tips\").length },\n  { name: \"Travel Safety\", count: blogPosts.filter(post => post.category === \"Travel Safety\").length }\n];\n\nexport default function Blog() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(\"All\");\n  const [email, setEmail] = useState(\"\");\n\n  const filteredPosts = blogPosts.filter(post => {\n    const matchesSearch = post.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         post.excerpt.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesCategory = selectedCategory === \"All\" || \n                          post.category === selectedCategory ||\n                          (selectedCategory === \"Study Abroad\" && post.category === \"Education\") ||\n                          (selectedCategory === \"Destinations\" && post.category === \"Travel Tips\");\n    return matchesSearch && matchesCategory;\n  });\n\n  const featuredPost = blogPosts.find(post => post.featured);\n  const regularPosts = filteredPosts.filter(post => !post.featured);\n\n  const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(e.target.value);\n    console.log(\"Search term:\", e.target.value);\n  };\n\n  const handleCategoryFilter = (category: string) => {\n    setSelectedCategory(category);\n    console.log(\"Selected category:\", category);\n  };\n\n  const handleNewsletterSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    console.log(\"Newsletter subscription:\", email);\n    alert(\"Thank you for subscribing to our newsletter!\");\n    setEmail(\"\");\n  };\n\n  const handleReadMore = (postId: string) => {\n    console.log(\"Read more clicked for post:\", postId);\n    alert(\"This will navigate to the full article. Feature coming soon!\");\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Header />\n      \n      {/* Hero Section */}\n      <section className=\"pt-20 pb-12 bg-gradient-to-br from-primary/10 via-background to-accent/10\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h1 className=\"text-4xl md:text-6xl font-bold text-foreground mb-6\">\n            Travel Blog\n          </h1>\n          <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto mb-8\">\n            Discover amazing destinations, travel tips, and inspiring stories from around the world\n          </p>\n          \n          {/* Search Bar */}\n          <div className=\"max-w-md mx-auto relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground h-5 w-5\" />\n            <Input\n              type=\"text\"\n              placeholder=\"Search articles...\"\n              value={searchTerm}\n              onChange={handleSearch}\n              className=\"pl-10\"\n              data-testid=\"input-search\"\n            />\n          </div>\n        </div>\n      </section>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-8\">\n          {/* Main Content */}\n          <div className=\"lg:col-span-3\">\n            {/* Featured Article */}\n            {featuredPost && selectedCategory === \"All\" && !searchTerm && (\n              <div className=\"mb-12\">\n                <div className=\"flex items-center gap-2 mb-4\">\n                  <Badge variant=\"default\">Featured</Badge>\n                  <Badge variant=\"outline\" className={featuredPost.categoryColor}>\n                    {featuredPost.category}\n                  </Badge>\n                </div>\n                \n                <Card className=\"hover-elevate overflow-hidden\" data-testid=\"featured-post\">\n                  <div className=\"md:flex\">\n                    <div className=\"md:w-1/3\">\n                      <div className=\"h-64 md:h-full overflow-hidden\">\n                        <img \n                          src={featuredPost.image} \n                          alt={featuredPost.imageAlt}\n                          className=\"w-full h-full object-cover hover:scale-105 transition-transform duration-300\"\n                          onError={(e) => {\n                            const target = e.target as HTMLImageElement;\n                            target.style.display = 'none';\n                            const fallback = document.createElement('div');\n                            fallback.className = 'h-64 md:h-full bg-gradient-to-br from-primary/20 to-accent/20 flex items-center justify-center';\n                            fallback.innerHTML = `<div class=\"h-16 w-16 text-primary\">${featuredPost.categoryIcon}</div>`;\n                            target.parentNode?.appendChild(fallback);\n                          }}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"md:w-2/3 p-6\">\n                      <h2 className=\"text-2xl font-bold text-foreground mb-3\">\n                        {featuredPost.title}\n                      </h2>\n                      <p className=\"text-muted-foreground mb-4 leading-relaxed\">\n                        {featuredPost.excerpt}\n                      </p>\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center gap-4 text-sm text-muted-foreground\">\n                          <div className=\"flex items-center gap-1\">\n                            <Calendar className=\"h-4 w-4\" />\n                            {featuredPost.date}\n                          </div>\n                          <div className=\"flex items-center gap-1\">\n                            <User className=\"h-4 w-4\" />\n                            {featuredPost.author}\n                          </div>\n                        </div>\n                        <Button \n                          onClick={() => handleReadMore(featuredPost.id)}\n                          data-testid=\"button-read-featured\"\n                        >\n                          Read Full Article\n                          <ArrowRight className=\"ml-2 h-4 w-4\" />\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                </Card>\n              </div>\n            )}\n\n            {/* Regular Articles Grid */}\n            <div>\n              <h2 className=\"text-2xl font-bold text-foreground mb-6\">\n                {searchTerm ? `Search Results (${filteredPosts.length})` : \n                 selectedCategory === \"All\" ? \"Latest Articles\" : selectedCategory}\n              </h2>\n              \n              {filteredPosts.length === 0 ? (\n                <Card className=\"text-center py-12\">\n                  <CardContent>\n                    <p className=\"text-muted-foreground\">No articles found matching your criteria.</p>\n                  </CardContent>\n                </Card>\n              ) : (\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n                  {regularPosts.map((post) => {\n                    const IconComponent = post.categoryIcon;\n                    return (\n                      <Card key={post.id} className=\"hover-elevate h-full overflow-hidden\" data-testid={`post-${post.id}`}>\n                        <div className=\"h-48 overflow-hidden\">\n                          <img \n                            src={post.image} \n                            alt={post.imageAlt}\n                            className=\"w-full h-full object-cover hover:scale-105 transition-transform duration-300\"\n                            onError={(e) => {\n                              const target = e.target as HTMLImageElement;\n                              target.style.display = 'none';\n                              const fallback = document.createElement('div');\n                              fallback.className = 'h-48 bg-gradient-to-br from-primary/20 to-accent/20 flex items-center justify-center';\n                              const IconComponent = post.categoryIcon;\n                              fallback.innerHTML = `<div class=\"h-12 w-12 text-primary\"><svg viewBox=\"0 0 24 24\" fill=\"currentColor\">${IconComponent}</svg></div>`;\n                              target.parentNode?.appendChild(fallback);\n                            }}\n                          />\n                        </div>\n                        <CardHeader>\n                          <div className=\"flex items-center justify-between mb-2\">\n                            <Badge variant=\"outline\" className={`${post.categoryColor} text-xs`}>\n                              <IconComponent className=\"h-3 w-3 mr-1\" />\n                              {post.category}\n                            </Badge>\n                            <span className=\"text-xs text-muted-foreground\">{post.readTime}</span>\n                          </div>\n                          <CardTitle className=\"text-lg leading-tight\">\n                            {post.title}\n                          </CardTitle>\n                        </CardHeader>\n                        <CardContent className=\"flex-1 flex flex-col\">\n                          <p className=\"text-muted-foreground text-sm mb-4 flex-1\">\n                            {post.excerpt}\n                          </p>\n                          <div className=\"flex items-center justify-between\">\n                            <div className=\"flex items-center gap-3 text-xs text-muted-foreground\">\n                              <div className=\"flex items-center gap-1\">\n                                <Calendar className=\"h-3 w-3\" />\n                                {post.date}\n                              </div>\n                            </div>\n                            <Button \n                              variant=\"ghost\" \n                              size=\"sm\"\n                              onClick={() => handleReadMore(post.id)}\n                              data-testid={`button-read-${post.id}`}\n                            >\n                              Read More\n                              <ArrowRight className=\"ml-1 h-3 w-3\" />\n                            </Button>\n                          </div>\n                        </CardContent>\n                      </Card>\n                    );\n                  })}\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Sidebar */}\n          <div className=\"lg:col-span-1\">\n            <div className=\"space-y-8\">\n              {/* Categories */}\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"text-lg\">Categories</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-2\">\n                    {categories.map((category) => (\n                      <button\n                        key={category.name}\n                        onClick={() => handleCategoryFilter(category.name)}\n                        className={`w-full flex items-center justify-between p-2 rounded-md text-left transition-colors ${\n                          selectedCategory === category.name\n                            ? \"bg-primary text-primary-foreground\"\n                            : \"hover:bg-muted\"\n                        }`}\n                        data-testid={`category-${category.name.toLowerCase().replace(\" \", \"-\")}`}\n                      >\n                        <span className=\"text-sm\">{category.name}</span>\n                        <Badge variant=\"secondary\" className=\"text-xs\">\n                          {category.count}\n                        </Badge>\n                      </button>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Newsletter */}\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"text-lg\">Newsletter</CardTitle>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Get the latest travel tips and destination guides delivered to your inbox.\n                  </p>\n                </CardHeader>\n                <CardContent>\n                  <form onSubmit={handleNewsletterSubmit} className=\"space-y-3\">\n                    <Input\n                      type=\"email\"\n                      placeholder=\"Your email address\"\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                      data-testid=\"input-newsletter-email\"\n                      required\n                    />\n                    <Button type=\"submit\" className=\"w-full\" size=\"sm\" data-testid=\"button-subscribe\">\n                      <Mail className=\"mr-2 h-4 w-4\" />\n                      Subscribe\n                    </Button>\n                  </form>\n                </CardContent>\n              </Card>\n\n              {/* Quick Contact */}\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"text-lg\">Quick Contact</CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-3\">\n                  <div className=\"text-sm\">\n                    <p className=\"font-medium\">+234 703 261 5370</p>\n                    <p className=\"text-muted-foreground\">Call us anytime</p>\n                  </div>\n                  <div className=\"text-sm\">\n                    <p className=\"font-medium\">info@snsp.com</p>\n                    <p className=\"text-muted-foreground\">Email us</p>\n                  </div>\n                  <div className=\"text-sm\">\n                    <p className=\"font-medium\">Suite 15, Damin Plaza</p>\n                    <p className=\"text-muted-foreground\">Ring Road, Ibadan</p>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* CTA Section */}\n      <section className=\"py-16 bg-muted/30\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"text-3xl font-bold text-foreground mb-4\">\n            Ready to Start Your Journey?\n          </h2>\n          <p className=\"text-lg text-muted-foreground mb-8 max-w-2xl mx-auto\">\n            Let our travel experts help you plan your perfect trip. Get personalized \n            recommendations and exclusive deals.\n          </p>\n          <Button size=\"lg\" onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })} data-testid=\"button-plan-trip\">\n            Plan Your Trip\n          </Button>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":19576},"frontend/src/pages/EnhancedAbout.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport { \n  CheckCircle, \n  Users, \n  Target, \n  Award, \n  Heart,\n  Lightbulb,\n  Zap,\n  UserCheck,\n  Globe,\n  Shield,\n  Clock,\n  TrendingUp,\n  DollarSign,\n  HeadphonesIcon\n} from \"lucide-react\";\nimport ceoImage from \"@assets/generated_images/Professional_CEO_headshot_portrait_989b0458.png\";\nimport officeImage from \"@assets/generated_images/Modern_office_interior_setting_852e7d49.png\";\n\nconst coreValues = [\n  {\n    icon: Heart,\n    title: \"Integrity\",\n    description: \"We believe in honest, transparent dealings with all our clients\"\n  },\n  {\n    icon: Award,\n    title: \"Excellence\", \n    description: \"We strive for perfection in every service we provide\"\n  },\n  {\n    icon: Lightbulb,\n    title: \"Innovation\",\n    description: \"We continuously improve our services using the latest technology\"\n  },\n  {\n    icon: UserCheck,\n    title: \"Customer-Centric\",\n    description: \"Your satisfaction is our top priority\"\n  }\n];\n\nconst whyChooseFeatures = [\n  {\n    icon: Clock,\n    title: \"7+ Years Experience\",\n    description: \"Established in 2018, we have successfully served thousands of satisfied customers with our reliable travel services.\"\n  },\n  {\n    icon: Users,\n    title: \"Trusted Partners\",\n    description: \"We work with leading airlines, hotels, and service providers worldwide to ensure you get the best deals and services.\"\n  },\n  {\n    icon: HeadphonesIcon,\n    title: \"24/7 Support\",\n    description: \"Our dedicated customer support team is available round the clock to assist you with any travel-related queries or emergencies.\"\n  },\n  {\n    icon: Shield,\n    title: \"Secure Bookings\",\n    description: \"All transactions are processed securely, and we maintain strict confidentiality of your personal and travel information.\"\n  },\n  {\n    icon: DollarSign,\n    title: \"Competitive Pricing\",\n    description: \"We offer the most competitive rates in the market without compromising on service quality or reliability.\"\n  },\n  {\n    icon: Target,\n    title: \"Personalized Service\",\n    description: \"Every client receives personalized attention and customized travel solutions tailored to their specific needs and preferences.\"\n  }\n];\n\nconst companyStats = [\n  { number: \"5000+\", label: \"Happy Clients\", icon: Users },\n  { number: \"50+\", label: \"Countries Served\", icon: Globe },\n  { number: \"98%\", label: \"Success Rate\", icon: TrendingUp },\n  { number: \"24/7\", label: \"Customer Support\", icon: Clock }\n];\n\nexport default function EnhancedAbout() {\n  const scrollToContact = () => {\n    const element = document.querySelector(\"#contact\");\n    if (element) {\n      element.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Header />\n      \n      {/* Hero Section */}\n      <section className=\"pt-20 pb-12 bg-gradient-to-br from-primary/10 via-background to-accent/10\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <div className=\"flex items-center justify-center gap-2 mb-4\">\n            <Badge variant=\"outline\">Since 2018</Badge>\n          </div>\n          <h1 className=\"text-4xl md:text-6xl font-bold text-foreground mb-6\">\n            About SN.SP Limited\n          </h1>\n          <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n            Your trusted partner in creating unforgettable travel experiences since 2018\n          </p>\n        </div>\n      </section>\n\n      {/* Company Stats */}\n      <section className=\"py-16 bg-background\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-8\">\n            {companyStats.map((stat, index) => {\n              const IconComponent = stat.icon;\n              return (\n                <Card key={index} className=\"text-center\" data-testid={`stat-${index}`}>\n                  <CardContent className=\"pt-6\">\n                    <IconComponent className=\"h-8 w-8 text-primary mx-auto mb-3\" />\n                    <div className=\"text-3xl font-bold text-foreground mb-1\">{stat.number}</div>\n                    <div className=\"text-sm text-muted-foreground\">{stat.label}</div>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Our Story */}\n      <section className=\"py-16 bg-muted/30\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n            <div>\n              <h2 className=\"text-3xl font-bold text-foreground mb-6\">Our Story</h2>\n              <div className=\"space-y-4 text-lg text-muted-foreground\">\n                <p>\n                  Founded in 2018, SN.SP (Snow Spring) Limited has grown from a small travel \n                  consultancy to one of Ibadan's most trusted travel agencies.\n                </p>\n                <p>\n                  We began with a simple mission: to make travel accessible, affordable, and \n                  stress-free for everyone. Our founders, seasoned travel professionals with \n                  over a decade of combined experience, recognized the need for personalized \n                  travel services that truly understand the unique needs of Nigerian travelers.\n                </p>\n                <p>\n                  Today, we've successfully helped thousands of clients achieve their travel \n                  dreams, from business trips to family vacations, study abroad programs to \n                  visa applications. Our commitment to excellence and personalized service has \n                  made us the preferred travel partner for individuals and businesses across Nigeria.\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"relative\">\n              <img\n                src={officeImage}\n                alt=\"SN.SP Modern Office Interior\"\n                className=\"rounded-lg shadow-lg w-full\"\n                data-testid=\"img-office-interior\"\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Mission, Vision, Values */}\n      <section className=\"py-16 bg-background\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-12 mb-16\">\n            {/* Mission */}\n            <Card className=\"h-full\">\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Target className=\"h-6 w-6 text-primary\" />\n                  Our Mission\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-muted-foreground\">\n                  To provide exceptional travel services that exceed our clients' expectations, \n                  making every journey memorable and hassle-free through our expertise, \n                  dedication, and personalized approach.\n                </p>\n              </CardContent>\n            </Card>\n\n            {/* Vision */}\n            <Card className=\"h-full\">\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Zap className=\"h-6 w-6 text-primary\" />\n                  Our Vision\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-muted-foreground\">\n                  To become the leading travel agency in Nigeria, recognized for our innovative \n                  solutions, exceptional customer service, and commitment to making the world \n                  more accessible to all travelers.\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Core Values */}\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-foreground mb-4\">Our Core Values</h2>\n            <p className=\"text-lg text-muted-foreground\">The principles that guide everything we do</p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {coreValues.map((value, index) => {\n              const IconComponent = value.icon;\n              return (\n                <Card key={index} className=\"text-center h-full\" data-testid={`value-${index}`}>\n                  <CardContent className=\"pt-6\">\n                    <div className=\"w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                      <IconComponent className=\"h-6 w-6 text-primary\" />\n                    </div>\n                    <h3 className=\"text-xl font-semibold text-foreground mb-3\">{value.title}</h3>\n                    <p className=\"text-muted-foreground\">{value.description}</p>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Leadership Team */}\n      <section className=\"py-16 bg-muted/30\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-foreground mb-4\">Meet Our Team</h2>\n            <p className=\"text-lg text-muted-foreground\">Experienced professionals dedicated to your travel success</p>\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n            {/* CEO Section */}\n            <div className=\"text-center lg:text-left\">\n              <div className=\"flex flex-col lg:flex-row items-center gap-8\">\n                <div className=\"flex-shrink-0\">\n                  <img\n                    src={ceoImage}\n                    alt=\"Oluwaseun Abioye, Founder & CEO\"\n                    className=\"w-48 h-48 rounded-full object-cover shadow-lg mx-auto\"\n                    data-testid=\"img-ceo-profile\"\n                  />\n                </div>\n                <div>\n                  <h3 className=\"text-2xl font-bold text-foreground mb-2\">Oluwaseun Abioye</h3>\n                  <p className=\"text-lg text-primary mb-4\">Founder & CEO</p>\n                  <p className=\"text-muted-foreground mb-6\">\n                    With over 10 years in the travel industry, Seun leads our team with passion \n                    for creating exceptional travel experiences. His extensive experience in travel \n                    management and deep understanding of customer needs ensures that every client \n                    receives world-class service.\n                  </p>\n                  <p className=\"text-muted-foreground\">\n                    Under his visionary leadership, SN.SP Limited has grown from a concept to a \n                    trusted name in the Nigerian travel industry, committed to excellence and innovation.\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            {/* Team Overview */}\n            <div>\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center gap-2\">\n                    <Users className=\"h-6 w-6 text-primary\" />\n                    Our Professional Team\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-muted-foreground mb-6\">\n                    Our experienced consultants are trained in visa requirements, flight bookings, \n                    and destination expertise to serve you better. Each team member brings \n                    specialized knowledge and passion for travel to ensure your journey is perfect.\n                  </p>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex items-center gap-3\">\n                      <CheckCircle className=\"h-5 w-5 text-primary flex-shrink-0\" />\n                      <span className=\"text-sm\">Certified travel consultants</span>\n                    </div>\n                    <div className=\"flex items-center gap-3\">\n                      <CheckCircle className=\"h-5 w-5 text-primary flex-shrink-0\" />\n                      <span className=\"text-sm\">Visa application specialists</span>\n                    </div>\n                    <div className=\"flex items-center gap-3\">\n                      <CheckCircle className=\"h-5 w-5 text-primary flex-shrink-0\" />\n                      <span className=\"text-sm\">Destination experts</span>\n                    </div>\n                    <div className=\"flex items-center gap-3\">\n                      <CheckCircle className=\"h-5 w-5 text-primary flex-shrink-0\" />\n                      <span className=\"text-sm\">24/7 customer support team</span>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Why Choose Us */}\n      <section className=\"py-16 bg-background\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-foreground mb-4\">Why Choose SN.SP Limited</h2>\n            <p className=\"text-lg text-muted-foreground\">What sets us apart in the travel industry</p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {whyChooseFeatures.map((feature, index) => {\n              const IconComponent = feature.icon;\n              return (\n                <Card key={index} className=\"text-center h-full hover-elevate\" data-testid={`feature-${index}`}>\n                  <CardContent className=\"pt-6\">\n                    <div className=\"w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                      <IconComponent className=\"h-6 w-6 text-primary\" />\n                    </div>\n                    <h3 className=\"text-xl font-semibold text-foreground mb-3\">{feature.title}</h3>\n                    <p className=\"text-muted-foreground\">{feature.description}</p>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-16 bg-primary/5\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"text-3xl font-bold text-foreground mb-4\">\n            Ready to Start Your Journey?\n          </h2>\n          <p className=\"text-lg text-muted-foreground mb-8 max-w-2xl mx-auto\">\n            Let our experienced team help you plan your perfect trip. Contact us today \n            for personalized travel solutions.\n          </p>\n          <Button size=\"lg\" onClick={scrollToContact} data-testid=\"button-get-in-touch\">\n            Get in Touch\n          </Button>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":15154},"frontend/src/pages/EnhancedContact.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from \"@/components/ui/accordion\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport { \n  MapPin, \n  Clock, \n  Phone, \n  Mail, \n  Send,\n  MessageCircle,\n  PhoneCall,\n  HelpCircle,\n  Plane,\n  FileText,\n  Hotel,\n  GraduationCap\n} from \"lucide-react\";\n\ninterface ContactForm {\n  firstName: string;\n  lastName: string;\n  email: string;\n  phone: string;\n  subject: string;\n  message: string;\n}\n\nconst serviceOptions = [\n  { icon: Plane, title: \"Flight Bookings\", description: \"Need help with flight reservations, cancellations, or changes?\" },\n  { icon: FileText, title: \"Visa Applications\", description: \"Expert assistance with visa applications and documentation.\" },\n  { icon: Hotel, title: \"Hotel Reservations\", description: \"Find and book the perfect accommodation for your trip.\" },\n  { icon: GraduationCap, title: \"Study Abroad\", description: \"Complete guidance for studying abroad applications.\" }\n];\n\nconst faqs = [\n  {\n    question: \"What are your office hours?\",\n    answer: \"Our office is open Monday through Friday from 9:00 AM to 5:00 PM. We're also available by appointment on Saturdays. For urgent matters outside office hours, you can reach us via WhatsApp or email.\"\n  },\n  {\n    question: \"How can I track my visa application?\",\n    answer: \"Once we submit your visa application, we'll provide you with a tracking reference number. You can contact us anytime for updates, and we'll proactively inform you of any progress or additional requirements from the embassy.\"\n  },\n  {\n    question: \"Do you offer emergency travel assistance?\",\n    answer: \"Yes! We provide 24/7 emergency assistance for our clients who are traveling. You can reach our emergency hotline for urgent flight changes, lost documents, or any travel emergencies.\"\n  },\n  {\n    question: \"What payment methods do you accept?\",\n    answer: \"We accept bank transfers, card payments, and cash payments at our office. For online transactions, we use secure payment gateways. Payment plans are available for larger travel packages.\"\n  }\n];\n\nexport default function EnhancedContact() {\n  const [formData, setFormData] = useState<ContactForm>({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phone: \"\",\n    subject: \"\",\n    message: \"\"\n  });\n\n  const handleInputChange = (field: keyof ContactForm, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    console.log(`Updated ${field}:`, value);\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    console.log(\"Contact form submitted:\", formData);\n    alert(\"Thank you for your message! We'll get back to you within 24 hours.\");\n    // Reset form\n    setFormData({\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      phone: \"\",\n      subject: \"\",\n      message: \"\"\n    });\n  };\n\n  const handleServiceClick = (service: string) => {\n    console.log(`${service} service clicked`);\n    alert(`You'll be connected with our ${service} specialist. Feature coming soon!`);\n  };\n\n  const handleQuickContact = (method: string) => {\n    console.log(`${method} contact clicked`);\n    if (method === \"WhatsApp\") {\n      alert(\"WhatsApp integration coming soon!\");\n    } else if (method === \"Call\") {\n      alert(\"Calling +234 703 261 5370\");\n    } else {\n      alert(\"Email client opening...\");\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Header />\n      \n      {/* Hero Section */}\n      <section className=\"pt-20 pb-12 bg-gradient-to-br from-primary/10 via-background to-accent/10\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h1 className=\"text-4xl md:text-6xl font-bold text-foreground mb-6\">\n            Contact SN.SP Limited\n          </h1>\n          <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n            Get in touch with our travel experts for personalized assistance\n          </p>\n        </div>\n      </section>\n\n      {/* Office Information */}\n      <section className=\"py-16 bg-background\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8 mb-16\">\n            <Card className=\"text-center\">\n              <CardContent className=\"pt-6\">\n                <MapPin className=\"h-8 w-8 text-primary mx-auto mb-4\" />\n                <h3 className=\"font-semibold text-foreground mb-2\">Our Office</h3>\n                <p className=\"text-sm text-muted-foreground\">\n                  Suite 15, Damin Plaza<br />\n                  Ring Road, Ibadan<br />\n                  Oyo State, Nigeria\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"text-center\">\n              <CardContent className=\"pt-6\">\n                <Phone className=\"h-8 w-8 text-primary mx-auto mb-4\" />\n                <h3 className=\"font-semibold text-foreground mb-2\">Phone Numbers</h3>\n                <p className=\"text-sm text-muted-foreground\">\n                  +234 703 261 5370<br />\n                  +234 901 593 2925\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"text-center\">\n              <CardContent className=\"pt-6\">\n                <Mail className=\"h-8 w-8 text-primary mx-auto mb-4\" />\n                <h3 className=\"font-semibold text-foreground mb-2\">Email Address</h3>\n                <p className=\"text-sm text-muted-foreground\">\n                  info@snsp.com.ng<br />\n                  support@snsp.com.ng\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"text-center\">\n              <CardContent className=\"pt-6\">\n                <Clock className=\"h-8 w-8 text-primary mx-auto mb-4\" />\n                <h3 className=\"font-semibold text-foreground mb-2\">Business Hours</h3>\n                <p className=\"text-sm text-muted-foreground\">\n                  Monday - Friday<br />\n                  9:00 AM - 5:00 PM<br />\n                  Saturday: By Appointment\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Main Contact Section */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12\">\n            {/* Contact Form */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-2xl\">General Inquiry</CardTitle>\n                <p className=\"text-muted-foreground\">Send us a message and we'll respond within 24 hours</p>\n              </CardHeader>\n              <CardContent>\n                <form onSubmit={handleSubmit} className=\"space-y-6\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"firstName\">First Name</Label>\n                      <Input\n                        id=\"firstName\"\n                        placeholder=\"Enter your first name\"\n                        value={formData.firstName}\n                        onChange={(e) => handleInputChange(\"firstName\", e.target.value)}\n                        data-testid=\"input-first-name\"\n                        required\n                      />\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"lastName\">Last Name</Label>\n                      <Input\n                        id=\"lastName\"\n                        placeholder=\"Enter your last name\"\n                        value={formData.lastName}\n                        onChange={(e) => handleInputChange(\"lastName\", e.target.value)}\n                        data-testid=\"input-last-name\"\n                        required\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"email\">Email Address</Label>\n                      <Input\n                        id=\"email\"\n                        type=\"email\"\n                        placeholder=\"your.email@example.com\"\n                        value={formData.email}\n                        onChange={(e) => handleInputChange(\"email\", e.target.value)}\n                        data-testid=\"input-contact-email\"\n                        required\n                      />\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"phone\">Phone Number</Label>\n                      <Input\n                        id=\"phone\"\n                        placeholder=\"+234 XXX XXX XXXX\"\n                        value={formData.phone}\n                        onChange={(e) => handleInputChange(\"phone\", e.target.value)}\n                        data-testid=\"input-contact-phone\"\n                        required\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"subject\">Subject</Label>\n                    <Select value={formData.subject} onValueChange={(value) => handleInputChange(\"subject\", value)}>\n                      <SelectTrigger data-testid=\"select-contact-subject\">\n                        <SelectValue placeholder=\"Select Subject\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"general\">General Inquiry</SelectItem>\n                        <SelectItem value=\"booking\">Booking Assistance</SelectItem>\n                        <SelectItem value=\"visa\">Visa Application</SelectItem>\n                        <SelectItem value=\"complaint\">Complaint</SelectItem>\n                        <SelectItem value=\"feedback\">Feedback</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"message\">Message</Label>\n                    <Textarea\n                      id=\"message\"\n                      placeholder=\"Tell us how we can help you...\"\n                      value={formData.message}\n                      onChange={(e) => handleInputChange(\"message\", e.target.value)}\n                      rows={5}\n                      data-testid=\"textarea-contact-message\"\n                      required\n                    />\n                  </div>\n\n                  <Button type=\"submit\" size=\"lg\" className=\"w-full\" data-testid=\"button-send-message\">\n                    <Send className=\"mr-2 h-5 w-5\" />\n                    Send Message\n                  </Button>\n                </form>\n              </CardContent>\n            </Card>\n\n            {/* Quick Contact Options */}\n            <div className=\"space-y-8\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Quick Contact Options</CardTitle>\n                  <p className=\"text-muted-foreground\">Get immediate assistance through our preferred channels</p>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <Button \n                    variant=\"outline\" \n                    className=\"w-full justify-start h-auto p-4\"\n                    onClick={() => handleQuickContact(\"WhatsApp\")}\n                    data-testid=\"button-whatsapp\"\n                  >\n                    <MessageCircle className=\"mr-3 h-5 w-5 text-green-600\" />\n                    <div className=\"text-left\">\n                      <div className=\"font-medium\">WhatsApp</div>\n                      <div className=\"text-sm text-muted-foreground\">Chat with us instantly</div>\n                    </div>\n                  </Button>\n\n                  <Button \n                    variant=\"outline\" \n                    className=\"w-full justify-start h-auto p-4\"\n                    onClick={() => handleQuickContact(\"Call\")}\n                    data-testid=\"button-call-now\"\n                  >\n                    <PhoneCall className=\"mr-3 h-5 w-5 text-blue-600\" />\n                    <div className=\"text-left\">\n                      <div className=\"font-medium\">Call Now</div>\n                      <div className=\"text-sm text-muted-foreground\">Speak with our experts</div>\n                    </div>\n                  </Button>\n\n                  <Button \n                    variant=\"outline\" \n                    className=\"w-full justify-start h-auto p-4\"\n                    onClick={() => handleQuickContact(\"Email\")}\n                    data-testid=\"button-email-us\"\n                  >\n                    <Mail className=\"mr-3 h-5 w-5 text-purple-600\" />\n                    <div className=\"text-left\">\n                      <div className=\"font-medium\">Email Us</div>\n                      <div className=\"text-sm text-muted-foreground\">Send detailed inquiry</div>\n                    </div>\n                  </Button>\n                </CardContent>\n              </Card>\n\n              {/* Office Hours */}\n              <Card>\n                <CardHeader>\n                  <CardTitle>Office Hours</CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-3\">\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-muted-foreground\">Monday - Friday</span>\n                    <span className=\"font-medium\">9:00 AM - 5:00 PM</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-muted-foreground\">Saturday</span>\n                    <span className=\"font-medium\">By Appointment</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-muted-foreground\">Sunday</span>\n                    <span className=\"font-medium\">Closed</span>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Service-Specific Assistance */}\n      <section className=\"py-16 bg-muted/30\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-foreground mb-4\">Service-Specific Assistance</h2>\n            <p className=\"text-lg text-muted-foreground\">Get specialized help for your travel needs</p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            {serviceOptions.map((service, index) => {\n              const IconComponent = service.icon;\n              return (\n                <Card key={index} className=\"text-center hover-elevate cursor-pointer\" data-testid={`service-${index}`}>\n                  <CardContent className=\"pt-6\">\n                    <IconComponent className=\"h-8 w-8 text-primary mx-auto mb-4\" />\n                    <h3 className=\"font-semibold text-foreground mb-2\">{service.title}</h3>\n                    <p className=\"text-sm text-muted-foreground mb-4\">{service.description}</p>\n                    <Button \n                      size=\"sm\" \n                      variant=\"outline\"\n                      onClick={() => handleServiceClick(service.title)}\n                      data-testid={`button-${service.title.toLowerCase().replace(\" \", \"-\")}`}\n                    >\n                      Get Help\n                    </Button>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Location & Directions */}\n      <section className=\"py-16 bg-background\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n            <div>\n              <h2 className=\"text-3xl font-bold text-foreground mb-6\">Find Our Office</h2>\n              <Card>\n                <CardHeader>\n                  <CardTitle>SN.SP Limited Office</CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div>\n                    <h4 className=\"font-medium text-foreground mb-1\">Address</h4>\n                    <p className=\"text-muted-foreground\">Suite 15, Damin Plaza, Ring Road, Ibadan</p>\n                    <p className=\"text-muted-foreground\">Oyo State, Nigeria</p>\n                  </div>\n                  <div>\n                    <h4 className=\"font-medium text-foreground mb-1\">Directions</h4>\n                    <p className=\"text-muted-foreground text-sm\">\n                      Located opposite Grandex Mall on Ring Road, our office is easily accessible \n                      by public transportation and private vehicles. Parking is available on-site.\n                    </p>\n                  </div>\n                  <Button variant=\"outline\" data-testid=\"button-get-directions\">\n                    <MapPin className=\"mr-2 h-4 w-4\" />\n                    Get Directions\n                  </Button>\n                </CardContent>\n              </Card>\n            </div>\n\n            <div className=\"h-64 lg:h-96 bg-gradient-to-br from-primary/20 to-accent/20 rounded-lg flex items-center justify-center\">\n              <div className=\"text-center\">\n                <MapPin className=\"h-12 w-12 text-primary mx-auto mb-2\" />\n                <p className=\"text-muted-foreground\">Interactive Map Coming Soon</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* FAQ Section */}\n      <section className=\"py-16 bg-muted/30\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-foreground mb-4\">Frequently Asked Questions</h2>\n            <p className=\"text-lg text-muted-foreground\">Quick answers to common questions</p>\n          </div>\n\n          <Accordion type=\"single\" collapsible className=\"space-y-4\">\n            {faqs.map((faq, index) => (\n              <AccordionItem key={index} value={`item-${index}`} data-testid={`faq-${index}`}>\n                <AccordionTrigger className=\"text-left\">\n                  <div className=\"flex items-center gap-3\">\n                    <HelpCircle className=\"h-5 w-5 text-primary flex-shrink-0\" />\n                    {faq.question}\n                  </div>\n                </AccordionTrigger>\n                <AccordionContent>\n                  <p className=\"text-muted-foreground pl-8\">{faq.answer}</p>\n                </AccordionContent>\n              </AccordionItem>\n            ))}\n          </Accordion>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":19189},"frontend/src/pages/Home.tsx":{"content":"import Header from \"@/components/Header\";\nimport Hero from \"@/components/Hero\";\nimport FlightBookingForm from \"@/components/FlightBookingForm\";\nimport RecentTours from \"@/components/RecentTours\";\nimport Services from \"@/components/Services\";\nimport About from \"@/components/About\";\nimport Testimonials from \"@/components/Testimonials\";\nimport Partners from \"@/components/Partners\";\nimport Contact from \"@/components/Contact\";\nimport Footer from \"@/components/Footer\";\n\nexport default function Home() {\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Header */}\n      <Header />\n      \n      {/* Hero Section */}\n      <Hero />\n      \n      {/* Flight Booking Form Section */}\n      <section className=\"py-16 bg-muted/30\">\n        <div className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <FlightBookingForm />\n        </div>\n      </section>\n      \n      {/* Recent Tours Section */}\n      <RecentTours />\n      \n      {/* Services Section */}\n      <Services />\n      \n      {/* About Section */}\n      <About />\n      \n      {/* Testimonials Section */}\n      <Testimonials />\n      \n      {/* Partners Section */}\n      <Partners />\n      \n      {/* Contact Section */}\n      <Contact />\n      \n      {/* Footer */}\n      <Footer />\n    </div>\n  );\n}","size_bytes":1284},"frontend/src/pages/Tours.tsx":{"content":"\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\n\nconst tours = [\n  {\n    id: 1,\n    image: \"/attached_assets/IMG-20250916-WA0022_1758093892791.jpg\",\n    title: \"Canada\",\n    caption: \"Explore the stunning landscapes and vibrant cities of Canada\"\n  },\n  {\n    id: 2,\n    image: \"/attached_assets/IMG-20250916-WA0023_1758093892792.jpg\",\n    title: \"Jordan & Israel\",\n    caption: \"Discover ancient history and religious sites in the Holy Land\"\n  },\n  {\n    id: 3,\n    image: \"/attached_assets/IMG-20250916-WA0024_1758093892793.jpg\",\n    title: \"Egypt\",\n    caption: \"Experience the wonders of ancient pyramids and pharaohs\"\n  },\n  {\n    id: 4,\n    image: \"/attached_assets/IMG-20250916-WA0025_1758093892793.jpg\",\n    title: \"Italy\",\n    caption: \"Immerse yourself in art, culture, and culinary delights\"\n  },\n  {\n    id: 5,\n    image: \"/attached_assets/IMG-20250916-WA0026_1758093892794.jpg\",\n    title: \"Nigeria\",\n    caption: \"Discover the rich culture and natural beauty of Nigeria\"\n  },\n  {\n    id: 6,\n    image: \"/attached_assets/IMG-20250916-WA0027_1758093892795.jpg\",\n    title: \"Mauritius\",\n    caption: \"Relax on pristine beaches and enjoy tropical paradise\"\n  },\n  {\n    id: 7,\n    image: \"/attached_assets/IMG-20250916-WA0028_1758093892795.jpg\",\n    title: \"Tanzania\",\n    caption: \"Safari adventures and Mount Kilimanjaro expeditions\"\n  },\n  {\n    id: 8,\n    image: \"/attached_assets/IMG-20250916-WA0029_1758093892796.jpg\",\n    title: \"Turkey\",\n    caption: \"Bridge between Europe and Asia with rich cultural heritage\"\n  },\n  {\n    id: 9,\n    image: \"/attached_assets/IMG-20250916-WA0030_1758093892796.jpg\",\n    title: \"Ghana\",\n    caption: \"Gateway to West Africa with vibrant culture and history\"\n  },\n  {\n    id: 10,\n    image: \"/attached_assets/IMG-20250916-WA0032_1758093892798.jpg\",\n    title: \"Kenya\",\n    caption: \"Home to incredible wildlife and the Great Migration\"\n  },\n  {\n    id: 11,\n    image: \"/attached_assets/IMG-20250916-WA0037_1758093892800.jpg\",\n    title: \"South Africa\",\n    caption: \"Rainbow Nation with diverse landscapes and wildlife\"\n  },\n  {\n    id: 12,\n    image: \"/attached_assets/IMG-20250916-WA0038_1758093892801.jpg\",\n    title: \"United Kingdom\",\n    caption: \"Discover historic castles, modern cities, and countryside\"\n  }\n];\n\nexport default function Tours() {\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Header />\n\n      {/* Hero Section */}\n      <section className=\"pt-20 pb-12 bg-gradient-to-br from-primary/10 via-background to-accent/10\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h1 className=\"text-4xl md:text-6xl font-bold text-foreground mb-6\">\n              Our Tours\n            </h1>\n          </div>\n        </div>\n      </section>\n\n      {/* Tours Gallery */}\n      <section className=\"py-16\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n            {tours.map((tour) => (\n              <div key={tour.id} className=\"group cursor-pointer\">\n                <div className=\"relative overflow-hidden rounded-lg aspect-square\">\n                  <img \n                    src={tour.image} \n                    alt={tour.title}\n                    className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-300\"\n                    onError={(e) => {\n                      const target = e.target as HTMLImageElement;\n                      target.style.display = 'none';\n                      const fallback = document.createElement('div');\n                      fallback.className = 'w-full h-full bg-gradient-to-br from-primary/20 to-accent/20 flex items-center justify-center';\n                      fallback.innerHTML = `<div class=\"text-center\"><svg viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"h-12 w-12 text-primary mx-auto mb-2\"><path d=\"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"/></svg><p class=\"text-primary font-medium\">${tour.title}</p></div>`;\n                      target.parentNode?.appendChild(fallback);\n                    }}\n                  />\n                  {/* Caption Overlay */}\n                  <div className=\"absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/80 to-transparent p-4 opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\n                    <h3 className=\"text-white font-semibold text-lg mb-1\">{tour.title}</h3>\n                    <p className=\"text-white/90 text-sm\">{tour.caption}</p>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":4888},"frontend/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"frontend/src/components/examples/AboutExample.tsx":{"content":"import About from '../About';\n\nexport default function AboutExample() {\n  return <About />;\n}","size_bytes":93},"frontend/src/components/examples/ContactExample.tsx":{"content":"import Contact from '../Contact';\n\nexport default function ContactExample() {\n  return <Contact />;\n}","size_bytes":101},"frontend/src/components/examples/FlightBookingFormExample.tsx":{"content":"import FlightBookingForm from '../FlightBookingForm';\n\nexport default function FlightBookingFormExample() {\n  return (\n    <div className=\"p-8 bg-background\">\n      <FlightBookingForm />\n    </div>\n  );\n}","size_bytes":204},"frontend/src/components/examples/FooterExample.tsx":{"content":"import Footer from '../Footer';\n\nexport default function FooterExample() {\n  return <Footer />;\n}","size_bytes":97},"frontend/src/components/examples/HeaderExample.tsx":{"content":"import Header from '../Header';\n\nexport default function HeaderExample() {\n  return <Header />;\n}","size_bytes":97},"frontend/src/components/examples/HeroExample.tsx":{"content":"import Hero from '../Hero';\n\nexport default function HeroExample() {\n  return <Hero />;\n}","size_bytes":89},"frontend/src/components/examples/PartnersExample.tsx":{"content":"import Partners from '../Partners';\n\nexport default function PartnersExample() {\n  return <Partners />;\n}","size_bytes":105},"frontend/src/components/examples/ServicesExample.tsx":{"content":"import Services from '../Services';\n\nexport default function ServicesExample() {\n  return <Services />;\n}","size_bytes":105},"frontend/src/components/examples/TestimonialsExample.tsx":{"content":"import Testimonials from '../Testimonials';\n\nexport default function TestimonialsExample() {\n  return <Testimonials />;\n}","size_bytes":121},"frontend/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"frontend/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"frontend/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"frontend/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"frontend/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(`\n      after:content-[''] after:block after:absolute after:inset-0 after:rounded-full after:pointer-events-none after:border after:border-black/10 dark:after:border-white/10\n      relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full`,\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1592},"frontend/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  // Whitespace-nowrap: Badges should never wrap.\n  \"whitespace-nowrap inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" +\n  \" hover-elevate \" ,\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow-xs\",\n        secondary: \"border-transparent bg-secondary text-secondary-foreground\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow-xs\",\n\n        outline: \" border [border-color:var(--badge-outline)] shadow-xs\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1202},"frontend/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"frontend/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\" +\n  \" hover-elevate active-elevate-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground border border-primary-border\",\n        destructive:\n          \"bg-destructive text-destructive-foreground border border-destructive-border\",\n        outline:\n          // Shows the background color of whatever card / sidebar / accent background it is inside of.\n          // Inherits the current text color.\n          \" border [border-color:var(--button-outline)]  shadow-xs active:shadow-none \",\n        secondary: \"border bg-secondary text-secondary-foreground border border-secondary-border \",\n        // Add a transparent border so that when someone toggles a border on later, it doesn't shift layout/size.\n        ghost: \"border border-transparent\",\n      },\n      // Heights are set as \"min\" heights, because sometimes Ai will place large amount of content\n      // inside buttons. With a min-height they will look appropriate with small amounts of content,\n      // but will expand to fit large amounts of content.\n      size: {\n        default: \"min-h-9 px-4 py-2\",\n        sm: \"min-h-8 rounded-md px-3 text-xs\",\n        lg: \"min-h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  },\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":2359},"frontend/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"frontend/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"shadcn-card rounded-xl border bg-card border-card-border text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n}\n","size_bytes":1904},"frontend/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"frontend/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"frontend/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"frontend/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"frontend/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"frontend/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"frontend/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"frontend/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"frontend/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"frontend/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"frontend/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"frontend/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"frontend/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    // h-9 to match icon buttons and default buttons.\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":844},"frontend/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"frontend/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"frontend/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"frontend/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"frontend/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"frontend/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"frontend/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"frontend/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"frontend/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"frontend/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5741},"frontend/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"frontend/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"frontend/src/components/ui/sidebar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, VariantProps } from \"class-variance-authority\"\nimport { PanelLeftIcon } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nfunction SidebarProvider({\n  defaultOpen = true,\n  open: openProp,\n  onOpenChange: setOpenProp,\n  className,\n  style,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  defaultOpen?: boolean\n  open?: boolean\n  onOpenChange?: (open: boolean) => void\n}) {\n  const isMobile = useIsMobile()\n  const [openMobile, setOpenMobile] = React.useState(false)\n\n  // This is the internal state of the sidebar.\n  // We use openProp and setOpenProp for control from outside the component.\n  const [_open, _setOpen] = React.useState(defaultOpen)\n  const open = openProp ?? _open\n  const setOpen = React.useCallback(\n    (value: boolean | ((value: boolean) => boolean)) => {\n      const openState = typeof value === \"function\" ? value(open) : value\n      if (setOpenProp) {\n        setOpenProp(openState)\n      } else {\n        _setOpen(openState)\n      }\n\n      // This sets the cookie to keep the sidebar state.\n      document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n    },\n    [setOpenProp, open]\n  )\n\n  // Helper to toggle the sidebar.\n  const toggleSidebar = React.useCallback(() => {\n    return isMobile ? setOpenMobile((open) => !open) : setOpen((open) => !open)\n  }, [isMobile, setOpen, setOpenMobile])\n\n  // Adds a keyboard shortcut to toggle the sidebar.\n  React.useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (\n        event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n        (event.metaKey || event.ctrlKey)\n      ) {\n        event.preventDefault()\n        toggleSidebar()\n      }\n    }\n\n    window.addEventListener(\"keydown\", handleKeyDown)\n    return () => window.removeEventListener(\"keydown\", handleKeyDown)\n  }, [toggleSidebar])\n\n  // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n  // This makes it easier to style the sidebar with Tailwind classes.\n  const state = open ? \"expanded\" : \"collapsed\"\n\n  const contextValue = React.useMemo<SidebarContextProps>(\n    () => ({\n      state,\n      open,\n      setOpen,\n      isMobile,\n      openMobile,\n      setOpenMobile,\n      toggleSidebar,\n    }),\n    [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n  )\n\n  return (\n    <SidebarContext.Provider value={contextValue}>\n      <TooltipProvider delayDuration={0}>\n        <div\n          data-slot=\"sidebar-wrapper\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH,\n              \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n              ...style,\n            } as React.CSSProperties\n          }\n          className={cn(\n            \"group/sidebar-wrapper has-data-[variant=inset]:bg-sidebar flex min-h-svh w-full\",\n            className\n          )}\n          {...props}\n        >\n          {children}\n        </div>\n      </TooltipProvider>\n    </SidebarContext.Provider>\n  )\n}\n\nfunction Sidebar({\n  side = \"left\",\n  variant = \"sidebar\",\n  collapsible = \"offcanvas\",\n  className,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  side?: \"left\" | \"right\"\n  variant?: \"sidebar\" | \"floating\" | \"inset\"\n  collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n}) {\n  const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n  if (collapsible === \"none\") {\n    return (\n      <div\n        data-slot=\"sidebar\"\n        className={cn(\n          \"bg-sidebar text-sidebar-foreground flex h-full w-[var(--sidebar-width)] flex-col\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n\n  if (isMobile) {\n    return (\n      <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n        <SheetContent\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar\"\n          data-mobile=\"true\"\n          className=\"bg-sidebar text-sidebar-foreground w-[var(--sidebar-width)] p-0 [&>button]:hidden\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n            } as React.CSSProperties\n          }\n          side={side}\n        >\n          <SheetHeader className=\"sr-only\">\n            <SheetTitle>Sidebar</SheetTitle>\n            <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n          </SheetHeader>\n          <div className=\"flex h-full w-full flex-col\">{children}</div>\n        </SheetContent>\n      </Sheet>\n    )\n  }\n\n  return (\n    <div\n      className=\"group peer text-sidebar-foreground hidden md:block\"\n      data-state={state}\n      data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n      data-variant={variant}\n      data-side={side}\n      data-slot=\"sidebar\"\n    >\n      {/* This is what handles the sidebar gap on desktop */}\n      <div\n        data-slot=\"sidebar-gap\"\n        className={cn(\n          \"relative w-[var(--sidebar-width)] bg-transparent transition-[width] duration-200 ease-linear\",\n          \"group-data-[collapsible=offcanvas]:w-0\",\n          \"group-data-[side=right]:rotate-180\",\n          variant === \"floating\" || variant === \"inset\"\n            ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+var(--spacing-4))]\"\n            : \"group-data-[collapsible=icon]:w-[var(--sidebar-width-icon)]\"\n        )}\n      />\n      <div\n        data-slot=\"sidebar-container\"\n        className={cn(\n          \"fixed inset-y-0 z-10 hidden h-svh w-[var(--sidebar-width)] transition-[left,right,width] duration-200 ease-linear md:flex\",\n          side === \"left\"\n            ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n            : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n          // Adjust the padding for floating and inset variants.\n          variant === \"floating\" || variant === \"inset\"\n            ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+var(--spacing-4)+2px)]\"\n            : \"group-data-[collapsible=icon]:w-[var(--sidebar-width-icon)] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n          className\n        )}\n        {...props}\n      >\n        <div\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar-inner\"\n          className=\"bg-sidebar group-data-[variant=floating]:border-sidebar-border flex h-full w-full flex-col group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:shadow-sm\"\n        >\n          {children}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction SidebarTrigger({\n  className,\n  onClick,\n  ...props\n}: React.ComponentProps<typeof Button>) {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      data-sidebar=\"trigger\"\n      data-slot=\"sidebar-trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeftIcon />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n}\n\nfunction SidebarRail({ className, ...props }: React.ComponentProps<\"button\">) {\n  const { toggleSidebar } = useSidebar()\n\n  // Note: Tailwind v3.4 doesn't support \"in-\" selectors. So the rail won't work perfectly.\n  return (\n    <button\n      data-sidebar=\"rail\"\n      data-slot=\"sidebar-rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"hover:after:bg-sidebar-border absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear group-data-[side=left]:-right-4 group-data-[side=right]:left-0 after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] sm:flex\",\n        \"in-data-[side=left]:cursor-w-resize in-data-[side=right]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"hover:group-data-[collapsible=offcanvas]:bg-sidebar group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarInset({ className, ...props }: React.ComponentProps<\"main\">) {\n  return (\n    <main\n      data-slot=\"sidebar-inset\"\n      className={cn(\n        \"bg-background relative flex w-full flex-1 flex-col\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow-sm md:peer-data-[variant=inset]:peer-data-[state=collapsed]:ml-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarInput({\n  className,\n  ...props\n}: React.ComponentProps<typeof Input>) {\n  return (\n    <Input\n      data-slot=\"sidebar-input\"\n      data-sidebar=\"input\"\n      className={cn(\"bg-background h-8 w-full shadow-none\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-header\"\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-footer\"\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof Separator>) {\n  return (\n    <Separator\n      data-slot=\"sidebar-separator\"\n      data-sidebar=\"separator\"\n      className={cn(\"bg-sidebar-border mx-2 w-auto\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-content\"\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroup({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group\"\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupLabel({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"div\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-label\"\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"text-sidebar-foreground/70 ring-sidebar-ring flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium outline-hidden transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:h-4 [&>svg]:w-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupAction({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-action\"\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground absolute top-3.5 right-3 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupContent({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group-content\"\n      data-sidebar=\"group-content\"\n      className={cn(\"w-full text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenu({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu\"\n      data-sidebar=\"menu\"\n      className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuItem({ className, ...props }: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-item\"\n      data-sidebar=\"menu-item\"\n      className={cn(\"group/menu-item relative\", className)}\n      {...props}\n    />\n  )\n}\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-hidden ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-data-[sidebar=menu-action]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:w-8! group-data-[collapsible=icon]:h-8! group-data-[collapsible=icon]:p-2! [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:p-0!\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction SidebarMenuButton({\n  asChild = false,\n  isActive = false,\n  variant = \"default\",\n  size = \"default\",\n  tooltip,\n  className,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean\n  isActive?: boolean\n  tooltip?: string | React.ComponentProps<typeof TooltipContent>\n} & VariantProps<typeof sidebarMenuButtonVariants>) {\n  const Comp = asChild ? Slot : \"button\"\n  const { isMobile, state } = useSidebar()\n\n  const button = (\n    <Comp\n      data-slot=\"sidebar-menu-button\"\n      data-sidebar=\"menu-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n      {...props}\n    />\n  )\n\n  if (!tooltip) {\n    return button\n  }\n\n  if (typeof tooltip === \"string\") {\n    tooltip = {\n      children: tooltip,\n    }\n  }\n\n  return (\n    <Tooltip>\n      <TooltipTrigger asChild>{button}</TooltipTrigger>\n      <TooltipContent\n        side=\"right\"\n        align=\"center\"\n        hidden={state !== \"collapsed\" || isMobile}\n        {...tooltip}\n      />\n    </Tooltip>\n  )\n}\n\nfunction SidebarMenuAction({\n  className,\n  asChild = false,\n  showOnHover = false,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean\n  showOnHover?: boolean\n}) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-action\"\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground peer-hover/menu-button:text-sidebar-accent-foreground absolute top-1.5 right-1 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"peer-data-[active=true]/menu-button:text-sidebar-accent-foreground group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuBadge({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-menu-badge\"\n      data-sidebar=\"menu-badge\"\n      className={cn(\n        \"text-sidebar-foreground pointer-events-none absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums select-none\",\n        \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSkeleton({\n  className,\n  showIcon = false,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  showIcon?: boolean\n}) {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      data-slot=\"sidebar-menu-skeleton\"\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[var(--skeleton-width)] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n}\n\nfunction SidebarMenuSub({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu-sub\"\n      data-sidebar=\"menu-sub\"\n      className={cn(\n        \"border-sidebar-border mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l px-2.5 py-0.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSubItem({\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-sub-item\"\n      data-sidebar=\"menu-sub-item\"\n      className={cn(\"group/menu-sub-item relative\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSubButton({\n  asChild = false,\n  size = \"md\",\n  isActive = false,\n  className,\n  ...props\n}: React.ComponentProps<\"a\"> & {\n  asChild?: boolean\n  size?: \"sm\" | \"md\"\n  isActive?: boolean\n}) {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-sub-button\"\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground active:bg-sidebar-accent active:text-sidebar-accent-foreground [&>svg]:text-sidebar-accent-foreground flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 outline outline-2 outline-transparent outline-offset-2 focus-visible:ring-2 disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":21846},"frontend/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"frontend/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"frontend/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"frontend/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"frontend/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"frontend/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"frontend/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"frontend/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"frontend/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"frontend/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"frontend/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"frontend/src/pages/admin/AdminDashboard.tsx":{"content":"import { useState } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport { \n  Users, \n  Plane, \n  MessageSquare, \n  FileText,\n  TrendingUp,\n  Calendar,\n  Clock,\n  CheckCircle,\n  AlertCircle,\n  Eye,\n  Edit,\n  Trash2,\n  MapPin\n} from \"lucide-react\";\n\n// Todo: remove mock functionality - replace with real admin data\nconst dashboardStats = [\n  { title: \"Total Bookings\", value: \"1,234\", change: \"+12%\", icon: Plane, color: \"text-blue-600\" },\n  { title: \"Active Inquiries\", value: \"56\", change: \"+5%\", icon: MessageSquare, color: \"text-green-600\" },\n  { title: \"Blog Posts\", value: \"28\", change: \"+3%\", icon: FileText, color: \"text-purple-600\" },\n  { title: \"Total Clients\", value: \"5,678\", change: \"+8%\", icon: Users, color: \"text-orange-600\" }\n];\n\nconst recentBookings = [\n  { id: \"1\", client: \"John Doe\", service: \"Flight Booking\", destination: \"Dubai\", status: \"Pending\", date: \"2025-01-16\" },\n  { id: \"2\", client: \"Jane Smith\", service: \"Visa Application\", destination: \"UK\", status: \"Processing\", date: \"2025-01-15\" },\n  { id: \"3\", client: \"Mike Johnson\", service: \"Hotel Booking\", destination: \"Paris\", status: \"Confirmed\", date: \"2025-01-14\" },\n  { id: \"4\", client: \"Sarah Wilson\", service: \"Study Abroad\", destination: \"Canada\", status: \"Pending\", date: \"2025-01-13\" }\n];\n\nconst recentInquiries = [\n  { id: \"1\", name: \"Alice Brown\", subject: \"Holiday Package Inquiry\", status: \"New\", date: \"2025-01-16\" },\n  { id: \"2\", name: \"Bob Davis\", subject: \"Visa Application Help\", status: \"Replied\", date: \"2025-01-15\" },\n  { id: \"3\", name: \"Carol White\", subject: \"Flight Change Request\", status: \"In Progress\", date: \"2025-01-14\" }\n];\n\nexport default function AdminDashboard() {\n  const [selectedPeriod, setSelectedPeriod] = useState(\"This Month\");\n\n  const getStatusColor = (status: string) => {\n    switch (status.toLowerCase()) {\n      case \"confirmed\": return \"bg-green-100 text-green-800\";\n      case \"pending\": return \"bg-yellow-100 text-yellow-800\";\n      case \"processing\": return \"bg-blue-100 text-blue-800\";\n      case \"new\": return \"bg-purple-100 text-purple-800\";\n      case \"replied\": return \"bg-green-100 text-green-800\";\n      case \"in progress\": return \"bg-orange-100 text-orange-800\";\n      default: return \"bg-gray-100 text-gray-800\";\n    }\n  };\n\n  const handleViewBooking = (id: string) => {\n    console.log(\"View booking:\", id);\n    // Navigate to booking details page\n    window.location.href = `/admin/bookings?id=${id}`;\n  };\n\n  const handleEditBooking = (id: string) => {\n    console.log(\"Edit booking:\", id);\n    // Navigate to booking edit page\n    window.location.href = `/admin/bookings?edit=${id}`;\n  };\n\n  const handleDeleteBooking = (id: string) => {\n    console.log(\"Delete booking:\", id);\n    if (confirm(\"Are you sure you want to delete this booking?\")) {\n      alert(`Booking ${id} has been deleted successfully!`);\n      // In a real app, you would make an API call to delete the booking\n    }\n  };\n\n  const handleNewBooking = () => {\n    console.log(\"Create new booking\");\n    window.location.href = '/admin/bookings?new=true';\n  };\n\n  const handleCreateBlogPost = () => {\n    console.log(\"Create new blog post\");\n    window.location.href = '/admin/blog?new=true';\n  };\n\n  const handleManageInquiries = () => {\n    console.log(\"Manage inquiries\");\n    window.location.href = '/admin/inquiries';\n  };\n\n  const handleViewReports = () => {\n    console.log(\"View reports\");\n    alert(\"Reports feature: Coming soon! This will show analytics, booking trends, and revenue reports.\");\n  };\n\n  const handleManageTours = () => {\n    console.log(\"Manage tours\");\n    window.location.href = '/admin/tours';\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Header />\n      \n      {/* Admin Header */}\n      <section className=\"pt-20 pb-8 bg-gradient-to-br from-primary/10 via-background to-accent/10\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-foreground\">Admin Dashboard</h1>\n              <p className=\"text-muted-foreground mt-2\">Welcome back! Here's what's happening with SN.SP Limited.</p>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Badge variant=\"outline\">Admin Panel</Badge>\n              <Button variant=\"outline\" size=\"sm\">\n                <Calendar className=\"mr-2 h-4 w-4\" />\n                {selectedPeriod}\n              </Button>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Stats Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n          {dashboardStats.map((stat, index) => {\n            const IconComponent = stat.icon;\n            return (\n              <Card key={index} data-testid={`stat-${index}`}>\n                <CardContent className=\"pt-6\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm font-medium text-muted-foreground\">{stat.title}</p>\n                      <p className=\"text-2xl font-bold text-foreground\">{stat.value}</p>\n                      <p className=\"text-xs text-green-600\">\n                        <TrendingUp className=\"h-3 w-3 inline mr-1\" />\n                        {stat.change} from last month\n                      </p>\n                    </div>\n                    <div className={`p-3 rounded-full bg-muted`}>\n                      <IconComponent className={`h-6 w-6 ${stat.color}`} />\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            );\n          })}\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          {/* Recent Bookings */}\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between\">\n              <CardTitle>Recent Bookings</CardTitle>\n              <Button variant=\"outline\" size=\"sm\" data-testid=\"button-view-all-bookings\">\n                View All\n              </Button>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {recentBookings.map((booking) => (\n                  <div key={booking.id} className=\"flex items-center justify-between p-3 border rounded-lg\" data-testid={`booking-${booking.id}`}>\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center gap-2 mb-1\">\n                        <p className=\"font-medium text-foreground\">{booking.client}</p>\n                        <Badge className={getStatusColor(booking.status)} variant=\"secondary\">\n                          {booking.status}\n                        </Badge>\n                      </div>\n                      <p className=\"text-sm text-muted-foreground\">{booking.service} - {booking.destination}</p>\n                      <div className=\"flex items-center gap-1 text-xs text-muted-foreground mt-1\">\n                        <Calendar className=\"h-3 w-3\" />\n                        {booking.date}\n                      </div>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <Button variant=\"ghost\" size=\"sm\" onClick={() => handleViewBooking(booking.id)} data-testid={`button-view-${booking.id}`}>\n                        <Eye className=\"h-4 w-4\" />\n                      </Button>\n                      <Button variant=\"ghost\" size=\"sm\" onClick={() => handleEditBooking(booking.id)} data-testid={`button-edit-${booking.id}`}>\n                        <Edit className=\"h-4 w-4\" />\n                      </Button>\n                      <Button variant=\"ghost\" size=\"sm\" onClick={() => handleDeleteBooking(booking.id)} data-testid={`button-delete-${booking.id}`}>\n                        <Trash2 className=\"h-4 w-4\" />\n                      </Button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Recent Inquiries */}\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between\">\n              <CardTitle>Recent Inquiries</CardTitle>\n              <Button variant=\"outline\" size=\"sm\" data-testid=\"button-view-all-inquiries\">\n                View All\n              </Button>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {recentInquiries.map((inquiry) => (\n                  <div key={inquiry.id} className=\"flex items-center justify-between p-3 border rounded-lg\" data-testid={`inquiry-${inquiry.id}`}>\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center gap-2 mb-1\">\n                        <p className=\"font-medium text-foreground\">{inquiry.name}</p>\n                        <Badge className={getStatusColor(inquiry.status)} variant=\"secondary\">\n                          {inquiry.status}\n                        </Badge>\n                      </div>\n                      <p className=\"text-sm text-muted-foreground\">{inquiry.subject}</p>\n                      <div className=\"flex items-center gap-1 text-xs text-muted-foreground mt-1\">\n                        <Clock className=\"h-3 w-3\" />\n                        {inquiry.date}\n                      </div>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <Button variant=\"ghost\" size=\"sm\" data-testid={`button-reply-${inquiry.id}`}>\n                        Reply\n                      </Button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Quick Actions */}\n        <Card className=\"mt-8\">\n          <CardHeader>\n            <CardTitle>Quick Actions</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-2 md:grid-cols-5 gap-4\">\n              <Button className=\"h-auto p-4 flex-col\" onClick={handleNewBooking} data-testid=\"button-new-booking\">\n                <Plane className=\"h-6 w-6 mb-2\" />\n                New Booking\n              </Button>\n              <Button variant=\"outline\" className=\"h-auto p-4 flex-col\" onClick={handleCreateBlogPost} data-testid=\"button-create-blog\">\n                <FileText className=\"h-6 w-6 mb-2\" />\n                Create Blog Post\n              </Button>\n              <Button variant=\"outline\" className=\"h-auto p-4 flex-col\" onClick={handleManageInquiries} data-testid=\"button-manage-inquiries\">\n                <MessageSquare className=\"h-6 w-6 mb-2\" />\n                Manage Inquiries\n              </Button>\n              <Button variant=\"outline\" className=\"h-auto p-4 flex-col\" onClick={handleManageTours} data-testid=\"button-manage-tours\">\n                <MapPin className=\"h-6 w-6 mb-2\" />\n                Manage Tours\n              </Button>\n              <Button variant=\"outline\" className=\"h-auto p-4 flex-col\" onClick={handleViewReports} data-testid=\"button-view-reports\">\n                <TrendingUp className=\"h-6 w-6 mb-2\" />\n                View Reports\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* System Status */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mt-8\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-sm\">System Status</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"flex items-center gap-2\">\n                <CheckCircle className=\"h-5 w-5 text-green-600\" />\n                <span className=\"text-sm text-foreground\">All systems operational</span>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-sm\">Pending Tasks</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"flex items-center gap-2\">\n                <AlertCircle className=\"h-5 w-5 text-orange-600\" />\n                <span className=\"text-sm text-foreground\">3 visa applications need review</span>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-sm\">Last Backup</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"flex items-center gap-2\">\n                <CheckCircle className=\"h-5 w-5 text-green-600\" />\n                <span className=\"text-sm text-foreground\">2 hours ago</span>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":13091},"frontend/src/pages/admin/AdminLogin.tsx":{"content":"\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { Eye, EyeOff, Lock, User, Shield } from \"lucide-react\";\nimport { useLocation } from \"wouter\";\n\nexport default function AdminLogin() {\n  const [credentials, setCredentials] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [, setLocation] = useLocation();\n\n  // Demo credentials - in production, this should be handled securely on the backend\n  const ADMIN_CREDENTIALS = {\n    username: \"admin@snsp.com\",\n    password: \"SNSP2025Admin!\"\n  };\n\n  const handleInputChange = (field: string, value: string) => {\n    setCredentials(prev => ({ ...prev, [field]: value }));\n    if (error) setError(\"\"); // Clear error on input change\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(\"\");\n\n    // Simulate API call delay\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    if (\n      credentials.username === ADMIN_CREDENTIALS.username &&\n      credentials.password === ADMIN_CREDENTIALS.password\n    ) {\n      // Store authentication status (in production, use proper token management)\n      localStorage.setItem(\"isAdminAuthenticated\", \"true\");\n      localStorage.setItem(\"adminUser\", credentials.username);\n      \n      console.log(\"Admin login successful\");\n      setLocation(\"/admin/dashboard\");\n    } else {\n      setError(\"Invalid username or password. Please try again.\");\n    }\n    \n    setIsLoading(false);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-primary/10 via-background to-accent/10 flex items-center justify-center p-4\">\n      <Card className=\"w-full max-w-md\">\n        <CardHeader className=\"text-center\">\n          <div className=\"w-16 h-16 bg-primary/10 rounded-full flex items-center justify-center mx-auto mb-4\">\n            <Shield className=\"h-8 w-8 text-primary\" />\n          </div>\n          <CardTitle className=\"text-2xl font-bold\">Admin Login</CardTitle>\n          <p className=\"text-muted-foreground\">Access SN.SP Admin Dashboard</p>\n        </CardHeader>\n        \n        <CardContent>\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            {error && (\n              <Alert variant=\"destructive\" data-testid=\"error-alert\">\n                <AlertDescription>{error}</AlertDescription>\n              </Alert>\n            )}\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"username\">Username</Label>\n              <div className=\"relative\">\n                <User className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                <Input\n                  id=\"username\"\n                  type=\"email\"\n                  placeholder=\"admin@snsp.com\"\n                  value={credentials.username}\n                  onChange={(e) => handleInputChange(\"username\", e.target.value)}\n                  className=\"pl-10\"\n                  data-testid=\"input-username\"\n                  required\n                />\n              </div>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"password\">Password</Label>\n              <div className=\"relative\">\n                <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                <Input\n                  id=\"password\"\n                  type={showPassword ? \"text\" : \"password\"}\n                  placeholder=\"Enter your password\"\n                  value={credentials.password}\n                  onChange={(e) => handleInputChange(\"password\", e.target.value)}\n                  className=\"pl-10 pr-10\"\n                  data-testid=\"input-password\"\n                  required\n                />\n                <button\n                  type=\"button\"\n                  onClick={() => setShowPassword(!showPassword)}\n                  className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-muted-foreground hover:text-foreground\"\n                  data-testid=\"button-toggle-password\"\n                >\n                  {showPassword ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\n                </button>\n              </div>\n            </div>\n\n            <Button \n              type=\"submit\" \n              className=\"w-full\" \n              disabled={isLoading}\n              data-testid=\"button-login\"\n            >\n              {isLoading ? \"Signing in...\" : \"Sign In\"}\n            </Button>\n          </form>\n\n          <div className=\"mt-6 p-4 bg-muted/50 rounded-lg\">\n            <h4 className=\"font-semibold text-sm mb-2\">Demo Credentials:</h4>\n            <p className=\"text-xs text-muted-foreground\">Username: admin@snsp.com</p>\n            <p className=\"text-xs text-muted-foreground\">Password: SNSP2025Admin!</p>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":5289},"frontend/src/pages/admin/BlogManagement.tsx":{"content":"\nimport { useState } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport { \n  Plus,\n  Search,\n  Edit,\n  Trash2,\n  Eye,\n  Calendar,\n  User,\n  FileText,\n  Save,\n  X,\n  Upload,\n  Image as ImageIcon\n} from \"lucide-react\";\n\ninterface BlogPost {\n  id: string;\n  title: string;\n  excerpt: string;\n  content: string;\n  category: string;\n  author: string;\n  status: 'draft' | 'published';\n  date: string;\n  image: string;\n  imageAlt: string;\n  views?: number;\n}\n\ninterface BlogForm {\n  title: string;\n  excerpt: string;\n  content: string;\n  category: string;\n  author: string;\n  status: 'draft' | 'published';\n  image: string;\n  imageAlt: string;\n}\n\n// Todo: remove mock functionality - replace with real blog data\nconst mockPosts: BlogPost[] = [\n  {\n    id: \"1\",\n    title: \"Top 10 Must-Visit Destinations in 2025\",\n    excerpt: \"Discover the most breathtaking destinations that should be on every traveler's bucket list this year.\",\n    content: \"Full article content here...\",\n    category: \"Travel Tips\",\n    author: \"Travel Team\",\n    status: 'published',\n    date: \"January 15, 2025\",\n    image: \"https://images.unsplash.com/photo-1488646953014-85cb44e25828?w=600&h=400&fit=crop\",\n    imageAlt: \"Beautiful tropical destination\",\n    views: 1250\n  },\n  {\n    id: \"2\", \n    title: \"How to Find the Best Flight Deals\",\n    excerpt: \"Learn insider tips and tricks to save money on your next flight booking.\",\n    content: \"Full article content here...\",\n    category: \"Flight Tips\",\n    author: \"SN.SP Team\",\n    status: 'draft',\n    date: \"January 10, 2025\",\n    image: \"https://images.unsplash.com/photo-1436491865332-7a61a109cc05?w=600&h=400&fit=crop\",\n    imageAlt: \"Airplane flying above clouds\",\n    views: 0\n  },\n  {\n    id: \"3\",\n    title: \"Ultimate Guide to Hotel Bookings\",\n    excerpt: \"Discover how to book the perfect hotel for your stay.\",\n    content: \"Full article content here...\",\n    category: \"Hotels\",\n    author: \"Hotel Expert\", \n    status: 'published',\n    date: \"January 8, 2025\",\n    image: \"https://images.unsplash.com/photo-1564501049412-61c2a3083791?w=600&h=400&fit=crop\",\n    imageAlt: \"Luxury hotel lobby\",\n    views: 890\n  }\n];\n\nexport default function BlogManagement() {\n  const [posts, setPosts] = useState<BlogPost[]>(mockPosts);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(\"All\");\n  const [selectedStatus, setSelectedStatus] = useState(\"All\");\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [editingPost, setEditingPost] = useState<BlogPost | null>(null);\n  const [formData, setFormData] = useState<BlogForm>({\n    title: \"\",\n    excerpt: \"\",\n    content: \"\",\n    category: \"\",\n    author: \"\",\n    status: 'draft',\n    image: \"\",\n    imageAlt: \"\"\n  });\n\n  const categories = [\"Travel Tips\", \"Flight Tips\", \"Hotels\", \"Visa Guide\", \"Education\", \"Travel Safety\"];\n  const statusOptions = [\"draft\", \"published\"];\n\n  const filteredPosts = posts.filter(post => {\n    const matchesSearch = post.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         post.content.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesCategory = selectedCategory === \"All\" || post.category === selectedCategory;\n    const matchesStatus = selectedStatus === \"All\" || post.status === selectedStatus;\n    return matchesSearch && matchesCategory && matchesStatus;\n  });\n\n  const getStatusColor = (status: string) => {\n    switch (status.toLowerCase()) {\n      case \"published\": return \"bg-green-100 text-green-800\";\n      case \"draft\": return \"bg-yellow-100 text-yellow-800\";\n      case \"archived\": return \"bg-gray-100 text-gray-800\";\n      default: return \"bg-blue-100 text-blue-800\";\n    }\n  };\n\n  const handleCreatePost = () => {\n    setShowCreateForm(true);\n    setEditingPost(null);\n    setFormData({\n      title: \"\",\n      excerpt: \"\",\n      content: \"\",\n      category: \"\",\n      author: \"Admin\",\n      status: 'draft',\n      image: \"\",\n      imageAlt: \"\"\n    });\n  };\n\n  const handleEditPost = (post: BlogPost) => {\n    setEditingPost(post);\n    setShowCreateForm(true);\n    setFormData({\n      title: post.title,\n      excerpt: post.excerpt,\n      content: post.content,\n      category: post.category,\n      author: post.author,\n      status: post.status,\n      image: post.image,\n      imageAlt: post.imageAlt\n    });\n  };\n\n  const handleSavePost = () => {\n    if (editingPost) {\n      // Update existing post\n      setPosts(prev => prev.map(post => \n        post.id === editingPost.id \n          ? { \n              ...post, \n              ...formData,\n              date: new Date().toLocaleDateString('en-US', { \n                year: 'numeric', \n                month: 'long', \n                day: 'numeric' \n              })\n            }\n          : post\n      ));\n    } else {\n      // Create new post\n      const newPost: BlogPost = {\n        ...formData,\n        id: Date.now().toString(),\n        date: new Date().toLocaleDateString('en-US', { \n          year: 'numeric', \n          month: 'long', \n          day: 'numeric' \n        }),\n        views: 0\n      };\n      setPosts(prev => [newPost, ...prev]);\n    }\n    \n    setShowCreateForm(false);\n    setEditingPost(null);\n  };\n\n  const handleDeletePost = (postId: string) => {\n    if (confirm(\"Are you sure you want to delete this post?\")) {\n      setPosts(prev => prev.filter(post => post.id !== postId));\n    }\n  };\n\n  const handleImageUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      // In a real app, you would upload to a server here\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        setFormData(prev => ({\n          ...prev,\n          image: event.target?.result as string\n        }));\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handlePreviewPost = (post: BlogPost) => {\n    console.log(\"Preview post:\", post);\n    alert(\"Opening post preview. Feature coming soon!\");\n  };\n\n  const handleUpdateStatus = (id: string, newStatus: string) => {\n    setPosts(prev => prev.map(p => \n      p.id === id ? { ...p, status: newStatus as 'draft' | 'published' } : p\n    ));\n    console.log(`Updated post ${id} status to ${newStatus}`);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Header />\n      \n      <div className=\"pt-20 pb-12\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between mb-8\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-foreground\">Blog Management</h1>\n              <p className=\"text-muted-foreground\">Create and manage blog posts</p>\n            </div>\n            <Button onClick={handleCreatePost} data-testid=\"button-create-post\">\n              <Plus className=\"mr-2 h-4 w-4\" />\n              Create New Post\n            </Button>\n          </div>\n\n          {!showCreateForm ? (\n            <>\n              {/* Filters */}\n              <Card className=\"mb-8\">\n                <CardContent className=\"pt-6\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n                    <div className=\"relative\">\n                      <Search className=\"absolute left-3 top-3 h-4 w-4 text-muted-foreground\" />\n                      <Input\n                        placeholder=\"Search posts...\"\n                        value={searchTerm}\n                        onChange={(e) => setSearchTerm(e.target.value)}\n                        className=\"pl-10\"\n                        data-testid=\"input-search-posts\"\n                      />\n                    </div>\n                    \n                    <Select value={selectedCategory} onValueChange={setSelectedCategory}>\n                      <SelectTrigger data-testid=\"select-category-filter\">\n                        <SelectValue placeholder=\"All Categories\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"All\">All Categories</SelectItem>\n                        {categories.map((category) => (\n                          <SelectItem key={category} value={category}>{category}</SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n\n                    <Select value={selectedStatus} onValueChange={setSelectedStatus}>\n                      <SelectTrigger data-testid=\"select-status-filter\">\n                        <SelectValue placeholder=\"All Status\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"All\">All Status</SelectItem>\n                        {statusOptions.map((status) => (\n                          <SelectItem key={status} value={status}>\n                            {status.charAt(0).toUpperCase() + status.slice(1)}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n\n                    <div className=\"text-sm text-muted-foreground flex items-center\">\n                      {filteredPosts.length} posts found\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Posts List */}\n              <div className=\"space-y-4\">\n                {filteredPosts.map((post) => (\n                  <Card key={post.id} data-testid={`post-item-${post.id}`}>\n                    <CardContent className=\"pt-6\">\n                      <div className=\"flex items-start justify-between\">\n                        <div className=\"flex gap-4 flex-1\">\n                          <div className=\"w-24 h-16 rounded-lg overflow-hidden bg-muted flex-shrink-0\">\n                            {post.image ? (\n                              <img \n                                src={post.image} \n                                alt={post.imageAlt}\n                                className=\"w-full h-full object-cover\"\n                              />\n                            ) : (\n                              <div className=\"w-full h-full flex items-center justify-center\">\n                                <ImageIcon className=\"h-6 w-6 text-muted-foreground\" />\n                              </div>\n                            )}\n                          </div>\n                          <div className=\"flex-1\">\n                            <div className=\"flex items-center gap-2 mb-2\">\n                              <h3 className=\"font-semibold text-foreground\">{post.title}</h3>\n                              <Badge className={getStatusColor(post.status)} variant=\"secondary\">\n                                {post.status}\n                              </Badge>\n                              <Badge variant=\"outline\">{post.category}</Badge>\n                            </div>\n                            <p className=\"text-sm text-muted-foreground mb-2\">{post.excerpt}</p>\n                            <div className=\"flex items-center gap-4 text-xs text-muted-foreground\">\n                              <div className=\"flex items-center gap-1\">\n                                <User className=\"h-3 w-3\" />\n                                {post.author}\n                              </div>\n                              <div className=\"flex items-center gap-1\">\n                                <Calendar className=\"h-3 w-3\" />\n                                {post.date}\n                              </div>\n                              <div className=\"flex items-center gap-1\">\n                                <Eye className=\"h-3 w-3\" />\n                                {post.views} views\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"flex items-center gap-2\">\n                          <Button variant=\"ghost\" size=\"sm\" onClick={() => handlePreviewPost(post)} data-testid={`button-preview-${post.id}`}>\n                            <Eye className=\"h-4 w-4\" />\n                          </Button>\n                          <Button variant=\"ghost\" size=\"sm\" onClick={() => handleEditPost(post)} data-testid={`button-edit-${post.id}`}>\n                            <Edit className=\"h-4 w-4\" />\n                          </Button>\n                          <Button \n                            variant=\"ghost\" \n                            size=\"sm\" \n                            onClick={() => handleDeletePost(post.id)}\n                            className=\"text-destructive hover:text-destructive\"\n                            data-testid={`button-delete-${post.id}`}\n                          >\n                            <Trash2 className=\"h-4 w-4\" />\n                          </Button>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))}\n\n                {filteredPosts.length === 0 && (\n                  <div className=\"text-center py-8\">\n                    <FileText className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n                    <p className=\"text-muted-foreground\">No blog posts found matching your criteria.</p>\n                  </div>\n                )}\n              </div>\n            </>\n          ) : (\n            /* Create/Edit Form */\n            <Card>\n              <CardHeader>\n                <div className=\"flex items-center justify-between\">\n                  <CardTitle>\n                    {editingPost ? 'Edit Post' : 'Create New Post'}\n                  </CardTitle>\n                  <Button variant=\"ghost\" onClick={() => setShowCreateForm(false)} data-testid=\"button-close-editor\">\n                    <X className=\"h-4 w-4\" />\n                  </Button>\n                </div>\n              </CardHeader>\n              <CardContent className=\"space-y-6\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div className=\"space-y-4\">\n                    <div>\n                      <Label htmlFor=\"title\">Title</Label>\n                      <Input\n                        id=\"title\"\n                        value={formData.title}\n                        onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n                        placeholder=\"Enter post title\"\n                        data-testid=\"input-post-title\"\n                      />\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"category\">Category</Label>\n                      <Select \n                        value={formData.category} \n                        onValueChange={(value) => setFormData(prev => ({ ...prev, category: value }))}\n                      >\n                        <SelectTrigger data-testid=\"select-post-category\">\n                          <SelectValue placeholder=\"Select category\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                          {categories.map((category) => (\n                            <SelectItem key={category} value={category}>{category}</SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"status\">Status</Label>\n                      <Select \n                        value={formData.status} \n                        onValueChange={(value: 'draft' | 'published') => setFormData(prev => ({ ...prev, status: value }))}\n                      >\n                        <SelectTrigger data-testid=\"select-post-status\">\n                          <SelectValue />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"draft\">Draft</SelectItem>\n                          <SelectItem value=\"published\">Published</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"author\">Author</Label>\n                      <Input\n                        id=\"author\"\n                        value={formData.author}\n                        onChange={(e) => setFormData(prev => ({ ...prev, author: e.target.value }))}\n                        placeholder=\"Author name\"\n                        data-testid=\"input-post-author\"\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-4\">\n                    <div>\n                      <Label htmlFor=\"image\">Featured Image</Label>\n                      <div className=\"space-y-2\">\n                        <Input\n                          id=\"image\"\n                          type=\"file\"\n                          accept=\"image/*\"\n                          onChange={handleImageUpload}\n                        />\n                        <Input\n                          placeholder=\"Or enter image URL\"\n                          value={formData.image}\n                          onChange={(e) => setFormData(prev => ({ ...prev, image: e.target.value }))}\n                        />\n                        {formData.image && (\n                          <div className=\"w-full h-32 rounded-lg overflow-hidden bg-muted\">\n                            <img \n                              src={formData.image} \n                              alt=\"Preview\"\n                              className=\"w-full h-full object-cover\"\n                            />\n                          </div>\n                        )}\n                      </div>\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"imageAlt\">Image Alt Text</Label>\n                      <Input\n                        id=\"imageAlt\"\n                        value={formData.imageAlt}\n                        onChange={(e) => setFormData(prev => ({ ...prev, imageAlt: e.target.value }))}\n                        placeholder=\"Describe the image for accessibility\"\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"excerpt\">Excerpt</Label>\n                  <Textarea\n                    id=\"excerpt\"\n                    value={formData.excerpt}\n                    onChange={(e) => setFormData(prev => ({ ...prev, excerpt: e.target.value }))}\n                    placeholder=\"Brief description of the post\"\n                    rows={3}\n                    data-testid=\"textarea-post-excerpt\"\n                  />\n                </div>\n\n                <div>\n                  <Label htmlFor=\"content\">Content</Label>\n                  <Textarea\n                    id=\"content\"\n                    value={formData.content}\n                    onChange={(e) => setFormData(prev => ({ ...prev, content: e.target.value }))}\n                    placeholder=\"Write your post content here...\"\n                    rows={10}\n                    data-testid=\"textarea-post-content\"\n                  />\n                </div>\n\n                <div className=\"flex justify-end gap-4\">\n                  <Button variant=\"outline\" onClick={() => setShowCreateForm(false)} data-testid=\"button-cancel-edit\">\n                    Cancel\n                  </Button>\n                  <Button onClick={handleSavePost} data-testid=\"button-save-post\">\n                    <Save className=\"mr-2 h-4 w-4\" />\n                    {editingPost ? 'Update Post' : 'Create Post'}\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          )}\n        </div>\n      </div>\n\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":20274},"frontend/src/pages/admin/BookingManagement.tsx":{"content":"import { useState } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport { \n  Search,\n  Filter,\n  Download,\n  Eye,\n  Edit,\n  Trash2,\n  Calendar,\n  User,\n  MapPin,\n  Phone,\n  Mail\n} from \"lucide-react\";\n\n// Todo: remove mock functionality - replace with real booking data\nconst mockBookings = [\n  {\n    id: \"BK001\",\n    client: { name: \"John Doe\", email: \"john@email.com\", phone: \"+234 901 234 5678\" },\n    service: \"Flight Booking\",\n    destination: \"Dubai, UAE\",\n    status: \"Confirmed\",\n    bookingDate: \"2025-01-16\",\n    travelDate: \"2025-02-15\",\n    amount: \"$1,200\",\n    notes: \"Business class preferred\"\n  },\n  {\n    id: \"BK002\", \n    client: { name: \"Jane Smith\", email: \"jane@email.com\", phone: \"+234 802 345 6789\" },\n    service: \"Visa Application\",\n    destination: \"United Kingdom\",\n    status: \"Processing\",\n    bookingDate: \"2025-01-15\",\n    travelDate: \"2025-03-01\",\n    amount: \"$450\",\n    notes: \"Tourist visa, 2 weeks stay\"\n  },\n  {\n    id: \"BK003\",\n    client: { name: \"Mike Johnson\", email: \"mike@email.com\", phone: \"+234 703 456 7890\" },\n    service: \"Hotel Booking\",\n    destination: \"Paris, France\",\n    status: \"Confirmed\",\n    bookingDate: \"2025-01-14\",\n    travelDate: \"2025-02-20\",\n    amount: \"$800\",\n    notes: \"5-star hotel, city center\"\n  },\n  {\n    id: \"BK004\",\n    client: { name: \"Sarah Wilson\", email: \"sarah@email.com\", phone: \"+234 804 567 8901\" },\n    service: \"Study Abroad\",\n    destination: \"Toronto, Canada\",\n    status: \"Pending\",\n    bookingDate: \"2025-01-13\",\n    travelDate: \"2025-09-01\",\n    amount: \"$2,500\",\n    notes: \"MBA program application\"\n  }\n];\n\nexport default function BookingManagement() {\n  const [bookings, setBookings] = useState(mockBookings);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [statusFilter, setStatusFilter] = useState(\"All\");\n  const [serviceFilter, setServiceFilter] = useState(\"All\");\n  const [selectedBooking, setSelectedBooking] = useState<any>(null);\n\n  const filteredBookings = bookings.filter(booking => {\n    const matchesSearch = \n      booking.client.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      booking.id.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      booking.destination.toLowerCase().includes(searchTerm.toLowerCase());\n    \n    const matchesStatus = statusFilter === \"All\" || booking.status === statusFilter;\n    const matchesService = serviceFilter === \"All\" || booking.service === serviceFilter;\n    \n    return matchesSearch && matchesStatus && matchesService;\n  });\n\n  const getStatusColor = (status: string) => {\n    switch (status.toLowerCase()) {\n      case \"confirmed\": return \"bg-green-100 text-green-800\";\n      case \"pending\": return \"bg-yellow-100 text-yellow-800\";\n      case \"processing\": return \"bg-blue-100 text-blue-800\";\n      case \"cancelled\": return \"bg-red-100 text-red-800\";\n      default: return \"bg-gray-100 text-gray-800\";\n    }\n  };\n\n  const handleViewBooking = (booking: any) => {\n    setSelectedBooking(booking);\n    console.log(\"Viewing booking:\", booking);\n  };\n\n  const handleEditBooking = (id: string) => {\n    console.log(\"Edit booking:\", id);\n    alert(`Editing booking ${id}. Feature coming soon!`);\n  };\n\n  const handleDeleteBooking = (id: string) => {\n    console.log(\"Delete booking:\", id);\n    if (confirm(\"Are you sure you want to delete this booking?\")) {\n      setBookings(prev => prev.filter(b => b.id !== id));\n      alert(`Booking ${id} deleted!`);\n    }\n  };\n\n  const handleUpdateStatus = (id: string, newStatus: string) => {\n    setBookings(prev => prev.map(b => \n      b.id === id ? { ...b, status: newStatus } : b\n    ));\n    console.log(`Updated booking ${id} status to ${newStatus}`);\n  };\n\n  const handleExport = () => {\n    console.log(\"Exporting bookings\");\n    alert(\"Exporting bookings to CSV. Feature coming soon!\");\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Header />\n      \n      {/* Header */}\n      <section className=\"pt-20 pb-8 bg-gradient-to-br from-primary/10 via-background to-accent/10\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-foreground\">Booking Management</h1>\n              <p className=\"text-muted-foreground mt-2\">Manage all customer bookings and reservations</p>\n            </div>\n            <Button onClick={handleExport} data-testid=\"button-export\">\n              <Download className=\"mr-2 h-4 w-4\" />\n              Export\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Filters */}\n        <Card className=\"mb-6\">\n          <CardContent className=\"pt-6\">\n            <div className=\"flex flex-col md:flex-row gap-4\">\n              <div className=\"flex-1 relative\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                <Input\n                  placeholder=\"Search bookings by client name, booking ID, or destination...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"pl-10\"\n                  data-testid=\"input-search-bookings\"\n                />\n              </div>\n              \n              <Select value={statusFilter} onValueChange={setStatusFilter}>\n                <SelectTrigger className=\"w-40\" data-testid=\"select-status-filter\">\n                  <SelectValue placeholder=\"Status\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"All\">All Status</SelectItem>\n                  <SelectItem value=\"Confirmed\">Confirmed</SelectItem>\n                  <SelectItem value=\"Pending\">Pending</SelectItem>\n                  <SelectItem value=\"Processing\">Processing</SelectItem>\n                  <SelectItem value=\"Cancelled\">Cancelled</SelectItem>\n                </SelectContent>\n              </Select>\n\n              <Select value={serviceFilter} onValueChange={setServiceFilter}>\n                <SelectTrigger className=\"w-48\" data-testid=\"select-service-filter\">\n                  <SelectValue placeholder=\"Service\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"All\">All Services</SelectItem>\n                  <SelectItem value=\"Flight Booking\">Flight Booking</SelectItem>\n                  <SelectItem value=\"Hotel Booking\">Hotel Booking</SelectItem>\n                  <SelectItem value=\"Visa Application\">Visa Application</SelectItem>\n                  <SelectItem value=\"Study Abroad\">Study Abroad</SelectItem>\n                  <SelectItem value=\"Holiday Package\">Holiday Package</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </CardContent>\n        </Card>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* Bookings List */}\n          <div className=\"lg:col-span-2\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center justify-between\">\n                  Bookings ({filteredBookings.length})\n                  <Badge variant=\"outline\">{filteredBookings.length} of {bookings.length}</Badge>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  {filteredBookings.map((booking) => (\n                    <div\n                      key={booking.id}\n                      className={`p-4 border rounded-lg transition-all cursor-pointer ${\n                        selectedBooking?.id === booking.id ? \"border-primary bg-primary/5\" : \"hover:border-muted\"\n                      }`}\n                      onClick={() => handleViewBooking(booking)}\n                      data-testid={`booking-item-${booking.id}`}\n                    >\n                      <div className=\"flex items-start justify-between mb-3\">\n                        <div>\n                          <div className=\"flex items-center gap-2 mb-1\">\n                            <h3 className=\"font-semibold text-foreground\">{booking.client.name}</h3>\n                            <Badge className={getStatusColor(booking.status)} variant=\"secondary\">\n                              {booking.status}\n                            </Badge>\n                          </div>\n                          <p className=\"text-sm text-muted-foreground\">#{booking.id}</p>\n                        </div>\n                        <div className=\"text-right\">\n                          <p className=\"font-semibold text-foreground\">{booking.amount}</p>\n                          <p className=\"text-xs text-muted-foreground\">{booking.service}</p>\n                        </div>\n                      </div>\n\n                      <div className=\"grid grid-cols-2 gap-4 text-sm mb-3\">\n                        <div className=\"flex items-center gap-1 text-muted-foreground\">\n                          <MapPin className=\"h-3 w-3\" />\n                          {booking.destination}\n                        </div>\n                        <div className=\"flex items-center gap-1 text-muted-foreground\">\n                          <Calendar className=\"h-3 w-3\" />\n                          {booking.travelDate}\n                        </div>\n                      </div>\n\n                      <div className=\"flex items-center justify-between\">\n                        <p className=\"text-xs text-muted-foreground\">\n                          Booked: {booking.bookingDate}\n                        </p>\n                        <div className=\"flex gap-1\">\n                          <Button variant=\"ghost\" size=\"sm\" onClick={(e) => { e.stopPropagation(); handleViewBooking(booking); }} data-testid={`button-view-${booking.id}`}>\n                            <Eye className=\"h-4 w-4\" />\n                          </Button>\n                          <Button variant=\"ghost\" size=\"sm\" onClick={(e) => { e.stopPropagation(); handleEditBooking(booking.id); }} data-testid={`button-edit-${booking.id}`}>\n                            <Edit className=\"h-4 w-4\" />\n                          </Button>\n                          <Button variant=\"ghost\" size=\"sm\" onClick={(e) => { e.stopPropagation(); handleDeleteBooking(booking.id); }} data-testid={`button-delete-${booking.id}`}>\n                            <Trash2 className=\"h-4 w-4\" />\n                          </Button>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n\n                  {filteredBookings.length === 0 && (\n                    <div className=\"text-center py-8\">\n                      <p className=\"text-muted-foreground\">No bookings found matching your criteria.</p>\n                    </div>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Booking Details */}\n          <div className=\"lg:col-span-1\">\n            <Card className=\"sticky top-4\">\n              <CardHeader>\n                <CardTitle>Booking Details</CardTitle>\n              </CardHeader>\n              <CardContent>\n                {selectedBooking ? (\n                  <div className=\"space-y-4\">\n                    <div>\n                      <h4 className=\"font-semibold text-foreground mb-2\">Client Information</h4>\n                      <div className=\"space-y-2\">\n                        <div className=\"flex items-center gap-2 text-sm\">\n                          <User className=\"h-4 w-4 text-muted-foreground\" />\n                          {selectedBooking.client.name}\n                        </div>\n                        <div className=\"flex items-center gap-2 text-sm\">\n                          <Mail className=\"h-4 w-4 text-muted-foreground\" />\n                          {selectedBooking.client.email}\n                        </div>\n                        <div className=\"flex items-center gap-2 text-sm\">\n                          <Phone className=\"h-4 w-4 text-muted-foreground\" />\n                          {selectedBooking.client.phone}\n                        </div>\n                      </div>\n                    </div>\n\n                    <div>\n                      <h4 className=\"font-semibold text-foreground mb-2\">Booking Information</h4>\n                      <div className=\"space-y-2 text-sm\">\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-muted-foreground\">Booking ID:</span>\n                          <span>#{selectedBooking.id}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-muted-foreground\">Service:</span>\n                          <span>{selectedBooking.service}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-muted-foreground\">Destination:</span>\n                          <span>{selectedBooking.destination}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-muted-foreground\">Travel Date:</span>\n                          <span>{selectedBooking.travelDate}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-muted-foreground\">Amount:</span>\n                          <span className=\"font-semibold\">{selectedBooking.amount}</span>\n                        </div>\n                      </div>\n                    </div>\n\n                    {selectedBooking.notes && (\n                      <div>\n                        <h4 className=\"font-semibold text-foreground mb-2\">Notes</h4>\n                        <p className=\"text-sm text-muted-foreground\">{selectedBooking.notes}</p>\n                      </div>\n                    )}\n\n                    <div>\n                      <h4 className=\"font-semibold text-foreground mb-2\">Update Status</h4>\n                      <Select value={selectedBooking.status} onValueChange={(value) => handleUpdateStatus(selectedBooking.id, value)}>\n                        <SelectTrigger data-testid=\"select-update-status\">\n                          <SelectValue />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"Pending\">Pending</SelectItem>\n                          <SelectItem value=\"Processing\">Processing</SelectItem>\n                          <SelectItem value=\"Confirmed\">Confirmed</SelectItem>\n                          <SelectItem value=\"Cancelled\">Cancelled</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </div>\n\n                    <div className=\"flex gap-2 pt-4\">\n                      <Button className=\"flex-1\" data-testid=\"button-contact-client\">\n                        Contact Client\n                      </Button>\n                      <Button variant=\"outline\" className=\"flex-1\" data-testid=\"button-edit-details\">\n                        Edit Details\n                      </Button>\n                    </div>\n                  </div>\n                ) : (\n                  <p className=\"text-muted-foreground text-center py-8\">\n                    Select a booking to view details\n                  </p>\n                )}\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </div>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":16063},"frontend/src/pages/admin/InquiryManagement.tsx":{"content":"\nimport { useState } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport { \n  Search,\n  Reply,\n  Archive,\n  Trash2,\n  Eye,\n  Clock,\n  Mail,\n  Phone,\n  User,\n  MessageSquare,\n  Send\n} from \"lucide-react\";\n\n// Mock inquiries data\nconst mockInquiries = [\n  {\n    id: \"INQ001\",\n    name: \"Alice Brown\",\n    email: \"alice@example.com\",\n    phone: \"+234 801 234 5678\",\n    subject: \"Holiday Package Inquiry\",\n    message: \"I'm interested in your Dubai holiday package for 4 people. Can you provide more details about the pricing and what's included?\",\n    status: \"New\",\n    priority: \"Medium\",\n    date: \"2025-01-16\",\n    service: \"Holiday Packages\"\n  },\n  {\n    id: \"INQ002\",\n    name: \"Bob Davis\",\n    email: \"bob@example.com\", \n    phone: \"+234 802 345 6789\",\n    subject: \"Visa Application Help\",\n    message: \"I need help with my UK visa application. What documents do I need to provide?\",\n    status: \"Replied\",\n    priority: \"High\",\n    date: \"2025-01-15\",\n    service: \"Visa Application\"\n  },\n  {\n    id: \"INQ003\",\n    name: \"Carol White\",\n    email: \"carol@example.com\",\n    phone: \"+234 803 456 7890\",\n    subject: \"Flight Change Request\",\n    message: \"I need to change my flight booking from March 20th to March 25th. Is this possible?\",\n    status: \"In Progress\", \n    priority: \"High\",\n    date: \"2025-01-14\",\n    service: \"Flight Booking\"\n  },\n  {\n    id: \"INQ004\",\n    name: \"David Wilson\",\n    email: \"david@example.com\",\n    phone: \"+234 804 567 8901\",\n    subject: \"Study Abroad Consultation\",\n    message: \"I want to study in Canada. Can you help me with the application process?\",\n    status: \"New\",\n    priority: \"Medium\",\n    date: \"2025-01-13\",\n    service: \"Study Abroad\"\n  }\n];\n\nexport default function InquiryManagement() {\n  const [inquiries, setInquiries] = useState(mockInquiries);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [statusFilter, setStatusFilter] = useState(\"All\");\n  const [priorityFilter, setPriorityFilter] = useState(\"All\");\n  const [selectedInquiry, setSelectedInquiry] = useState<any>(null);\n  const [replyMessage, setReplyMessage] = useState(\"\");\n  const [showReplyModal, setShowReplyModal] = useState(false);\n\n  const filteredInquiries = inquiries.filter(inquiry => {\n    const matchesSearch = \n      inquiry.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      inquiry.subject.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      inquiry.id.toLowerCase().includes(searchTerm.toLowerCase());\n    \n    const matchesStatus = statusFilter === \"All\" || inquiry.status === statusFilter;\n    const matchesPriority = priorityFilter === \"All\" || inquiry.priority === priorityFilter;\n    \n    return matchesSearch && matchesStatus && matchesPriority;\n  });\n\n  const getStatusColor = (status: string) => {\n    switch (status.toLowerCase()) {\n      case \"new\": return \"bg-blue-100 text-blue-800\";\n      case \"replied\": return \"bg-green-100 text-green-800\";\n      case \"in progress\": return \"bg-yellow-100 text-yellow-800\";\n      case \"closed\": return \"bg-gray-100 text-gray-800\";\n      default: return \"bg-purple-100 text-purple-800\";\n    }\n  };\n\n  const getPriorityColor = (priority: string) => {\n    switch (priority.toLowerCase()) {\n      case \"high\": return \"bg-red-100 text-red-800\";\n      case \"medium\": return \"bg-orange-100 text-orange-800\";\n      case \"low\": return \"bg-green-100 text-green-800\";\n      default: return \"bg-gray-100 text-gray-800\";\n    }\n  };\n\n  const handleViewInquiry = (inquiry: any) => {\n    setSelectedInquiry(inquiry);\n  };\n\n  const handleReplyInquiry = (inquiry: any) => {\n    setSelectedInquiry(inquiry);\n    setShowReplyModal(true);\n  };\n\n  const handleSendReply = () => {\n    console.log(\"Sending reply to:\", selectedInquiry.id);\n    console.log(\"Reply message:\", replyMessage);\n    \n    // Update inquiry status to replied\n    setInquiries(prev => prev.map(inq => \n      inq.id === selectedInquiry.id ? { ...inq, status: \"Replied\" } : inq\n    ));\n    \n    setShowReplyModal(false);\n    setReplyMessage(\"\");\n    alert(\"Reply sent successfully!\");\n  };\n\n  const handleUpdateStatus = (id: string, newStatus: string) => {\n    setInquiries(prev => prev.map(inq => \n      inq.id === id ? { ...inq, status: newStatus } : inq\n    ));\n  };\n\n  const handleDeleteInquiry = (id: string) => {\n    if (confirm(\"Are you sure you want to delete this inquiry?\")) {\n      setInquiries(prev => prev.filter(inq => inq.id !== id));\n      if (selectedInquiry?.id === id) {\n        setSelectedInquiry(null);\n      }\n      alert(\"Inquiry deleted successfully!\");\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Header />\n      \n      {/* Header */}\n      <section className=\"pt-20 pb-8 bg-gradient-to-br from-primary/10 via-background to-accent/10\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-foreground\">Inquiry Management</h1>\n              <p className=\"text-muted-foreground mt-2\">Manage customer inquiries and provide support</p>\n            </div>\n            <Badge variant=\"outline\">{filteredInquiries.length} inquiries</Badge>\n          </div>\n        </div>\n      </section>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Filters */}\n        <Card className=\"mb-6\">\n          <CardContent className=\"pt-6\">\n            <div className=\"flex flex-col md:flex-row gap-4\">\n              <div className=\"flex-1 relative\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                <Input\n                  placeholder=\"Search inquiries by name, subject, or ID...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"pl-10\"\n                  data-testid=\"input-search-inquiries\"\n                />\n              </div>\n              \n              <Select value={statusFilter} onValueChange={setStatusFilter}>\n                <SelectTrigger className=\"w-40\" data-testid=\"select-status-filter\">\n                  <SelectValue placeholder=\"Status\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"All\">All Status</SelectItem>\n                  <SelectItem value=\"New\">New</SelectItem>\n                  <SelectItem value=\"In Progress\">In Progress</SelectItem>\n                  <SelectItem value=\"Replied\">Replied</SelectItem>\n                  <SelectItem value=\"Closed\">Closed</SelectItem>\n                </SelectContent>\n              </Select>\n\n              <Select value={priorityFilter} onValueChange={setPriorityFilter}>\n                <SelectTrigger className=\"w-40\" data-testid=\"select-priority-filter\">\n                  <SelectValue placeholder=\"Priority\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"All\">All Priority</SelectItem>\n                  <SelectItem value=\"High\">High</SelectItem>\n                  <SelectItem value=\"Medium\">Medium</SelectItem>\n                  <SelectItem value=\"Low\">Low</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </CardContent>\n        </Card>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* Inquiries List */}\n          <div className=\"lg:col-span-2\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Customer Inquiries ({filteredInquiries.length})</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  {filteredInquiries.map((inquiry) => (\n                    <div\n                      key={inquiry.id}\n                      className={`p-4 border rounded-lg transition-all cursor-pointer ${\n                        selectedInquiry?.id === inquiry.id ? \"border-primary bg-primary/5\" : \"hover:border-muted\"\n                      }`}\n                      onClick={() => handleViewInquiry(inquiry)}\n                      data-testid={`inquiry-item-${inquiry.id}`}\n                    >\n                      <div className=\"flex items-start justify-between mb-3\">\n                        <div className=\"flex-1\">\n                          <div className=\"flex items-center gap-2 mb-2\">\n                            <h3 className=\"font-semibold text-foreground\">{inquiry.name}</h3>\n                            <Badge className={getStatusColor(inquiry.status)} variant=\"secondary\">\n                              {inquiry.status}\n                            </Badge>\n                            <Badge className={getPriorityColor(inquiry.priority)} variant=\"secondary\">\n                              {inquiry.priority}\n                            </Badge>\n                          </div>\n                          <p className=\"text-sm font-medium text-foreground mb-1\">{inquiry.subject}</p>\n                          <p className=\"text-sm text-muted-foreground line-clamp-2\">\n                            {inquiry.message.substring(0, 100)}...\n                          </p>\n                        </div>\n                        \n                        <div className=\"flex gap-1 ml-4\">\n                          <Button variant=\"ghost\" size=\"sm\" onClick={(e) => { e.stopPropagation(); handleViewInquiry(inquiry); }} data-testid={`button-view-${inquiry.id}`}>\n                            <Eye className=\"h-4 w-4\" />\n                          </Button>\n                          <Button variant=\"ghost\" size=\"sm\" onClick={(e) => { e.stopPropagation(); handleReplyInquiry(inquiry); }} data-testid={`button-reply-${inquiry.id}`}>\n                            <Reply className=\"h-4 w-4\" />\n                          </Button>\n                          <Button variant=\"ghost\" size=\"sm\" onClick={(e) => { e.stopPropagation(); handleDeleteInquiry(inquiry.id); }} data-testid={`button-delete-${inquiry.id}`}>\n                            <Trash2 className=\"h-4 w-4\" />\n                          </Button>\n                        </div>\n                      </div>\n\n                      <div className=\"flex items-center justify-between text-xs text-muted-foreground\">\n                        <div className=\"flex items-center gap-4\">\n                          <div className=\"flex items-center gap-1\">\n                            <Clock className=\"h-3 w-3\" />\n                            {inquiry.date}\n                          </div>\n                          <div className=\"flex items-center gap-1\">\n                            <MessageSquare className=\"h-3 w-3\" />\n                            {inquiry.service}\n                          </div>\n                        </div>\n                        \n                        <Select value={inquiry.status} onValueChange={(value) => handleUpdateStatus(inquiry.id, value)}>\n                          <SelectTrigger className=\"w-28 h-6 text-xs\" data-testid={`select-status-${inquiry.id}`}>\n                            <SelectValue />\n                          </SelectTrigger>\n                          <SelectContent>\n                            <SelectItem value=\"New\">New</SelectItem>\n                            <SelectItem value=\"In Progress\">In Progress</SelectItem>\n                            <SelectItem value=\"Replied\">Replied</SelectItem>\n                            <SelectItem value=\"Closed\">Closed</SelectItem>\n                          </SelectContent>\n                        </Select>\n                      </div>\n                    </div>\n                  ))}\n\n                  {filteredInquiries.length === 0 && (\n                    <div className=\"text-center py-8\">\n                      <MessageSquare className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n                      <p className=\"text-muted-foreground\">No inquiries found matching your criteria.</p>\n                    </div>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Inquiry Details */}\n          <div className=\"lg:col-span-1\">\n            <Card className=\"sticky top-4\">\n              <CardHeader>\n                <CardTitle>Inquiry Details</CardTitle>\n              </CardHeader>\n              <CardContent>\n                {selectedInquiry ? (\n                  <div className=\"space-y-4\">\n                    <div>\n                      <h4 className=\"font-semibold text-foreground mb-3\">Customer Information</h4>\n                      <div className=\"space-y-2\">\n                        <div className=\"flex items-center gap-2 text-sm\">\n                          <User className=\"h-4 w-4 text-muted-foreground\" />\n                          {selectedInquiry.name}\n                        </div>\n                        <div className=\"flex items-center gap-2 text-sm\">\n                          <Mail className=\"h-4 w-4 text-muted-foreground\" />\n                          {selectedInquiry.email}\n                        </div>\n                        <div className=\"flex items-center gap-2 text-sm\">\n                          <Phone className=\"h-4 w-4 text-muted-foreground\" />\n                          {selectedInquiry.phone}\n                        </div>\n                      </div>\n                    </div>\n\n                    <div>\n                      <h4 className=\"font-semibold text-foreground mb-3\">Inquiry Details</h4>\n                      <div className=\"space-y-2 text-sm\">\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-muted-foreground\">ID:</span>\n                          <span>#{selectedInquiry.id}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-muted-foreground\">Service:</span>\n                          <span>{selectedInquiry.service}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-muted-foreground\">Priority:</span>\n                          <Badge className={getPriorityColor(selectedInquiry.priority)} variant=\"secondary\">\n                            {selectedInquiry.priority}\n                          </Badge>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-muted-foreground\">Date:</span>\n                          <span>{selectedInquiry.date}</span>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div>\n                      <h4 className=\"font-semibold text-foreground mb-2\">Subject</h4>\n                      <p className=\"text-sm text-foreground\">{selectedInquiry.subject}</p>\n                    </div>\n\n                    <div>\n                      <h4 className=\"font-semibold text-foreground mb-2\">Message</h4>\n                      <p className=\"text-sm text-muted-foreground\">{selectedInquiry.message}</p>\n                    </div>\n\n                    <div className=\"flex gap-2 pt-4\">\n                      <Button className=\"flex-1\" onClick={() => handleReplyInquiry(selectedInquiry)} data-testid=\"button-reply-inquiry\">\n                        <Reply className=\"mr-2 h-4 w-4\" />\n                        Reply\n                      </Button>\n                      <Button variant=\"outline\" onClick={() => handleUpdateStatus(selectedInquiry.id, \"Closed\")} data-testid=\"button-close-inquiry\">\n                        <Archive className=\"mr-2 h-4 w-4\" />\n                        Close\n                      </Button>\n                    </div>\n                  </div>\n                ) : (\n                  <p className=\"text-muted-foreground text-center py-8\">\n                    Select an inquiry to view details\n                  </p>\n                )}\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n\n        {/* Reply Modal */}\n        {showReplyModal && (\n          <div className=\"fixed inset-0 bg-background/80 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n            <Card className=\"w-full max-w-2xl\">\n              <CardHeader>\n                <CardTitle>Reply to {selectedInquiry?.name}</CardTitle>\n                <p className=\"text-sm text-muted-foreground\">Re: {selectedInquiry?.subject}</p>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <Textarea\n                  placeholder=\"Type your reply here...\"\n                  value={replyMessage}\n                  onChange={(e) => setReplyMessage(e.target.value)}\n                  rows={6}\n                  data-testid=\"textarea-reply-message\"\n                />\n                <div className=\"flex justify-end gap-2\">\n                  <Button variant=\"outline\" onClick={() => setShowReplyModal(false)} data-testid=\"button-cancel-reply\">\n                    Cancel\n                  </Button>\n                  <Button onClick={handleSendReply} disabled={!replyMessage.trim()} data-testid=\"button-send-reply\">\n                    <Send className=\"mr-2 h-4 w-4\" />\n                    Send Reply\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        )}\n      </div>\n\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":17878},"frontend/src/pages/admin/TourManagement.tsx":{"content":"\nimport { useState } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Badge } from \"@/components/ui/badge\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport { \n  Plus, \n  Edit, \n  Trash2, \n  Upload,\n  MapPin,\n  Eye,\n  X,\n  Check\n} from \"lucide-react\";\n\n// Mock tour data - replace with real data from your backend\nconst initialTours = [\n  {\n    id: 1,\n    title: \"Canada\",\n    caption: \"Explore the stunning landscapes and vibrant cities of Canada\",\n    image: \"/attached_assets/IMG-20250916-WA0022_1758093892791.jpg\",\n    status: \"active\"\n  },\n  {\n    id: 2,\n    title: \"Jordan & Israel\",\n    caption: \"Discover ancient history and religious sites in the Holy Land\",\n    image: \"/attached_assets/IMG-20250916-WA0023_1758093892792.jpg\",\n    status: \"active\"\n  },\n  {\n    id: 3,\n    title: \"Mauritius\",\n    caption: \"Relax on pristine beaches and enjoy tropical paradise\",\n    image: \"/attached_assets/IMG-20250916-WA0027_1758093892795.jpg\",\n    status: \"active\"\n  }\n];\n\nexport default function TourManagement() {\n  const [tours, setTours] = useState(initialTours);\n  const [isAddingTour, setIsAddingTour] = useState(false);\n  const [editingTour, setEditingTour] = useState<number | null>(null);\n  const [newTour, setNewTour] = useState({\n    title: \"\",\n    caption: \"\",\n    image: \"\",\n    status: \"active\"\n  });\n\n  const handleAddTour = () => {\n    if (newTour.title && newTour.caption) {\n      const tour = {\n        id: Math.max(...tours.map(t => t.id)) + 1,\n        ...newTour\n      };\n      setTours([...tours, tour]);\n      setNewTour({ title: \"\", caption: \"\", image: \"\", status: \"active\" });\n      setIsAddingTour(false);\n      alert(\"Tour added successfully!\");\n    } else {\n      alert(\"Please fill in all required fields\");\n    }\n  };\n\n  const handleEditTour = (id: number) => {\n    const tour = tours.find(t => t.id === id);\n    if (tour) {\n      setNewTour(tour);\n      setEditingTour(id);\n    }\n  };\n\n  const handleUpdateTour = () => {\n    if (editingTour && newTour.title && newTour.caption) {\n      setTours(tours.map(tour => \n        tour.id === editingTour ? { ...tour, ...newTour } : tour\n      ));\n      setNewTour({ title: \"\", caption: \"\", image: \"\", status: \"active\" });\n      setEditingTour(null);\n      alert(\"Tour updated successfully!\");\n    }\n  };\n\n  const handleDeleteTour = (id: number) => {\n    if (confirm(\"Are you sure you want to delete this tour?\")) {\n      setTours(tours.filter(tour => tour.id !== id));\n      alert(\"Tour deleted successfully!\");\n    }\n  };\n\n  const handleImageUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      // In a real app, you would upload to your server\n      const imageUrl = URL.createObjectURL(file);\n      setNewTour({ ...newTour, image: imageUrl });\n    }\n  };\n\n  const resetForm = () => {\n    setNewTour({ title: \"\", caption: \"\", image: \"\", status: \"active\" });\n    setIsAddingTour(false);\n    setEditingTour(null);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Header />\n      \n      {/* Admin Header */}\n      <section className=\"pt-20 pb-8 bg-gradient-to-br from-primary/10 via-background to-accent/10\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-foreground\">Tour Management</h1>\n              <p className=\"text-muted-foreground mt-2\">Manage tour experiences and destinations</p>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Badge variant=\"outline\">Admin Panel</Badge>\n              <Button \n                onClick={() => setIsAddingTour(true)}\n                className=\"bg-primary text-primary-foreground\"\n                data-testid=\"button-add-tour\"\n              >\n                <Plus className=\"mr-2 h-4 w-4\" />\n                Add New Tour\n              </Button>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Add/Edit Tour Form */}\n        {(isAddingTour || editingTour) && (\n          <Card className=\"mb-8\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center justify-between\">\n                {editingTour ? \"Edit Tour\" : \"Add New Tour\"}\n                <Button variant=\"ghost\" size=\"sm\" onClick={resetForm}>\n                  <X className=\"h-4 w-4\" />\n                </Button>\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <Label htmlFor=\"title\">Tour Title *</Label>\n                  <Input\n                    id=\"title\"\n                    value={newTour.title}\n                    onChange={(e) => setNewTour({ ...newTour, title: e.target.value })}\n                    placeholder=\"e.g., Dubai Adventure\"\n                    data-testid=\"input-tour-title\"\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"image\">Image URL</Label>\n                  <div className=\"flex gap-2\">\n                    <Input\n                      id=\"image\"\n                      value={newTour.image}\n                      onChange={(e) => setNewTour({ ...newTour, image: e.target.value })}\n                      placeholder=\"Image URL or upload file\"\n                      data-testid=\"input-tour-image\"\n                    />\n                    <Label htmlFor=\"file-upload\" className=\"cursor-pointer\">\n                      <Button variant=\"outline\" size=\"sm\" type=\"button\">\n                        <Upload className=\"h-4 w-4\" />\n                      </Button>\n                      <input\n                        id=\"file-upload\"\n                        type=\"file\"\n                        accept=\"image/*\"\n                        onChange={handleImageUpload}\n                        className=\"hidden\"\n                      />\n                    </Label>\n                  </div>\n                </div>\n              </div>\n              \n              <div>\n                <Label htmlFor=\"caption\">Caption *</Label>\n                <Textarea\n                  id=\"caption\"\n                  value={newTour.caption}\n                  onChange={(e) => setNewTour({ ...newTour, caption: e.target.value })}\n                  placeholder=\"Describe this tour experience...\"\n                  rows={3}\n                  data-testid=\"input-tour-caption\"\n                />\n              </div>\n\n              {newTour.image && (\n                <div>\n                  <Label>Preview</Label>\n                  <div className=\"relative w-full h-48 rounded-lg overflow-hidden border\">\n                    <img \n                      src={newTour.image} \n                      alt=\"Preview\"\n                      className=\"w-full h-full object-cover\"\n                    />\n                    <div className=\"absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/80 to-transparent p-4\">\n                      <h3 className=\"text-white font-semibold text-lg mb-1\">{newTour.title || \"Tour Title\"}</h3>\n                      <p className=\"text-white/90 text-sm\">{newTour.caption || \"Tour caption will appear here...\"}</p>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              <div className=\"flex gap-2\">\n                <Button \n                  onClick={editingTour ? handleUpdateTour : handleAddTour}\n                  className=\"bg-primary text-primary-foreground\"\n                  data-testid=\"button-save-tour\"\n                >\n                  <Check className=\"mr-2 h-4 w-4\" />\n                  {editingTour ? \"Update Tour\" : \"Add Tour\"}\n                </Button>\n                <Button variant=\"outline\" onClick={resetForm} data-testid=\"button-cancel-tour\">\n                  Cancel\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        )}\n\n        {/* Tours List */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Existing Tours ({tours.length})</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {tours.map((tour) => (\n                <div key={tour.id} className=\"border rounded-lg overflow-hidden\" data-testid={`tour-item-${tour.id}`}>\n                  <div className=\"relative h-48\">\n                    <img \n                      src={tour.image} \n                      alt={tour.title}\n                      className=\"w-full h-full object-cover\"\n                      onError={(e) => {\n                        const target = e.target as HTMLImageElement;\n                        target.src = 'data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" viewBox=\"0 0 100 100\"><rect width=\"100\" height=\"100\" fill=\"%23f3f4f6\"/><text x=\"50\" y=\"50\" text-anchor=\"middle\" dy=\".3em\" fill=\"%236b7280\">No Image</text></svg>';\n                      }}\n                    />\n                    <div className=\"absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/80 to-transparent p-3\">\n                      <h3 className=\"text-white font-medium text-sm mb-1\">{tour.title}</h3>\n                      <p className=\"text-white/90 text-xs line-clamp-2\">{tour.caption}</p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"p-4\">\n                    <div className=\"flex items-center justify-between mb-3\">\n                      <Badge \n                        variant={tour.status === \"active\" ? \"default\" : \"secondary\"}\n                        className=\"text-xs\"\n                      >\n                        {tour.status}\n                      </Badge>\n                      <div className=\"flex gap-1\">\n                        <Button \n                          variant=\"ghost\" \n                          size=\"sm\"\n                          onClick={() => handleEditTour(tour.id)}\n                          data-testid={`button-edit-tour-${tour.id}`}\n                        >\n                          <Edit className=\"h-4 w-4\" />\n                        </Button>\n                        <Button \n                          variant=\"ghost\" \n                          size=\"sm\"\n                          onClick={() => handleDeleteTour(tour.id)}\n                          data-testid={`button-delete-tour-${tour.id}`}\n                        >\n                          <Trash2 className=\"h-4 w-4\" />\n                        </Button>\n                      </div>\n                    </div>\n                    \n                    <div className=\"space-y-1\">\n                      <p className=\"font-medium text-sm\">{tour.title}</p>\n                      <p className=\"text-xs text-muted-foreground line-clamp-2\">{tour.caption}</p>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {tours.length === 0 && (\n              <div className=\"text-center py-8\">\n                <MapPin className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n                <p className=\"text-muted-foreground\">No tours available. Add your first tour to get started!</p>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":11780},"frontend/src/pages/services/FlightServices.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport { \n  Plane, \n  Clock, \n  Shield, \n  Users, \n  Calendar, \n  CreditCard, \n  CheckCircle,\n  ArrowRight,\n  MapPin \n} from \"lucide-react\";\n// Temporarily disable CSV import to fix syntax error\n// import airportsData from \"@assets/airports_1758095295993.csv\";\n\nconst features = [\n  {\n    icon: Plane,\n    title: \"Domestic and international flight bookings\",\n    description: \"Access to all major airlines worldwide\"\n  },\n  {\n    icon: Shield,\n    title: \"Best price guarantee and fare comparison\",\n    description: \"We ensure you get the most competitive rates\"\n  },\n  {\n    icon: Calendar,\n    title: \"Flexible booking options and date changes\",\n    description: \"Easy modifications when plans change\"\n  },\n  {\n    icon: Users,\n    title: \"Group bookings with special discounts\",\n    description: \"Special rates for corporate and family groups\"\n  },\n  {\n    icon: Clock,\n    title: \"24/7 support for flight emergencies\",\n    description: \"Round-the-clock assistance when you need it\"\n  },\n  {\n    icon: CreditCard,\n    title: \"Seat selection and meal preferences\",\n    description: \"Personalize your flying experience\"\n  }\n];\n\ninterface BookingForm {\n  fullName: string;\n  email: string;\n  phone: string;\n  from: string;\n  to: string;\n  departureDate: string;\n  returnDate: string;\n  passengers: string;\n  travelClass: string;\n  tripType: string;\n}\n\ninterface Airport {\n  IATA: string;\n  ICAO: string;\n  \"Airport name\": string;\n  Country: string;\n  City: string;\n}\n\n// Parse CSV data into airport objects\nconst parseAirportsCSV = (csvText: string): Airport[] => {\n  const lines = csvText.split('\\n');\n  const headers = lines[0].split(',').map(h => h.replace(/\"/g, ''));\n  \n  return lines.slice(1).map(line => {\n    if (!line.trim()) return null;\n    \n    const values: string[] = [];\n    let inQuotes = false;\n    let currentValue = '';\n    \n    for (let i = 0; i < line.length; i++) {\n      const char = line[i];\n      \n      if (char === '\"') {\n        inQuotes = !inQuotes;\n      } else if (char === ',' && !inQuotes) {\n        values.push(currentValue);\n        currentValue = '';\n      } else {\n        currentValue += char;\n      }\n    }\n    values.push(currentValue);\n    \n    const airport: any = {};\n    headers.forEach((header, index) => {\n      airport[header] = values[index] || '';\n    });\n    \n    return airport as Airport;\n  }).filter(Boolean) as Airport[];\n};\n\n// Default airports will be loaded dynamically\nconst defaultAirports: any[] = [];\n\ninterface AirportSearchInputProps {\n  value: string;\n  onChange: (value: string) => void;\n  placeholder: string;\n  label: string;\n  testId: string;\n}\n\nfunction AirportSearchInput({ value, onChange, placeholder, label, testId }: AirportSearchInputProps) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [filteredAirports, setFilteredAirports] = useState<Airport[]>([]);\n  const [airports, setAirports] = useState<Airport[]>(defaultAirports);\n\n  // Load airports data on component mount\n  useEffect(() => {\n    const loadAirports = async () => {\n      try {\n        const response = await fetch('/attached_assets/airports_1758095295993.csv');\n        const csvText = await response.text();\n        const parsedAirports = parseAirportsCSV(csvText);\n        setAirports(parsedAirports);\n      } catch (error) {\n        console.error('Failed to load airports data:', error);\n        // Keep using empty array as fallback\n      }\n    };\n    loadAirports();\n  }, []);\n\n  const handleInputChange = (inputValue: string) => {\n    setSearchTerm(inputValue);\n    \n    if (inputValue.length === 0) {\n      // Show all airports when input is empty\n      setFilteredAirports(airports.slice(0, 10));\n      setShowSuggestions(true);\n    } else {\n      // Filter airports based on input\n      const filtered = airports.filter(airport => \n        airport.IATA.toLowerCase().includes(inputValue.toLowerCase()) ||\n        airport[\"Airport name\"].toLowerCase().includes(inputValue.toLowerCase()) ||\n        airport.City.toLowerCase().includes(inputValue.toLowerCase()) ||\n        airport.Country.toLowerCase().includes(inputValue.toLowerCase())\n      ).slice(0, 10); // Limit to 10 suggestions\n      \n      setFilteredAirports(filtered);\n      setShowSuggestions(true);\n    }\n  };\n\n  const handleSuggestionSelect = (airport: Airport) => {\n    const displayValue = `${airport.IATA} - ${airport[\"Airport name\"]}, ${airport.City}, ${airport.Country}`;\n    setSearchTerm(displayValue);\n    onChange(airport.IATA);\n    setShowSuggestions(false);\n  };\n\n  const handleInputFocus = () => {\n    // Always show suggestions on focus\n    if (searchTerm.length === 0) {\n      setFilteredAirports(airports.slice(0, 10));\n    } else {\n      const filtered = airports.filter(airport => \n        airport.IATA.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        airport[\"Airport name\"].toLowerCase().includes(searchTerm.toLowerCase()) ||\n        airport.City.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        airport.Country.toLowerCase().includes(searchTerm.toLowerCase())\n      ).slice(0, 10);\n      setFilteredAirports(filtered);\n    }\n    setShowSuggestions(true);\n  };\n\n  const handleInputBlur = (e: React.FocusEvent) => {\n    // Check if the blur is because we're clicking on a suggestion\n    if (e.relatedTarget && e.relatedTarget.closest('.suggestions-dropdown')) {\n      return; // Don't hide suggestions if clicking on dropdown\n    }\n    // Delay hiding suggestions to allow for clicks\n    setTimeout(() => setShowSuggestions(false), 300);\n  };\n\n  return (\n    <div className=\"space-y-2 relative\">\n      <Label htmlFor={testId}>{label}</Label>\n      <Input\n        id={testId}\n        placeholder={placeholder}\n        value={searchTerm}\n        onChange={(e) => handleInputChange(e.target.value)}\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        data-testid={testId}\n        required\n        autoComplete=\"off\"\n      />\n      \n      {showSuggestions && filteredAirports.length > 0 && (\n        <div className=\"absolute top-full left-0 right-0 z-50 bg-white border border-gray-200 rounded-md shadow-lg max-h-60 overflow-y-auto mt-1 suggestions-dropdown\">\n          {filteredAirports.map((airport, index) => (\n            <div\n              key={`${airport.IATA}-${index}`}\n              className=\"px-4 py-3 hover:bg-gray-100 cursor-pointer border-b border-gray-100 last:border-b-0\"\n              onMouseDown={(e) => e.preventDefault()} // Prevent blur from firing\n              onClick={() => handleSuggestionSelect(airport)}\n            >\n              <div className=\"flex items-center gap-2\">\n                <div className=\"flex-shrink-0\">\n                  <div className=\"w-8 h-8 bg-primary/10 rounded-full flex items-center justify-center\">\n                    <MapPin className=\"h-4 w-4 text-primary\" />\n                  </div>\n                </div>\n                <div className=\"flex-1 min-w-0\">\n                  <div className=\"flex items-center gap-2\">\n                    <span className=\"font-semibold text-primary\">{airport.IATA}</span>\n                    <span className=\"text-sm text-gray-500\">({airport.ICAO})</span>\n                  </div>\n                  <div className=\"text-sm font-medium text-gray-900 truncate\">\n                    {airport[\"Airport name\"]}\n                  </div>\n                  <div className=\"text-xs text-gray-500\">\n                    {airport.City}, {airport.Country}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default function FlightServices() {\n  const [bookingData, setBookingData] = useState<BookingForm>({\n    fullName: \"\",\n    email: \"\",\n    phone: \"\",\n    from: \"\",\n    to: \"\",\n    departureDate: \"\",\n    returnDate: \"\",\n    passengers: \"1\",\n    travelClass: \"Economy\",\n    tripType: \"roundtrip\"\n  });\n\n  const handleInputChange = (field: keyof BookingForm, value: string) => {\n    setBookingData(prev => ({ ...prev, [field]: value }));\n    console.log(`Updated ${field}:`, value);\n  };\n\n  const handleBookingSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    console.log(\"Flight booking submitted:\", bookingData);\n    alert(\"Thank you! We'll send you the best flight options within 24 hours.\");\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Header />\n      \n      {/* Hero Section */}\n      <section className=\"pt-20 pb-12 bg-gradient-to-br from-primary/10 via-background to-accent/10\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <div className=\"flex items-center justify-center gap-2 mb-4\">\n              <Plane className=\"h-8 w-8 text-primary\" />\n              <Badge variant=\"outline\">Expert Team</Badge>\n            </div>\n            <h1 className=\"text-4xl md:text-6xl font-bold text-foreground mb-6\">\n              Flight Booking Services\n            </h1>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Experience seamless flight booking with our comprehensive airline reservation services. \n              We work with major airlines worldwide to offer you the best deals and flexible options.\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Features Section */}\n      <section className=\"py-16 bg-muted/30\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-foreground mb-4\">What We Offer</h2>\n            <p className=\"text-lg text-muted-foreground\">Comprehensive flight booking services tailored to your needs</p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {features.map((feature, index) => {\n              const IconComponent = feature.icon;\n              return (\n                <Card key={index} className=\"text-center h-full\" data-testid={`feature-card-${index}`}>\n                  <CardContent className=\"pt-6\">\n                    <div className=\"w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                      <IconComponent className=\"h-6 w-6 text-primary\" />\n                    </div>\n                    <h3 className=\"text-lg font-semibold text-foreground mb-2\">{feature.title}</h3>\n                    <p className=\"text-muted-foreground\">{feature.description}</p>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Booking Form Section */}\n      <section className=\"py-16 bg-background\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <Card>\n            <CardHeader className=\"text-center\">\n              <CardTitle className=\"text-2xl\">Book Your Flight Now</CardTitle>\n              <p className=\"text-muted-foreground\">Fill out the form below and we'll get back to you with the best options</p>\n            </CardHeader>\n            <CardContent>\n              <form onSubmit={handleBookingSubmit} className=\"space-y-6\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"tripType\">Trip Type</Label>\n                    <Select value={bookingData.tripType} onValueChange={(value) => handleInputChange(\"tripType\", value)}>\n                      <SelectTrigger data-testid=\"select-trip-type\">\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"roundtrip\">Round Trip</SelectItem>\n                        <SelectItem value=\"oneway\">One Way</SelectItem>\n                        <SelectItem value=\"multicity\">Multi-city</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"passengers\">Passengers</Label>\n                    <Select value={bookingData.passengers} onValueChange={(value) => handleInputChange(\"passengers\", value)}>\n                      <SelectTrigger data-testid=\"select-passengers-count\">\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"1\">1 Passenger</SelectItem>\n                        <SelectItem value=\"2\">2 Passengers</SelectItem>\n                        <SelectItem value=\"3\">3 Passengers</SelectItem>\n                        <SelectItem value=\"4\">4 Passengers</SelectItem>\n                        <SelectItem value=\"5+\">5+ Passengers</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <AirportSearchInput\n                    value={bookingData.from}\n                    onChange={(value) => handleInputChange(\"from\", value)}\n                    placeholder=\"Search departure airport...\"\n                    label=\"From\"\n                    testId=\"input-departure\"\n                  />\n\n                  <AirportSearchInput\n                    value={bookingData.to}\n                    onChange={(value) => handleInputChange(\"to\", value)}\n                    placeholder=\"Search destination airport...\"\n                    label=\"To\"\n                    testId=\"input-destination\"\n                  />\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"departureDate\">Departure Date</Label>\n                    <Input\n                      id=\"departureDate\"\n                      type=\"date\"\n                      value={bookingData.departureDate}\n                      onChange={(e) => handleInputChange(\"departureDate\", e.target.value)}\n                      data-testid=\"input-departure-date\"\n                      required\n                    />\n                  </div>\n                  \n                  {bookingData.tripType === \"roundtrip\" && (\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"returnDate\">Return Date</Label>\n                      <Input\n                        id=\"returnDate\"\n                        type=\"date\"\n                        value={bookingData.returnDate}\n                        onChange={(e) => handleInputChange(\"returnDate\", e.target.value)}\n                        data-testid=\"input-return-date\"\n                      />\n                    </div>\n                  )}\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"fullName\">Full Name</Label>\n                    <Input\n                      id=\"fullName\"\n                      placeholder=\"Your full name\"\n                      value={bookingData.fullName}\n                      onChange={(e) => handleInputChange(\"fullName\", e.target.value)}\n                      data-testid=\"input-full-name\"\n                      required\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"email\">Email</Label>\n                    <Input\n                      id=\"email\"\n                      type=\"email\"\n                      placeholder=\"your@email.com\"\n                      value={bookingData.email}\n                      onChange={(e) => handleInputChange(\"email\", e.target.value)}\n                      data-testid=\"input-email\"\n                      required\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"phone\">Phone</Label>\n                    <Input\n                      id=\"phone\"\n                      placeholder=\"+234...\"\n                      value={bookingData.phone}\n                      onChange={(e) => handleInputChange(\"phone\", e.target.value)}\n                      data-testid=\"input-phone\"\n                      required\n                    />\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"travelClass\">Travel Class</Label>\n                  <Select value={bookingData.travelClass} onValueChange={(value) => handleInputChange(\"travelClass\", value)}>\n                    <SelectTrigger data-testid=\"select-class\">\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"Economy\">Economy</SelectItem>\n                      <SelectItem value=\"Premium Economy\">Premium Economy</SelectItem>\n                      <SelectItem value=\"Business\">Business</SelectItem>\n                      <SelectItem value=\"First\">First Class</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <Button type=\"submit\" size=\"lg\" className=\"w-full\" data-testid=\"button-book-flight\">\n                  <CheckCircle className=\"mr-2 h-5 w-5\" />\n                  Book Flight Now\n                </Button>\n              </form>\n            </CardContent>\n          </Card>\n        </div>\n      </section>\n\n      {/* Pricing Section */}\n      <section className=\"py-16 bg-muted/30\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"text-3xl font-bold text-foreground mb-8\">Service Fee</h2>\n          <div className=\"max-w-2xl mx-auto\">\n            <Card>\n              <CardContent className=\"pt-6\">\n                <div className=\"text-center\">\n                  <Badge variant=\"secondary\" className=\"mb-4\">Affordable</Badge>\n                  <h3 className=\"text-xl font-semibold text-foreground mb-2\">Transparent Pricing</h3>\n                  <p className=\"text-muted-foreground\">\n                    Our service fees depend on destination and booking complexity. \n                    We provide upfront pricing with no hidden charges.\n                  </p>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":19077},"frontend/src/pages/services/HolidayPackages.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport { \n  MapPin, \n  Calendar, \n  Users, \n  Camera, \n  Shield, \n  Clock,\n  CheckCircle,\n  Star\n} from \"lucide-react\";\n\nconst features = [\n  {\n    icon: Calendar,\n    title: \"Customized itinerary planning\",\n    description: \"Tailor-made travel plans based on your preferences and interests\"\n  },\n  {\n    icon: Star,\n    title: \"All-inclusive package options\",\n    description: \"Everything included - flights, hotels, meals, and activities\"\n  },\n  {\n    icon: Users,\n    title: \"Local tour guide arrangements\",\n    description: \"Experienced local guides for authentic cultural experiences\"\n  },\n  {\n    icon: Camera,\n    title: \"Activity and excursion bookings\",\n    description: \"Pre-arranged activities and memorable experiences\"\n  },\n  {\n    icon: Shield,\n    title: \"Travel insurance recommendations\",\n    description: \"Comprehensive coverage for peace of mind during your trip\"\n  },\n  {\n    icon: Clock,\n    title: \"24/7 travel support during your trip\",\n    description: \"Round-the-clock assistance throughout your holiday\"\n  }\n];\n\ninterface HolidayForm {\n  fullName: string;\n  email: string;\n  phone: string;\n  destination: string;\n  packageType: string;\n  travelers: string;\n  budget: string;\n  duration: string;\n  startDate: string;\n  accommodation: string;\n  interests: string;\n  specialRequests: string;\n}\n\nexport default function HolidayPackages() {\n  const [packageData, setPackageData] = useState<HolidayForm>({\n    fullName: \"\",\n    email: \"\",\n    phone: \"\",\n    destination: \"\",\n    packageType: \"\",\n    travelers: \"2\",\n    budget: \"\",\n    duration: \"\",\n    startDate: \"\",\n    accommodation: \"\",\n    interests: \"\",\n    specialRequests: \"\"\n  });\n\n  const handleInputChange = (field: keyof HolidayForm, value: string) => {\n    setPackageData(prev => ({ ...prev, [field]: value }));\n    console.log(`Updated ${field}:`, value);\n  };\n\n  const handlePackageSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    console.log(\"Holiday package inquiry submitted:\", packageData);\n    alert(\"Thank you! We'll create a customized holiday package proposal and send it to you within 48 hours.\");\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Header />\n      \n      {/* Hero Section */}\n      <section className=\"pt-20 pb-12 bg-gradient-to-br from-primary/10 via-background to-accent/10\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <div className=\"flex items-center justify-center gap-2 mb-4\">\n              <MapPin className=\"h-8 w-8 text-primary\" />\n              <Badge variant=\"outline\">Unforgettable Experiences</Badge>\n            </div>\n            <h1 className=\"text-4xl md:text-6xl font-bold text-foreground mb-6\">\n              Holiday Packages\n            </h1>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Create unforgettable memories with our customized holiday packages. Whether you're planning \n              a romantic getaway, family vacation, or adventure trip, we'll design the perfect itinerary.\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Package Types */}\n      <section className=\"py-16 bg-background\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-foreground mb-4\">Popular Package Types</h2>\n            <p className=\"text-lg text-muted-foreground\">Choose from our curated holiday experiences</p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            <Card className=\"text-center hover-elevate\" data-testid=\"package-romantic\">\n              <CardContent className=\"pt-6\">\n                <div className=\"text-4xl mb-4\">💕</div>\n                <h3 className=\"text-lg font-semibold text-foreground mb-2\">Romantic Getaways</h3>\n                <p className=\"text-muted-foreground text-sm\">Perfect for couples seeking intimate experiences</p>\n              </CardContent>\n            </Card>\n            \n            <Card className=\"text-center hover-elevate\" data-testid=\"package-family\">\n              <CardContent className=\"pt-6\">\n                <div className=\"text-4xl mb-4\">👨‍👩‍👧‍👦</div>\n                <h3 className=\"text-lg font-semibold text-foreground mb-2\">Family Vacations</h3>\n                <p className=\"text-muted-foreground text-sm\">Fun-filled trips for the whole family</p>\n              </CardContent>\n            </Card>\n            \n            <Card className=\"text-center hover-elevate\" data-testid=\"package-adventure\">\n              <CardContent className=\"pt-6\">\n                <div className=\"text-4xl mb-4\">⛰️</div>\n                <h3 className=\"text-lg font-semibold text-foreground mb-2\">Adventure Tours</h3>\n                <p className=\"text-muted-foreground text-sm\">Thrilling experiences for adventure seekers</p>\n              </CardContent>\n            </Card>\n            \n            <Card className=\"text-center hover-elevate\" data-testid=\"package-luxury\">\n              <CardContent className=\"pt-6\">\n                <div className=\"text-4xl mb-4\">✨</div>\n                <h3 className=\"text-lg font-semibold text-foreground mb-2\">Luxury Escapes</h3>\n                <p className=\"text-muted-foreground text-sm\">Premium experiences with world-class service</p>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Features Section */}\n      <section className=\"py-16 bg-muted/30\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-foreground mb-4\">What We Offer</h2>\n            <p className=\"text-lg text-muted-foreground\">Comprehensive holiday planning services</p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {features.map((feature, index) => {\n              const IconComponent = feature.icon;\n              return (\n                <Card key={index} className=\"text-center h-full\" data-testid={`holiday-feature-${index}`}>\n                  <CardContent className=\"pt-6\">\n                    <div className=\"w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                      <IconComponent className=\"h-6 w-6 text-primary\" />\n                    </div>\n                    <h3 className=\"text-lg font-semibold text-foreground mb-2\">{feature.title}</h3>\n                    <p className=\"text-muted-foreground\">{feature.description}</p>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Booking Form Section */}\n      <section className=\"py-16 bg-background\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <Card>\n            <CardHeader className=\"text-center\">\n              <CardTitle className=\"text-2xl\">Plan Holiday</CardTitle>\n              <p className=\"text-muted-foreground\">Tell us about your dream vacation and we'll create the perfect package</p>\n            </CardHeader>\n            <CardContent>\n              <form onSubmit={handlePackageSubmit} className=\"space-y-6\">\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"fullName\">Full Name</Label>\n                    <Input\n                      id=\"fullName\"\n                      placeholder=\"Your full name\"\n                      value={packageData.fullName}\n                      onChange={(e) => handleInputChange(\"fullName\", e.target.value)}\n                      data-testid=\"input-fullname\"\n                      required\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"email\">Email</Label>\n                    <Input\n                      id=\"email\"\n                      type=\"email\"\n                      placeholder=\"your@email.com\"\n                      value={packageData.email}\n                      onChange={(e) => handleInputChange(\"email\", e.target.value)}\n                      data-testid=\"input-email\"\n                      required\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"phone\">Phone</Label>\n                    <Input\n                      id=\"phone\"\n                      placeholder=\"+234...\"\n                      value={packageData.phone}\n                      onChange={(e) => handleInputChange(\"phone\", e.target.value)}\n                      data-testid=\"input-phone\"\n                      required\n                    />\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"destination\">Preferred Destination</Label>\n                    <Select value={packageData.destination} onValueChange={(value) => handleInputChange(\"destination\", value)}>\n                      <SelectTrigger data-testid=\"select-destination\">\n                        <SelectValue placeholder=\"Where would you like to go?\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"Dubai\">Dubai, UAE</SelectItem>\n                        <SelectItem value=\"Paris\">Paris, France</SelectItem>\n                        <SelectItem value=\"London\">London, UK</SelectItem>\n                        <SelectItem value=\"New York\">New York, USA</SelectItem>\n                        <SelectItem value=\"Tokyo\">Tokyo, Japan</SelectItem>\n                        <SelectItem value=\"Maldives\">Maldives</SelectItem>\n                        <SelectItem value=\"Bali\">Bali, Indonesia</SelectItem>\n                        <SelectItem value=\"Egypt\">Cairo, Egypt</SelectItem>\n                        <SelectItem value=\"Other\">Other Destination</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"packageType\">Package Type</Label>\n                    <Select value={packageData.packageType} onValueChange={(value) => handleInputChange(\"packageType\", value)}>\n                      <SelectTrigger data-testid=\"select-package-type\">\n                        <SelectValue placeholder=\"What type of holiday?\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"Romantic\">Romantic Getaway</SelectItem>\n                        <SelectItem value=\"Family\">Family Vacation</SelectItem>\n                        <SelectItem value=\"Adventure\">Adventure Tour</SelectItem>\n                        <SelectItem value=\"Luxury\">Luxury Escape</SelectItem>\n                        <SelectItem value=\"Cultural\">Cultural Experience</SelectItem>\n                        <SelectItem value=\"Beach\">Beach Resort</SelectItem>\n                        <SelectItem value=\"Business\">Business + Leisure</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"travelers\">Number of Travelers</Label>\n                    <Select value={packageData.travelers} onValueChange={(value) => handleInputChange(\"travelers\", value)}>\n                      <SelectTrigger data-testid=\"select-travelers\">\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"1\">1 Traveler</SelectItem>\n                        <SelectItem value=\"2\">2 Travelers</SelectItem>\n                        <SelectItem value=\"3\">3 Travelers</SelectItem>\n                        <SelectItem value=\"4\">4 Travelers</SelectItem>\n                        <SelectItem value=\"5+\">5+ Travelers</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"duration\">Duration</Label>\n                    <Select value={packageData.duration} onValueChange={(value) => handleInputChange(\"duration\", value)}>\n                      <SelectTrigger data-testid=\"select-duration\">\n                        <SelectValue placeholder=\"How long?\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"3-4 days\">3-4 Days</SelectItem>\n                        <SelectItem value=\"5-7 days\">5-7 Days</SelectItem>\n                        <SelectItem value=\"1-2 weeks\">1-2 Weeks</SelectItem>\n                        <SelectItem value=\"2+ weeks\">2+ Weeks</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"startDate\">Preferred Start Date</Label>\n                    <Input\n                      id=\"startDate\"\n                      type=\"date\"\n                      value={packageData.startDate}\n                      onChange={(e) => handleInputChange(\"startDate\", e.target.value)}\n                      data-testid=\"input-start-date\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"budget\">Budget Per Person (USD)</Label>\n                    <Select value={packageData.budget} onValueChange={(value) => handleInputChange(\"budget\", value)}>\n                      <SelectTrigger data-testid=\"select-budget\">\n                        <SelectValue placeholder=\"Your budget range\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"1000\">$1,000 - $2,500</SelectItem>\n                        <SelectItem value=\"2500\">$2,500 - $5,000</SelectItem>\n                        <SelectItem value=\"5000\">$5,000 - $10,000</SelectItem>\n                        <SelectItem value=\"10000\">$10,000+</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"accommodation\">Accommodation Preference</Label>\n                    <Select value={packageData.accommodation} onValueChange={(value) => handleInputChange(\"accommodation\", value)}>\n                      <SelectTrigger data-testid=\"select-accommodation\">\n                        <SelectValue placeholder=\"Hotel preference\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"3-star\">3-Star Hotels</SelectItem>\n                        <SelectItem value=\"4-star\">4-Star Hotels</SelectItem>\n                        <SelectItem value=\"5-star\">5-Star Luxury</SelectItem>\n                        <SelectItem value=\"resort\">All-Inclusive Resorts</SelectItem>\n                        <SelectItem value=\"boutique\">Boutique Hotels</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"interests\">Interests & Activities</Label>\n                  <Textarea\n                    id=\"interests\"\n                    placeholder=\"What activities or experiences interest you? (e.g., museums, nightlife, shopping, adventure sports, local cuisine)\"\n                    value={packageData.interests}\n                    onChange={(e) => handleInputChange(\"interests\", e.target.value)}\n                    data-testid=\"textarea-interests\"\n                    rows={3}\n                  />\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"specialRequests\">Special Requests</Label>\n                  <Textarea\n                    id=\"specialRequests\"\n                    placeholder=\"Any special requirements, dietary restrictions, accessibility needs, or celebration occasions?\"\n                    value={packageData.specialRequests}\n                    onChange={(e) => handleInputChange(\"specialRequests\", e.target.value)}\n                    data-testid=\"textarea-special-requests\"\n                    rows={3}\n                  />\n                </div>\n\n                <Button type=\"submit\" size=\"lg\" className=\"w-full\" data-testid=\"button-plan-holiday\">\n                  <CheckCircle className=\"mr-2 h-5 w-5\" />\n                  Plan Holiday\n                </Button>\n              </form>\n            </CardContent>\n          </Card>\n        </div>\n      </section>\n\n      {/* Pricing Section */}\n      <section className=\"py-16 bg-muted/30\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"text-3xl font-bold text-foreground mb-8\">Package Prices</h2>\n          <div className=\"max-w-2xl mx-auto\">\n            <Card>\n              <CardContent className=\"pt-6\">\n                <div className=\"text-center\">\n                  <Badge variant=\"secondary\" className=\"mb-4\">Customized Pricing</Badge>\n                  <h3 className=\"text-xl font-semibold text-foreground mb-2\">Based on Your Preferences</h3>\n                  <p className=\"text-muted-foreground\">\n                    Our holiday packages are customized based on destination, duration, accommodation, \n                    and activities. Get a detailed quote tailored to your preferences.\n                  </p>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":18824},"frontend/src/pages/services/HotelServices.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport { \n  Hotel, \n  Shield, \n  RefreshCw, \n  TrendingUp, \n  Car, \n  Percent,\n  CheckCircle,\n  Star\n} from \"lucide-react\";\n\nconst features = [\n  {\n    icon: Hotel,\n    title: \"Wide selection from budget to luxury hotels\",\n    description: \"Access to thousands of properties worldwide\"\n  },\n  {\n    icon: Shield,\n    title: \"Best rate guarantee and price matching\",\n    description: \"We ensure you get the lowest available rates\"\n  },\n  {\n    icon: RefreshCw,\n    title: \"Free cancellation on most bookings\",\n    description: \"Flexible cancellation policies for peace of mind\"\n  },\n  {\n    icon: TrendingUp,\n    title: \"Room upgrades and special amenities\",\n    description: \"Exclusive perks and upgrades for our clients\"\n  },\n  {\n    icon: Car,\n    title: \"Airport transfer arrangements\",\n    description: \"Seamless transportation from airport to hotel\"\n  },\n  {\n    icon: Percent,\n    title: \"Extended stay discounts\",\n    description: \"Special rates for longer stays\"\n  }\n];\n\ninterface HotelBookingForm {\n  fullName: string;\n  email: string;\n  phone: string;\n  destination: string;\n  checkIn: string;\n  checkOut: string;\n  guests: string;\n  rooms: string;\n  hotelType: string;\n  budget: string;\n}\n\nexport default function HotelServices() {\n  const [bookingData, setBookingData] = useState<HotelBookingForm>({\n    fullName: \"\",\n    email: \"\",\n    phone: \"\",\n    destination: \"\",\n    checkIn: \"\",\n    checkOut: \"\",\n    guests: \"2\",\n    rooms: \"1\",\n    hotelType: \"Standard\",\n    budget: \"mid-range\"\n  });\n\n  const handleInputChange = (field: keyof HotelBookingForm, value: string) => {\n    setBookingData(prev => ({ ...prev, [field]: value }));\n    console.log(`Updated ${field}:`, value);\n  };\n\n  const handleBookingSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    console.log(\"Hotel booking submitted:\", bookingData);\n    alert(\"Thank you! We'll send you the best hotel options within 24 hours.\");\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Header />\n      \n      {/* Hero Section */}\n      <section className=\"pt-20 pb-12 bg-gradient-to-br from-primary/10 via-background to-accent/10\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <div className=\"flex items-center justify-center gap-2 mb-4\">\n              <Hotel className=\"h-8 w-8 text-primary\" />\n              <Badge variant=\"outline\">Hotel Reservations</Badge>\n            </div>\n            <h1 className=\"text-4xl md:text-6xl font-bold text-foreground mb-6\">\n              Hotel Booking Service\n            </h1>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Find and book the perfect accommodation for your stay. From budget-friendly options \n              to luxury resorts, we have partnerships with hotels worldwide to ensure you get the best rates.\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Features Section */}\n      <section className=\"py-16 bg-muted/30\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-foreground mb-4\">What We Offer</h2>\n            <p className=\"text-lg text-muted-foreground\">Comprehensive hotel booking services for every traveler</p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {features.map((feature, index) => {\n              const IconComponent = feature.icon;\n              return (\n                <Card key={index} className=\"text-center h-full\" data-testid={`hotel-feature-${index}`}>\n                  <CardContent className=\"pt-6\">\n                    <div className=\"w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                      <IconComponent className=\"h-6 w-6 text-primary\" />\n                    </div>\n                    <h3 className=\"text-lg font-semibold text-foreground mb-2\">{feature.title}</h3>\n                    <p className=\"text-muted-foreground\">{feature.description}</p>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Booking Form Section */}\n      <section className=\"py-16 bg-background\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <Card>\n            <CardHeader className=\"text-center\">\n              <CardTitle className=\"text-2xl\">Book Hotel Now</CardTitle>\n              <p className=\"text-muted-foreground\">Tell us your preferences and we'll find the perfect accommodation</p>\n            </CardHeader>\n            <CardContent>\n              <form onSubmit={handleBookingSubmit} className=\"space-y-6\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"destination\">Destination</Label>\n                    <Input\n                      id=\"destination\"\n                      placeholder=\"City or hotel name\"\n                      value={bookingData.destination}\n                      onChange={(e) => handleInputChange(\"destination\", e.target.value)}\n                      data-testid=\"input-destination\"\n                      required\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"hotelType\">Hotel Category</Label>\n                    <Select value={bookingData.hotelType} onValueChange={(value) => handleInputChange(\"hotelType\", value)}>\n                      <SelectTrigger data-testid=\"select-hotel-type\">\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"Budget\">Budget (1-2 Star)</SelectItem>\n                        <SelectItem value=\"Standard\">Standard (3 Star)</SelectItem>\n                        <SelectItem value=\"Deluxe\">Deluxe (4 Star)</SelectItem>\n                        <SelectItem value=\"Luxury\">Luxury (5 Star)</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"checkIn\">Check-in Date</Label>\n                    <Input\n                      id=\"checkIn\"\n                      type=\"date\"\n                      value={bookingData.checkIn}\n                      onChange={(e) => handleInputChange(\"checkIn\", e.target.value)}\n                      data-testid=\"input-checkin\"\n                      required\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"checkOut\">Check-out Date</Label>\n                    <Input\n                      id=\"checkOut\"\n                      type=\"date\"\n                      value={bookingData.checkOut}\n                      onChange={(e) => handleInputChange(\"checkOut\", e.target.value)}\n                      data-testid=\"input-checkout\"\n                      required\n                    />\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"rooms\">Rooms</Label>\n                    <Select value={bookingData.rooms} onValueChange={(value) => handleInputChange(\"rooms\", value)}>\n                      <SelectTrigger data-testid=\"select-rooms\">\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"1\">1 Room</SelectItem>\n                        <SelectItem value=\"2\">2 Rooms</SelectItem>\n                        <SelectItem value=\"3\">3 Rooms</SelectItem>\n                        <SelectItem value=\"4+\">4+ Rooms</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"guests\">Guests</Label>\n                    <Select value={bookingData.guests} onValueChange={(value) => handleInputChange(\"guests\", value)}>\n                      <SelectTrigger data-testid=\"select-guests\">\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"1\">1 Guest</SelectItem>\n                        <SelectItem value=\"2\">2 Guests</SelectItem>\n                        <SelectItem value=\"3\">3 Guests</SelectItem>\n                        <SelectItem value=\"4\">4 Guests</SelectItem>\n                        <SelectItem value=\"5+\">5+ Guests</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"budget\">Budget Range</Label>\n                    <Select value={bookingData.budget} onValueChange={(value) => handleInputChange(\"budget\", value)}>\n                      <SelectTrigger data-testid=\"select-budget\">\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"budget\">Budget (Under $50/night)</SelectItem>\n                        <SelectItem value=\"mid-range\">Mid-range ($50-150/night)</SelectItem>\n                        <SelectItem value=\"luxury\">Luxury ($150+/night)</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"fullName\">Full Name</Label>\n                    <Input\n                      id=\"fullName\"\n                      placeholder=\"Your full name\"\n                      value={bookingData.fullName}\n                      onChange={(e) => handleInputChange(\"fullName\", e.target.value)}\n                      data-testid=\"input-fullname\"\n                      required\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"email\">Email</Label>\n                    <Input\n                      id=\"email\"\n                      type=\"email\"\n                      placeholder=\"your@email.com\"\n                      value={bookingData.email}\n                      onChange={(e) => handleInputChange(\"email\", e.target.value)}\n                      data-testid=\"input-email\"\n                      required\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"phone\">Phone</Label>\n                    <Input\n                      id=\"phone\"\n                      placeholder=\"+234...\"\n                      value={bookingData.phone}\n                      onChange={(e) => handleInputChange(\"phone\", e.target.value)}\n                      data-testid=\"input-phone\"\n                      required\n                    />\n                  </div>\n                </div>\n\n                <Button type=\"submit\" size=\"lg\" className=\"w-full\" data-testid=\"button-book-hotel\">\n                  <CheckCircle className=\"mr-2 h-5 w-5\" />\n                  Book Hotel Now\n                </Button>\n              </form>\n            </CardContent>\n          </Card>\n        </div>\n      </section>\n\n      {/* Pricing Section */}\n      <section className=\"py-16 bg-muted/30\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"text-3xl font-bold text-foreground mb-8\">Service Fee</h2>\n          <div className=\"max-w-2xl mx-auto\">\n            <Card>\n              <CardContent className=\"pt-6\">\n                <div className=\"text-center\">\n                  <Badge variant=\"secondary\" className=\"mb-4\">Affordable</Badge>\n                  <h3 className=\"text-xl font-semibold text-foreground mb-2\">Based on Hotel Category</h3>\n                  <p className=\"text-muted-foreground\">\n                    Our service fees vary based on hotel category and duration of stay. \n                    We provide transparent pricing with no hidden charges.\n                  </p>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":13239},"frontend/src/pages/services/StudyAbroad.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport { \n  GraduationCap, \n  School, \n  DollarSign, \n  FileText, \n  Home, \n  Compass,\n  CheckCircle,\n  BookOpen\n} from \"lucide-react\";\n\nconst features = [\n  {\n    icon: School,\n    title: \"University selection and application guidance\",\n    description: \"Expert advice on choosing the right institution for your goals\"\n  },\n  {\n    icon: DollarSign,\n    title: \"Scholarship search and application assistance\",\n    description: \"Help finding and applying for funding opportunities\"\n  },\n  {\n    icon: FileText,\n    title: \"Student visa processing and documentation\",\n    description: \"Complete support for visa requirements and applications\"\n  },\n  {\n    icon: Home,\n    title: \"Accommodation arrangement assistance\",\n    description: \"Help finding suitable housing near your chosen university\"\n  },\n  {\n    icon: Compass,\n    title: \"Pre-departure orientation sessions\",\n    description: \"Preparation for life and study in your destination country\"\n  },\n  {\n    icon: BookOpen,\n    title: \"Ongoing support throughout your studies\",\n    description: \"Continued guidance and assistance during your academic journey\"\n  }\n];\n\ninterface StudyAbroadForm {\n  fullName: string;\n  email: string;\n  phone: string;\n  age: string;\n  currentEducation: string;\n  fieldOfStudy: string;\n  preferredCountry: string;\n  studyLevel: string;\n  startDate: string;\n  englishTest: string;\n  budget: string;\n  scholarshipInterest: string;\n  additionalInfo: string;\n}\n\nexport default function StudyAbroad() {\n  const [applicationData, setApplicationData] = useState<StudyAbroadForm>({\n    fullName: \"\",\n    email: \"\",\n    phone: \"\",\n    age: \"\",\n    currentEducation: \"\",\n    fieldOfStudy: \"\",\n    preferredCountry: \"\",\n    studyLevel: \"\",\n    startDate: \"\",\n    englishTest: \"\",\n    budget: \"\",\n    scholarshipInterest: \"\",\n    additionalInfo: \"\"\n  });\n\n  const handleInputChange = (field: keyof StudyAbroadForm, value: string) => {\n    setApplicationData(prev => ({ ...prev, [field]: value }));\n    console.log(`Updated ${field}:`, value);\n  };\n\n  const handleApplicationSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    console.log(\"Study abroad application submitted:\", applicationData);\n    alert(\"Thank you! Our education consultants will contact you within 24 hours to discuss your study abroad options.\");\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Header />\n      \n      {/* Hero Section */}\n      <section className=\"pt-20 pb-12 bg-gradient-to-br from-primary/10 via-background to-accent/10\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <div className=\"flex items-center justify-center gap-2 mb-4\">\n              <GraduationCap className=\"h-8 w-8 text-primary\" />\n              <Badge variant=\"outline\">Transform Your Future</Badge>\n            </div>\n            <h1 className=\"text-4xl md:text-6xl font-bold text-foreground mb-6\">\n              Study Abroad Programs\n            </h1>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Transform your future with global educational opportunities. We provide comprehensive \n              support for students planning to study internationally, from application to arrival.\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Statistics Banner */}\n      <section className=\"py-8 bg-primary/5 border-y\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-8 text-center\">\n            <div>\n              <div className=\"text-3xl font-bold text-primary\">500+</div>\n              <div className=\"text-sm text-muted-foreground\">Students Placed</div>\n            </div>\n            <div>\n              <div className=\"text-3xl font-bold text-primary\">100+</div>\n              <div className=\"text-sm text-muted-foreground\">Universities</div>\n            </div>\n            <div>\n              <div className=\"text-3xl font-bold text-primary\">25+</div>\n              <div className=\"text-sm text-muted-foreground\">Countries</div>\n            </div>\n            <div>\n              <div className=\"text-3xl font-bold text-primary\">95%</div>\n              <div className=\"text-sm text-muted-foreground\">Visa Success</div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Features Section */}\n      <section className=\"py-16 bg-muted/30\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-foreground mb-4\">What We Offer</h2>\n            <p className=\"text-lg text-muted-foreground\">Comprehensive support for your international education journey</p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {features.map((feature, index) => {\n              const IconComponent = feature.icon;\n              return (\n                <Card key={index} className=\"text-center h-full\" data-testid={`study-feature-${index}`}>\n                  <CardContent className=\"pt-6\">\n                    <div className=\"w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                      <IconComponent className=\"h-6 w-6 text-primary\" />\n                    </div>\n                    <h3 className=\"text-lg font-semibold text-foreground mb-2\">{feature.title}</h3>\n                    <p className=\"text-muted-foreground\">{feature.description}</p>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Application Form Section */}\n      <section className=\"py-16 bg-background\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <Card>\n            <CardHeader className=\"text-center\">\n              <CardTitle className=\"text-2xl\">Get Study Info</CardTitle>\n              <p className=\"text-muted-foreground\">Tell us about your academic goals and we'll guide you to the perfect program</p>\n            </CardHeader>\n            <CardContent>\n              <form onSubmit={handleApplicationSubmit} className=\"space-y-6\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"fullName\">Full Name</Label>\n                    <Input\n                      id=\"fullName\"\n                      placeholder=\"Your full name\"\n                      value={applicationData.fullName}\n                      onChange={(e) => handleInputChange(\"fullName\", e.target.value)}\n                      data-testid=\"input-fullname\"\n                      required\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"age\">Age</Label>\n                    <Input\n                      id=\"age\"\n                      type=\"number\"\n                      placeholder=\"Your age\"\n                      value={applicationData.age}\n                      onChange={(e) => handleInputChange(\"age\", e.target.value)}\n                      data-testid=\"input-age\"\n                      required\n                    />\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"email\">Email Address</Label>\n                    <Input\n                      id=\"email\"\n                      type=\"email\"\n                      placeholder=\"your@email.com\"\n                      value={applicationData.email}\n                      onChange={(e) => handleInputChange(\"email\", e.target.value)}\n                      data-testid=\"input-email\"\n                      required\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"phone\">Phone Number</Label>\n                    <Input\n                      id=\"phone\"\n                      placeholder=\"+234...\"\n                      value={applicationData.phone}\n                      onChange={(e) => handleInputChange(\"phone\", e.target.value)}\n                      data-testid=\"input-phone\"\n                      required\n                    />\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"currentEducation\">Current Education Level</Label>\n                    <Select value={applicationData.currentEducation} onValueChange={(value) => handleInputChange(\"currentEducation\", value)}>\n                      <SelectTrigger data-testid=\"select-current-education\">\n                        <SelectValue placeholder=\"Select your current level\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"High School\">High School/Secondary School</SelectItem>\n                        <SelectItem value=\"Diploma\">Diploma/Certificate</SelectItem>\n                        <SelectItem value=\"Bachelors\">Bachelor's Degree</SelectItem>\n                        <SelectItem value=\"Masters\">Master's Degree</SelectItem>\n                        <SelectItem value=\"PhD\">PhD/Doctorate</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"studyLevel\">Desired Study Level</Label>\n                    <Select value={applicationData.studyLevel} onValueChange={(value) => handleInputChange(\"studyLevel\", value)}>\n                      <SelectTrigger data-testid=\"select-study-level\">\n                        <SelectValue placeholder=\"What do you want to study?\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"Foundation\">Foundation/Pre-university</SelectItem>\n                        <SelectItem value=\"Bachelors\">Bachelor's Degree</SelectItem>\n                        <SelectItem value=\"Masters\">Master's Degree</SelectItem>\n                        <SelectItem value=\"PhD\">PhD/Doctorate</SelectItem>\n                        <SelectItem value=\"Language\">Language Course</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"fieldOfStudy\">Field of Study</Label>\n                    <Select value={applicationData.fieldOfStudy} onValueChange={(value) => handleInputChange(\"fieldOfStudy\", value)}>\n                      <SelectTrigger data-testid=\"select-field-study\">\n                        <SelectValue placeholder=\"Choose your field\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"Engineering\">Engineering & Technology</SelectItem>\n                        <SelectItem value=\"Business\">Business & Management</SelectItem>\n                        <SelectItem value=\"Medicine\">Medicine & Health Sciences</SelectItem>\n                        <SelectItem value=\"Arts\">Arts & Humanities</SelectItem>\n                        <SelectItem value=\"Science\">Natural Sciences</SelectItem>\n                        <SelectItem value=\"Computing\">Computer Science & IT</SelectItem>\n                        <SelectItem value=\"Law\">Law & Legal Studies</SelectItem>\n                        <SelectItem value=\"Education\">Education</SelectItem>\n                        <SelectItem value=\"Other\">Other</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"preferredCountry\">Preferred Country</Label>\n                    <Select value={applicationData.preferredCountry} onValueChange={(value) => handleInputChange(\"preferredCountry\", value)}>\n                      <SelectTrigger data-testid=\"select-country\">\n                        <SelectValue placeholder=\"Where do you want to study?\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"USA\">United States</SelectItem>\n                        <SelectItem value=\"UK\">United Kingdom</SelectItem>\n                        <SelectItem value=\"Canada\">Canada</SelectItem>\n                        <SelectItem value=\"Australia\">Australia</SelectItem>\n                        <SelectItem value=\"Germany\">Germany</SelectItem>\n                        <SelectItem value=\"France\">France</SelectItem>\n                        <SelectItem value=\"Netherlands\">Netherlands</SelectItem>\n                        <SelectItem value=\"Other\">Other/Flexible</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"startDate\">Preferred Start Date</Label>\n                    <Select value={applicationData.startDate} onValueChange={(value) => handleInputChange(\"startDate\", value)}>\n                      <SelectTrigger data-testid=\"select-start-date\">\n                        <SelectValue placeholder=\"When do you want to start?\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"Fall 2025\">Fall 2025</SelectItem>\n                        <SelectItem value=\"Spring 2026\">Spring 2026</SelectItem>\n                        <SelectItem value=\"Fall 2026\">Fall 2026</SelectItem>\n                        <SelectItem value=\"Flexible\">Flexible</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"englishTest\">English Proficiency Test</Label>\n                    <Select value={applicationData.englishTest} onValueChange={(value) => handleInputChange(\"englishTest\", value)}>\n                      <SelectTrigger data-testid=\"select-english-test\">\n                        <SelectValue placeholder=\"Have you taken any tests?\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"IELTS\">IELTS Taken</SelectItem>\n                        <SelectItem value=\"TOEFL\">TOEFL Taken</SelectItem>\n                        <SelectItem value=\"PTE\">PTE Taken</SelectItem>\n                        <SelectItem value=\"Planning\">Planning to take</SelectItem>\n                        <SelectItem value=\"None\">Not taken yet</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"budget\">Annual Budget (USD)</Label>\n                    <Select value={applicationData.budget} onValueChange={(value) => handleInputChange(\"budget\", value)}>\n                      <SelectTrigger data-testid=\"select-budget\">\n                        <SelectValue placeholder=\"Your budget range\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"10000\">$10,000 - $20,000</SelectItem>\n                        <SelectItem value=\"20000\">$20,000 - $30,000</SelectItem>\n                        <SelectItem value=\"30000\">$30,000 - $50,000</SelectItem>\n                        <SelectItem value=\"50000\">$50,000+</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"scholarshipInterest\">Scholarship Interest</Label>\n                    <Select value={applicationData.scholarshipInterest} onValueChange={(value) => handleInputChange(\"scholarshipInterest\", value)}>\n                      <SelectTrigger data-testid=\"select-scholarship\">\n                        <SelectValue placeholder=\"Need scholarship assistance?\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"Yes\">Yes, I need scholarships</SelectItem>\n                        <SelectItem value=\"Maybe\">Maybe, show me options</SelectItem>\n                        <SelectItem value=\"No\">No, I can self-fund</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"additionalInfo\">Additional Information</Label>\n                  <Textarea\n                    id=\"additionalInfo\"\n                    placeholder=\"Tell us about your academic goals, career aspirations, or any specific requirements\"\n                    value={applicationData.additionalInfo}\n                    onChange={(e) => handleInputChange(\"additionalInfo\", e.target.value)}\n                    data-testid=\"textarea-additional-info\"\n                    rows={4}\n                  />\n                </div>\n\n                <Button type=\"submit\" size=\"lg\" className=\"w-full\" data-testid=\"button-get-study-info\">\n                  <CheckCircle className=\"mr-2 h-5 w-5\" />\n                  Get Study Info\n                </Button>\n              </form>\n            </CardContent>\n          </Card>\n        </div>\n      </section>\n\n      {/* Pricing Section */}\n      <section className=\"py-16 bg-muted/30\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"text-3xl font-bold text-foreground mb-8\">Service Fee</h2>\n          <div className=\"max-w-2xl mx-auto\">\n            <Card>\n              <CardContent className=\"pt-6\">\n                <div className=\"text-center\">\n                  <Badge variant=\"secondary\" className=\"mb-4\">Comprehensive Package</Badge>\n                  <h3 className=\"text-xl font-semibold text-foreground mb-2\">All-Inclusive Service</h3>\n                  <p className=\"text-muted-foreground\">\n                    Our comprehensive package includes all services from university selection \n                    to visa processing. Get a detailed quote during consultation.\n                  </p>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":19485},"frontend/src/pages/services/TravelAdvisory.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport { \n  Shield, \n  AlertTriangle, \n  Globe, \n  CreditCard, \n  Phone, \n  Info,\n  CheckCircle,\n  Clock\n} from \"lucide-react\";\n\nconst advisoryFeatures = [\n  {\n    icon: AlertTriangle,\n    title: \"Real-time travel alerts and updates\",\n    description: \"Latest information on travel restrictions and safety conditions\"\n  },\n  {\n    icon: Shield,\n    title: \"Health and vaccination requirements\",\n    description: \"Up-to-date medical requirements and health advisories\"\n  },\n  {\n    icon: Info,\n    title: \"Safety and security briefings\",\n    description: \"Current security situation and safety recommendations\"\n  },\n  {\n    icon: Globe,\n    title: \"Cultural and etiquette guidance\",\n    description: \"Important cultural information and local customs\"\n  },\n  {\n    icon: CreditCard,\n    title: \"Currency and payment information\",\n    description: \"Local currency, exchange rates, and payment methods\"\n  },\n  {\n    icon: Phone,\n    title: \"Emergency contact information\",\n    description: \"Essential contacts for emergencies and assistance\"\n  }\n];\n\ninterface AdvisoryRequest {\n  destination: string;\n  travelDate: string;\n  duration: string;\n  email: string;\n  travelPurpose: string;\n}\n\n// Todo: remove mock functionality - replace with real travel advisory data\nconst travelAlerts = [\n  {\n    country: \"United Kingdom\",\n    level: \"Low Risk\",\n    alert: \"Standard travel precautions advised\",\n    color: \"text-green-600\",\n    icon: CheckCircle\n  },\n  {\n    country: \"United States\",\n    level: \"Moderate Risk\",\n    alert: \"Enhanced security measures at airports\",\n    color: \"text-yellow-600\",\n    icon: AlertTriangle\n  },\n  {\n    country: \"France\",\n    level: \"Low Risk\",\n    alert: \"Normal travel conditions\",\n    color: \"text-green-600\",\n    icon: CheckCircle\n  }\n];\n\nexport default function TravelAdvisory() {\n  const [advisoryData, setAdvisoryData] = useState<AdvisoryRequest>({\n    destination: \"\",\n    travelDate: \"\",\n    duration: \"\",\n    email: \"\",\n    travelPurpose: \"\"\n  });\n\n  const handleInputChange = (field: keyof AdvisoryRequest, value: string) => {\n    setAdvisoryData(prev => ({ ...prev, [field]: value }));\n    console.log(`Updated ${field}:`, value);\n  };\n\n  const handleAdvisorySubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    console.log(\"Travel advisory request submitted:\", advisoryData);\n    alert(\"Thank you! We'll send you a comprehensive travel advisory report within 24 hours.\");\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Header />\n      \n      {/* Hero Section */}\n      <section className=\"pt-20 pb-12 bg-gradient-to-br from-primary/10 via-background to-accent/10\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <div className=\"flex items-center justify-center gap-2 mb-4\">\n              <Shield className=\"h-8 w-8 text-primary\" />\n              <Badge variant=\"outline\">Stay Informed</Badge>\n            </div>\n            <h1 className=\"text-4xl md:text-6xl font-bold text-foreground mb-6\">\n              Travel Advisory Services\n            </h1>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Stay informed with the latest travel updates, safety information, and destination insights. \n              Our travel advisory services keep you updated on travel restrictions, health requirements, \n              and safety guidelines.\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Current Travel Alerts */}\n      <section className=\"py-16 bg-background\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-foreground mb-4\">Current Travel Alerts</h2>\n            <p className=\"text-lg text-muted-foreground\">Latest updates for popular destinations</p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {travelAlerts.map((alert, index) => {\n              const IconComponent = alert.icon;\n              return (\n                <Alert key={index} className=\"border-l-4 border-l-primary\" data-testid={`alert-${index}`}>\n                  <IconComponent className={`h-4 w-4 ${alert.color}`} />\n                  <AlertTitle className=\"flex items-center gap-2\">\n                    {alert.country}\n                    <Badge variant={alert.level === \"Low Risk\" ? \"secondary\" : \"destructive\"} className=\"text-xs\">\n                      {alert.level}\n                    </Badge>\n                  </AlertTitle>\n                  <AlertDescription className=\"mt-2\">\n                    {alert.alert}\n                  </AlertDescription>\n                  <div className=\"mt-3\">\n                    <p className=\"text-xs text-muted-foreground flex items-center gap-1\">\n                      <Clock className=\"h-3 w-3\" />\n                      Updated today\n                    </p>\n                  </div>\n                </Alert>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Features Section */}\n      <section className=\"py-16 bg-muted/30\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-foreground mb-4\">What We Provide</h2>\n            <p className=\"text-lg text-muted-foreground\">Comprehensive travel information and advisory services</p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {advisoryFeatures.map((feature, index) => {\n              const IconComponent = feature.icon;\n              return (\n                <Card key={index} className=\"text-center h-full\" data-testid={`advisory-feature-${index}`}>\n                  <CardContent className=\"pt-6\">\n                    <div className=\"w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                      <IconComponent className=\"h-6 w-6 text-primary\" />\n                    </div>\n                    <h3 className=\"text-lg font-semibold text-foreground mb-2\">{feature.title}</h3>\n                    <p className=\"text-muted-foreground\">{feature.description}</p>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Advisory Request Form */}\n      <section className=\"py-16 bg-background\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <Card>\n            <CardHeader className=\"text-center\">\n              <CardTitle className=\"text-2xl\">Get Advisory</CardTitle>\n              <p className=\"text-muted-foreground\">Request customized travel advisory for your destination</p>\n            </CardHeader>\n            <CardContent>\n              <form onSubmit={handleAdvisorySubmit} className=\"space-y-6\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"destination\">Destination Country</Label>\n                    <Select value={advisoryData.destination} onValueChange={(value) => handleInputChange(\"destination\", value)}>\n                      <SelectTrigger data-testid=\"select-destination\">\n                        <SelectValue placeholder=\"Select destination\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"USA\">United States</SelectItem>\n                        <SelectItem value=\"UK\">United Kingdom</SelectItem>\n                        <SelectItem value=\"Canada\">Canada</SelectItem>\n                        <SelectItem value=\"Germany\">Germany</SelectItem>\n                        <SelectItem value=\"France\">France</SelectItem>\n                        <SelectItem value=\"Dubai\">Dubai (UAE)</SelectItem>\n                        <SelectItem value=\"Japan\">Japan</SelectItem>\n                        <SelectItem value=\"Australia\">Australia</SelectItem>\n                        <SelectItem value=\"Other\">Other Country</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"travelPurpose\">Purpose of Travel</Label>\n                    <Select value={advisoryData.travelPurpose} onValueChange={(value) => handleInputChange(\"travelPurpose\", value)}>\n                      <SelectTrigger data-testid=\"select-purpose\">\n                        <SelectValue placeholder=\"Select purpose\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"Tourism\">Tourism/Leisure</SelectItem>\n                        <SelectItem value=\"Business\">Business</SelectItem>\n                        <SelectItem value=\"Study\">Study/Education</SelectItem>\n                        <SelectItem value=\"Medical\">Medical Treatment</SelectItem>\n                        <SelectItem value=\"Family\">Family Visit</SelectItem>\n                        <SelectItem value=\"Other\">Other</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"travelDate\">Travel Date</Label>\n                    <Input\n                      id=\"travelDate\"\n                      type=\"date\"\n                      value={advisoryData.travelDate}\n                      onChange={(e) => handleInputChange(\"travelDate\", e.target.value)}\n                      data-testid=\"input-travel-date\"\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"duration\">Duration of Stay</Label>\n                    <Select value={advisoryData.duration} onValueChange={(value) => handleInputChange(\"duration\", value)}>\n                      <SelectTrigger data-testid=\"select-duration\">\n                        <SelectValue placeholder=\"How long?\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"1-7 days\">1-7 days</SelectItem>\n                        <SelectItem value=\"1-2 weeks\">1-2 weeks</SelectItem>\n                        <SelectItem value=\"3-4 weeks\">3-4 weeks</SelectItem>\n                        <SelectItem value=\"1-3 months\">1-3 months</SelectItem>\n                        <SelectItem value=\"3+ months\">3+ months</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"email\">Email Address</Label>\n                  <Input\n                    id=\"email\"\n                    type=\"email\"\n                    placeholder=\"your@email.com\"\n                    value={advisoryData.email}\n                    onChange={(e) => handleInputChange(\"email\", e.target.value)}\n                    data-testid=\"input-email\"\n                    required\n                  />\n                </div>\n\n                <Button type=\"submit\" size=\"lg\" className=\"w-full\" data-testid=\"button-get-advisory\">\n                  <CheckCircle className=\"mr-2 h-5 w-5\" />\n                  Get Advisory\n                </Button>\n              </form>\n            </CardContent>\n          </Card>\n        </div>\n      </section>\n\n      {/* Information Categories */}\n      <section className=\"py-16 bg-muted/30\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-foreground mb-4\">Advisory Categories</h2>\n            <p className=\"text-lg text-muted-foreground\">Comprehensive information coverage</p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            <Card className=\"text-center\" data-testid=\"category-security\">\n              <CardContent className=\"pt-6\">\n                <Shield className=\"h-8 w-8 text-primary mx-auto mb-3\" />\n                <h3 className=\"font-semibold text-foreground mb-2\">Security</h3>\n                <p className=\"text-sm text-muted-foreground\">Current security levels and safety recommendations</p>\n              </CardContent>\n            </Card>\n            \n            <Card className=\"text-center\" data-testid=\"category-health\">\n              <CardContent className=\"pt-6\">\n                <div className=\"text-primary text-2xl mx-auto mb-3\">🏥</div>\n                <h3 className=\"font-semibold text-foreground mb-2\">Health</h3>\n                <p className=\"text-sm text-muted-foreground\">Vaccination requirements and health advisories</p>\n              </CardContent>\n            </Card>\n            \n            <Card className=\"text-center\" data-testid=\"category-entry\">\n              <CardContent className=\"pt-6\">\n                <div className=\"text-primary text-2xl mx-auto mb-3\">🛂</div>\n                <h3 className=\"font-semibold text-foreground mb-2\">Entry Requirements</h3>\n                <p className=\"text-sm text-muted-foreground\">Visa requirements and entry restrictions</p>\n              </CardContent>\n            </Card>\n            \n            <Card className=\"text-center\" data-testid=\"category-local\">\n              <CardContent className=\"pt-6\">\n                <Globe className=\"h-8 w-8 text-primary mx-auto mb-3\" />\n                <h3 className=\"font-semibold text-foreground mb-2\">Local Info</h3>\n                <p className=\"text-sm text-muted-foreground\">Cultural customs and practical information</p>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Service Notice */}\n      <section className=\"py-16 bg-background\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <Card className=\"bg-primary/5 border-primary/20\">\n            <CardContent className=\"pt-6\">\n              <Badge variant=\"outline\" className=\"mb-4\">Complimentary Service</Badge>\n              <h2 className=\"text-2xl font-bold text-foreground mb-4\">Free for All Clients</h2>\n              <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n                Travel advisory services are provided complimentary for all our clients. \n                Stay informed and travel safely with our expert guidance.\n              </p>\n            </CardContent>\n          </Card>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":15360},"frontend/src/pages/services/VisaServices.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport { \n  FileText, \n  CheckSquare, \n  Calendar, \n  MessageCircle, \n  Search, \n  Clock,\n  CheckCircle,\n  Award\n} from \"lucide-react\";\n\nconst features = [\n  {\n    icon: FileText,\n    title: \"Complete document preparation and review\",\n    description: \"We ensure all documents meet embassy requirements\"\n  },\n  {\n    icon: CheckSquare,\n    title: \"Application form completion assistance\",\n    description: \"Expert help with filling out complex visa forms\"\n  },\n  {\n    icon: Calendar,\n    title: \"Embassy appointment scheduling\",\n    description: \"We handle appointment booking at embassies\"\n  },\n  {\n    icon: MessageCircle,\n    title: \"Interview preparation and coaching\",\n    description: \"Practice sessions and tips for visa interviews\"\n  },\n  {\n    icon: Search,\n    title: \"Follow-up and status tracking\",\n    description: \"Regular updates on your application progress\"\n  },\n  {\n    icon: Clock,\n    title: \"Urgent/express processing options\",\n    description: \"Fast-track services for urgent travel needs\"\n  }\n];\n\ninterface VisaApplicationForm {\n  fullName: string;\n  email: string;\n  phone: string;\n  nationality: string;\n  destination: string;\n  visaType: string;\n  travelDate: string;\n  duration: string;\n  purpose: string;\n  previousVisa: string;\n  additionalInfo: string;\n}\n\nexport default function VisaServices() {\n  const [applicationData, setApplicationData] = useState<VisaApplicationForm>({\n    fullName: \"\",\n    email: \"\",\n    phone: \"\",\n    nationality: \"\",\n    destination: \"\",\n    visaType: \"\",\n    travelDate: \"\",\n    duration: \"\",\n    purpose: \"\",\n    previousVisa: \"\",\n    additionalInfo: \"\"\n  });\n\n  const handleInputChange = (field: keyof VisaApplicationForm, value: string) => {\n    setApplicationData(prev => ({ ...prev, [field]: value }));\n    console.log(`Updated ${field}:`, value);\n  };\n\n  const handleApplicationSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    console.log(\"Visa application submitted:\", applicationData);\n    alert(\"Thank you! Our visa experts will contact you within 24 hours to begin the application process.\");\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Header />\n      \n      {/* Hero Section */}\n      <section className=\"pt-20 pb-12 bg-gradient-to-br from-primary/10 via-background to-accent/10\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <div className=\"flex items-center justify-center gap-2 mb-4\">\n              <FileText className=\"h-8 w-8 text-primary\" />\n              <Badge variant=\"outline\">High Success Rate</Badge>\n            </div>\n            <h1 className=\"text-4xl md:text-6xl font-bold text-foreground mb-6\">\n              Visa Application Services\n            </h1>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Navigate the complex world of visa applications with our expert assistance. \n              We have a high success rate and deep knowledge of requirements for different countries.\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Success Rate Banner */}\n      <section className=\"py-8 bg-primary/5 border-y\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-center gap-8 text-center\">\n            <div>\n              <div className=\"text-3xl font-bold text-primary\">98%</div>\n              <div className=\"text-sm text-muted-foreground\">Success Rate</div>\n            </div>\n            <div>\n              <div className=\"text-3xl font-bold text-primary\">50+</div>\n              <div className=\"text-sm text-muted-foreground\">Countries</div>\n            </div>\n            <div>\n              <div className=\"text-3xl font-bold text-primary\">24/7</div>\n              <div className=\"text-sm text-muted-foreground\">Support</div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Features Section */}\n      <section className=\"py-16 bg-muted/30\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-foreground mb-4\">What We Offer</h2>\n            <p className=\"text-lg text-muted-foreground\">Comprehensive visa application support services</p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {features.map((feature, index) => {\n              const IconComponent = feature.icon;\n              return (\n                <Card key={index} className=\"text-center h-full\" data-testid={`visa-feature-${index}`}>\n                  <CardContent className=\"pt-6\">\n                    <div className=\"w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                      <IconComponent className=\"h-6 w-6 text-primary\" />\n                    </div>\n                    <h3 className=\"text-lg font-semibold text-foreground mb-2\">{feature.title}</h3>\n                    <p className=\"text-muted-foreground\">{feature.description}</p>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Application Form Section */}\n      <section className=\"py-16 bg-background\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <Card>\n            <CardHeader className=\"text-center\">\n              <CardTitle className=\"text-2xl\">Start Visa Process</CardTitle>\n              <p className=\"text-muted-foreground\">Fill out this form and our experts will guide you through the entire process</p>\n            </CardHeader>\n            <CardContent>\n              <form onSubmit={handleApplicationSubmit} className=\"space-y-6\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"fullName\">Full Name (as in passport)</Label>\n                    <Input\n                      id=\"fullName\"\n                      placeholder=\"Your full name\"\n                      value={applicationData.fullName}\n                      onChange={(e) => handleInputChange(\"fullName\", e.target.value)}\n                      data-testid=\"input-fullname\"\n                      required\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"nationality\">Nationality</Label>\n                    <Select value={applicationData.nationality} onValueChange={(value) => handleInputChange(\"nationality\", value)}>\n                      <SelectTrigger data-testid=\"select-nationality\">\n                        <SelectValue placeholder=\"Select nationality\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"Nigerian\">Nigerian</SelectItem>\n                        <SelectItem value=\"Ghanaian\">Ghanaian</SelectItem>\n                        <SelectItem value=\"Kenyan\">Kenyan</SelectItem>\n                        <SelectItem value=\"Other\">Other</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"email\">Email Address</Label>\n                    <Input\n                      id=\"email\"\n                      type=\"email\"\n                      placeholder=\"your@email.com\"\n                      value={applicationData.email}\n                      onChange={(e) => handleInputChange(\"email\", e.target.value)}\n                      data-testid=\"input-email\"\n                      required\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"phone\">Phone Number</Label>\n                    <Input\n                      id=\"phone\"\n                      placeholder=\"+234...\"\n                      value={applicationData.phone}\n                      onChange={(e) => handleInputChange(\"phone\", e.target.value)}\n                      data-testid=\"input-phone\"\n                      required\n                    />\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"destination\">Destination Country</Label>\n                    <Select value={applicationData.destination} onValueChange={(value) => handleInputChange(\"destination\", value)}>\n                      <SelectTrigger data-testid=\"select-destination\">\n                        <SelectValue placeholder=\"Select destination\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"USA\">United States</SelectItem>\n                        <SelectItem value=\"UK\">United Kingdom</SelectItem>\n                        <SelectItem value=\"Canada\">Canada</SelectItem>\n                        <SelectItem value=\"Germany\">Germany</SelectItem>\n                        <SelectItem value=\"France\">France</SelectItem>\n                        <SelectItem value=\"Dubai\">Dubai (UAE)</SelectItem>\n                        <SelectItem value=\"Other\">Other Country</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"visaType\">Visa Type</Label>\n                    <Select value={applicationData.visaType} onValueChange={(value) => handleInputChange(\"visaType\", value)}>\n                      <SelectTrigger data-testid=\"select-visa-type\">\n                        <SelectValue placeholder=\"Select visa type\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"Tourist\">Tourist/Visitor</SelectItem>\n                        <SelectItem value=\"Business\">Business</SelectItem>\n                        <SelectItem value=\"Student\">Student</SelectItem>\n                        <SelectItem value=\"Work\">Work/Employment</SelectItem>\n                        <SelectItem value=\"Transit\">Transit</SelectItem>\n                        <SelectItem value=\"Other\">Other</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"travelDate\">Intended Travel Date</Label>\n                    <Input\n                      id=\"travelDate\"\n                      type=\"date\"\n                      value={applicationData.travelDate}\n                      onChange={(e) => handleInputChange(\"travelDate\", e.target.value)}\n                      data-testid=\"input-travel-date\"\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"duration\">Duration of Stay</Label>\n                    <Select value={applicationData.duration} onValueChange={(value) => handleInputChange(\"duration\", value)}>\n                      <SelectTrigger data-testid=\"select-duration\">\n                        <SelectValue placeholder=\"Select duration\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"1-2 weeks\">1-2 weeks</SelectItem>\n                        <SelectItem value=\"1 month\">1 month</SelectItem>\n                        <SelectItem value=\"3 months\">3 months</SelectItem>\n                        <SelectItem value=\"6 months\">6 months</SelectItem>\n                        <SelectItem value=\"1 year+\">1 year or more</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"purpose\">Purpose of Travel</Label>\n                    <Textarea\n                      id=\"purpose\"\n                      placeholder=\"Brief description of your travel purpose\"\n                      value={applicationData.purpose}\n                      onChange={(e) => handleInputChange(\"purpose\", e.target.value)}\n                      data-testid=\"textarea-purpose\"\n                      rows={3}\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"previousVisa\">Previous Visa History</Label>\n                    <Select value={applicationData.previousVisa} onValueChange={(value) => handleInputChange(\"previousVisa\", value)}>\n                      <SelectTrigger data-testid=\"select-previous-visa\">\n                        <SelectValue placeholder=\"Have you applied before?\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"No\">First time applicant</SelectItem>\n                        <SelectItem value=\"Yes-Approved\">Previous visa approved</SelectItem>\n                        <SelectItem value=\"Yes-Denied\">Previous visa denied</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"additionalInfo\">Additional Information</Label>\n                  <Textarea\n                    id=\"additionalInfo\"\n                    placeholder=\"Any other relevant information about your application\"\n                    value={applicationData.additionalInfo}\n                    onChange={(e) => handleInputChange(\"additionalInfo\", e.target.value)}\n                    data-testid=\"textarea-additional-info\"\n                    rows={3}\n                  />\n                </div>\n\n                <Button type=\"submit\" size=\"lg\" className=\"w-full\" data-testid=\"button-start-visa-process\">\n                  <CheckCircle className=\"mr-2 h-5 w-5\" />\n                  Start Visa Process\n                </Button>\n              </form>\n            </CardContent>\n          </Card>\n        </div>\n      </section>\n\n      {/* Pricing Section */}\n      <section className=\"py-16 bg-muted/30\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"text-3xl font-bold text-foreground mb-8\">Service Fee</h2>\n          <div className=\"max-w-2xl mx-auto\">\n            <Card>\n              <CardContent className=\"pt-6\">\n                <div className=\"text-center\">\n                  <Badge variant=\"secondary\" className=\"mb-4\">Affordable</Badge>\n                  <h3 className=\"text-xl font-semibold text-foreground mb-2\">Varies by Country and Visa Type</h3>\n                  <p className=\"text-muted-foreground\">\n                    Our service fees depend on the destination country and type of visa. \n                    We provide transparent pricing with no hidden charges after consultation.\n                  </p>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":16052},"dev.js":{"content":"#!/usr/bin/env node\n\nimport { spawn } from 'child_process';\nimport path from 'path';\nimport { fileURLToPath } from 'url';\n\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\n\nconsole.log('🚀 Starting SNSP Travel application...');\n\n// Function to create colored output\nconst colorLog = (color, prefix, data) => {\n  const colors = {\n    red: '\\x1b[31m',\n    green: '\\x1b[32m',\n    yellow: '\\x1b[33m',\n    blue: '\\x1b[34m',\n    magenta: '\\x1b[35m',\n    cyan: '\\x1b[36m',\n    reset: '\\x1b[0m'\n  };\n  \n  console.log(`${colors[color]}[${prefix}]${colors.reset} ${data}`);\n};\n\n// Start backend server\nconsole.log('Starting backend server...');\nconst backend = spawn('tsx', ['src/index.ts'], {\n  cwd: path.join(__dirname, 'backend'),\n  stdio: 'pipe',\n  shell: true\n});\n\nbackend.stdout.on('data', (data) => {\n  colorLog('blue', 'BACKEND', data.toString().trim());\n});\n\nbackend.stderr.on('data', (data) => {\n  colorLog('red', 'BACKEND-ERR', data.toString().trim());\n});\n\n// Start frontend server\nconsole.log('Starting frontend server...');\nconst frontend = spawn('npm', ['run', 'dev'], {\n  cwd: path.join(__dirname, 'frontend'),\n  stdio: 'pipe',\n  shell: true\n});\n\nfrontend.stdout.on('data', (data) => {\n  colorLog('green', 'FRONTEND', data.toString().trim());\n});\n\nfrontend.stderr.on('data', (data) => {\n  colorLog('yellow', 'FRONTEND-ERR', data.toString().trim());\n});\n\n// Handle process cleanup\nconst cleanup = () => {\n  console.log('\\n🛑 Shutting down servers...');\n  backend.kill('SIGTERM');\n  frontend.kill('SIGTERM');\n  process.exit(0);\n};\n\nprocess.on('SIGINT', cleanup);\nprocess.on('SIGTERM', cleanup);\n\n// Handle child process exits\nbackend.on('exit', (code) => {\n  colorLog('red', 'BACKEND', `Backend exited with code ${code}`);\n});\n\nfrontend.on('exit', (code) => {\n  colorLog('red', 'FRONTEND', `Frontend exited with code ${code}`);\n});\n\nconsole.log('📱 Frontend will be available at: http://localhost:5173');\nconsole.log('🔧 Backend API will be available at: http://localhost:8080');\nconsole.log('💡 Press Ctrl+C to stop both servers');","size_bytes":2061},"start.js":{"content":"#!/usr/bin/env node\n\nimport { spawn } from 'child_process';\nimport path from 'path';\nimport { fileURLToPath } from 'url';\n\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\n\n// Start backend server\nconst backend = spawn('npm', ['run', 'dev'], {\n  cwd: path.join(__dirname, 'backend'),\n  stdio: 'inherit',\n  shell: true\n});\n\n// Start frontend server\nconst frontend = spawn('npm', ['run', 'dev'], {\n  cwd: path.join(__dirname, 'frontend'), \n  stdio: 'inherit',\n  shell: true\n});\n\n// Handle process cleanup\nprocess.on('SIGINT', () => {\n  console.log('\\nShutting down servers...');\n  backend.kill();\n  frontend.kill();\n  process.exit();\n});\n\nprocess.on('SIGTERM', () => {\n  backend.kill();\n  frontend.kill();\n  process.exit();\n});\n\nconsole.log('Starting SNSP Travel application...');\nconsole.log('Backend: http://localhost:3000');\nconsole.log('Frontend: http://localhost:5173');","size_bytes":888}},"version":1}